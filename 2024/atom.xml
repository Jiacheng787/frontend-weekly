<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024</id>
    <title>Frontend Weekly Blog</title>
    <updated>2024-12-12T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024"/>
    <subtitle>Frontend Weekly Blog</subtitle>
    <icon>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[置顶内容]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/welcome</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/welcome"/>
        <updated>2024-12-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[⭐️ 每周更新优质技术文章，欢迎点赞关注！]]></summary>
        <content type="html"><![CDATA[<p>⭐️ 每周更新优质技术文章，欢迎点赞关注！</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="typescript-工程化方案">TypeScript 工程化方案<a href="#typescript-工程化方案" class="hash-link" aria-label="Direct link to TypeScript 工程化方案" title="Direct link to TypeScript 工程化方案">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://zhuanlan.zhihu.com/p/403970666" target="_blank" rel="noopener noreferrer">2021 年 TypeScript + React 工程化指南</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7087811040591675428" target="_blank" rel="noopener noreferrer">都 2022 年了，手动搭建 React 开发环境很难吗</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7039583726375796749#heading-22" target="_blank" rel="noopener noreferrer">会写 TypeScript 但你真的会 TS 编译配置吗？</a></li><li>🌛 <a href="https://juejin.cn/post/6844904102355271694" target="_blank" rel="noopener noreferrer">【开源】一个 React + TS 项目模板</a><ul><li>一种是使用 ts-loader + babel-loader + fork-ts-checker-webpack-plugin 通过 typescript 进行编译和类型检查</li><li>另一种是 babel-loader + @babel/preset-typescript 使用 babel 进行编译，typescript 只负责类型检查（babel 7 以上）</li></ul></li><li>🌛 <a href="https://juejin.cn/post/6999807899149008910" target="_blank" rel="noopener noreferrer">2021年从零开发前端项目指南</a></li><li><a href="https://juejin.cn/post/6844904052094926855" target="_blank" rel="noopener noreferrer">Webpack 转译 Typescript 现有方案</a></li><li>🌛 <a href="https://segmentfault.com/a/1190000015315545" target="_blank" rel="noopener noreferrer">使用ESLint+Prettier来统一前端代码风格</a></li><li>🌛 <a href="https://segmentfault.com/a/1190000009546913" target="_blank" rel="noopener noreferrer">用 husky 和 lint-staged 构建超溜的代码检查工作流</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="ts-高级技巧">TS 高级技巧<a href="#ts-高级技巧" class="hash-link" aria-label="Direct link to TS 高级技巧" title="Direct link to TS 高级技巧">​</a></h2><ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/usDh1-Wzxrf4BftfWhwduA" target="_blank" rel="noopener noreferrer">你需要知道的TypeScript高级类型</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/WsldmkW2ovp-okxSY3le9g" target="_blank" rel="noopener noreferrer">Typescript 类型编程，从入门到通达</a></li><li>🌛 <a href="https://juejin.cn/post/7089809919251054628" target="_blank" rel="noopener noreferrer">如何进阶TypeScript功底？一文带你理解TS中各种高级语法</a></li><li>🌛 <a href="https://juejin.cn/post/6998785406619615269" target="_blank" rel="noopener noreferrer">TypeScript从平凡到不凡（基础篇）</a></li><li>🌛 <a href="https://juejin.cn/post/7150668738990178312" target="_blank" rel="noopener noreferrer">推荐12个值得学习的TypeScript宝库！</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/TUv8Cu6_ftQQ6lEWAwIa4w" target="_blank" rel="noopener noreferrer">TypeScript 类型系统：分布式条件类型全解</a></li><li>🌛 <a href="https://juejin.cn/post/7061556434692997156" target="_blank" rel="noopener noreferrer">接近天花板的TS类型体操，看懂你就能玩转TS了</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/-x8iVK-hlQd3-OZDC04A5A" target="_blank" rel="noopener noreferrer">TypeScript 类型编程: 从基础到编译器实战</a></li><li>🌛 <a href="https://juejin.cn/post/7050099282317148174" target="_blank" rel="noopener noreferrer">知其然，知其所以然：TypeScript 中的协变与逆变</a></li><li>⭐️ <a href="https://juejin.cn/post/7007251289721536543" target="_blank" rel="noopener noreferrer">TypeScript是如何工作的</a></li><li>⭐️ <a href="https://juejin.cn/post/6964692485415108645" target="_blank" rel="noopener noreferrer">TypeScript 高级用法</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/owtE_7PVLyz5XqwGofaTZg" target="_blank" rel="noopener noreferrer">抛砖引玉：TypeScript 从入门到实践</a></li><li>⭐️ <a href="https://juejin.cn/post/6871752423577223176" target="_blank" rel="noopener noreferrer">细数这些年被困扰过的 TS 问题</a></li><li><a href="https://juejin.cn/post/6844904055039344654" target="_blank" rel="noopener noreferrer">TS 常见问题整理（60多个，持续更新ing）</a></li><li><a href="https://juejin.cn/post/6994102811218673700" target="_blank" rel="noopener noreferrer">Ts高手篇：22个示例深入讲解Ts最晦涩难懂的高级类型工具</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="ts--框架">TS &amp;&amp; 框架<a href="#ts--框架" class="hash-link" aria-label="Direct link to TS &amp;&amp; 框架" title="Direct link to TS &amp;&amp; 框架">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://react-typescript-cheatsheet.netlify.app/" target="_blank" rel="noopener noreferrer">一份很全面的 React TypeScript 备忘录</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6952696734078369828" target="_blank" rel="noopener noreferrer">React + TypeScript实践</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7071066976830881823" target="_blank" rel="noopener noreferrer">用 Redux 做状态管理，真的很简单🦆</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7069555976717729805" target="_blank" rel="noopener noreferrer">「React进阶」react-router v6 通关指南</a></li><li><a href="https://juejin.cn/post/7058868160706904078" target="_blank" rel="noopener noreferrer">如何在项目中用好 TypeScript</a></li><li><a href="https://mp.weixin.qq.com/s/6DAyXFHIMW95FS0f3GyHpA" target="_blank" rel="noopener noreferrer">TypeScript 终极初学者指南</a></li><li><a href="https://juejin.cn/post/7021674818621669389" target="_blank" rel="noopener noreferrer">如何优雅地在 React 中使用TypeScript，看这一篇就够了！</a></li><li><a href="https://juejin.cn/post/6844904122550845448" target="_blank" rel="noopener noreferrer">精读《@types react 值得注意的 TS 技巧》</a></li><li><a href="https://juejin.cn/post/7068081327857205261" target="_blank" rel="noopener noreferrer">「1.9W字总结」一份通俗易懂的 TS 教程，入门 + 实战！</a></li><li>⭐️ <a href="https://juejin.cn/post/6844903865255477261" target="_blank" rel="noopener noreferrer">Vue3.0 前的 TypeScript 最佳入门实践</a><ul><li>虽然不是 Vue3 但是也推荐看下</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="前端框架">前端框架<a href="#前端框架" class="hash-link" aria-label="Direct link to 前端框架" title="Direct link to 前端框架">​</a></h2><ul><li><a href="https://juejin.cn/post/7047705995534925832" target="_blank" rel="noopener noreferrer">盘点掘金 2021 高赞 Vue 文章</a></li><li><a href="https://juejin.cn/post/7047690546417565733" target="_blank" rel="noopener noreferrer">盘点掘金 2021 高赞 React 文章</a></li><li><a href="https://juejin.cn/post/7047153016771706916" target="_blank" rel="noopener noreferrer">盘点掘金 2021 点赞高达 6000，收藏过万的文章</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5AnRvwmA-U76T52FR47w8Q" target="_blank" rel="noopener noreferrer">在撸 Vue 的 ⌘+K 唤起菜单库时，我学到了很多</a></li><li>⭐️ <a href="https://juejin.cn/post/6844903913410314247" target="_blank" rel="noopener noreferrer">Vue 项目性能优化 — 实践指南（网上最全 / 详细）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/66sos7nML5rA0ZZGJ5qFIQ" target="_blank" rel="noopener noreferrer">[<!-- -->科普文<!-- -->]<!-- --> Vue3 到底更新了什么？</a></li><li>⭐️ <a href="https://juejin.cn/post/6922641008106668045" target="_blank" rel="noopener noreferrer">揭秘 Vue.js 九个性能优化技巧</a></li><li>🌛 <a href="https://juejin.cn/post/7005880217684148231" target="_blank" rel="noopener noreferrer">我在项目中用实际用到的22个Vue优化技巧</a></li><li>🌛 <a href="https://juejin.cn/post/6844904165500518414" target="_blank" rel="noopener noreferrer">React Hooks 最佳实践</a></li><li>🌛 <a href="https://juejin.cn/post/7046358484610187277" target="_blank" rel="noopener noreferrer">React Hooks 使用误区，驳官方文档</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7043772161596588046" target="_blank" rel="noopener noreferrer">宝啊～来聊聊 9 种 React Hook</a></li><li>⭐️ <a href="https://juejin.cn/post/6933018383961194509" target="_blank" rel="noopener noreferrer">你可能不知道的流式 React Hooks（关于组织代码的最佳实践）</a></li><li>⭐️ <a href="https://juejin.cn/post/7025524870842679310#heading-58" target="_blank" rel="noopener noreferrer">从 16 个方向逐步搭建基于 vue3 的前端架构</a></li><li>⭐️ <a href="https://juejin.cn/post/6874007172578033677" target="_blank" rel="noopener noreferrer">34条我能告诉你的Vue之实操篇</a></li><li>🌛 <a href="https://zhuanlan.zhihu.com/p/461844358" target="_blank" rel="noopener noreferrer">React 体系下关于 Mobx 与 Redux 的一些思考</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/aOapwk4_qi8tNM7vaa7jGA" target="_blank" rel="noopener noreferrer">使用 React&amp;Mobx 的几个最佳实践</a></li><li>⭐️ <a href="https://juejin.cn/post/6995834232350179336" target="_blank" rel="noopener noreferrer">当设计模式遇上 Hooks</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6844903985338400782" target="_blank" rel="noopener noreferrer">React Hooks 详解 【近 1W 字】+ 项目实战</a></li><li><a href="https://juejin.cn/post/6989022564043456543" target="_blank" rel="noopener noreferrer">「React进阶」只用两个自定义 Hooks 就能替代 React-Redux ?</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6950063294270930980" target="_blank" rel="noopener noreferrer">「React进阶」 React全部api解读+基础实践大全(夯实基础2万字总结)</a></li><li><a href="https://juejin.cn/post/6963053793613185031" target="_blank" rel="noopener noreferrer">「React进阶」探案揭秘六种React‘灵异’现象</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6944863057000529933" target="_blank" rel="noopener noreferrer">「react进阶」一文吃透react-hooks原理</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="编程范式">编程范式<a href="#编程范式" class="hash-link" aria-label="Direct link to 编程范式" title="Direct link to 编程范式">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://github.com/shfshanyue/fp-jargon-zh" target="_blank" rel="noopener noreferrer">函数式编程术语</a></li><li><a href="https://juejin.cn/post/7065093131233919006" target="_blank" rel="noopener noreferrer">函数式编程（FP）</a></li><li><a href="https://juejin.cn/post/6974377246140301342" target="_blank" rel="noopener noreferrer">coding优雅指南：函数式编程</a></li><li><a href="https://juejin.cn/post/6892886272377880583" target="_blank" rel="noopener noreferrer">这些高阶的函数技术，你掌握了么</a></li><li><a href="https://juejin.cn/post/6844903936378273799" target="_blank" rel="noopener noreferrer">简明 JavaScript 函数式编程——入门篇</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="技术方案">技术方案<a href="#技术方案" class="hash-link" aria-label="Direct link to 技术方案" title="Direct link to 技术方案">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/7144881028661723167" target="_blank" rel="noopener noreferrer">如何去搞前端基建</a></li><li>⭐️ <a href="https://juejin.cn/post/7129298214959710244" target="_blank" rel="noopener noreferrer">一文教你搞定所有前端鉴权与后端鉴权方案，让你不再迷惘</a></li><li>⭐️ <a href="https://juejin.cn/post/7085679511290773534" target="_blank" rel="noopener noreferrer">腾讯二面：现在要你实现一个埋点监控SDK，你会怎么设计</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Fqy_pkgKvZrdZZc3t5xgdA" target="_blank" rel="noopener noreferrer">【第2774期】基于 Module Federation 的模块化跨栈方案探索</a></li><li><a href="https://juejin.cn/post/7087206796351242248" target="_blank" rel="noopener noreferrer">腾讯三面：Cookie的SameSite了解吧，那SameParty呢</a></li><li><a href="https://juejin.cn/post/7081539471585312805" target="_blank" rel="noopener noreferrer">腾讯一面：CORS为什么能保障安全？为什么只对复杂请求做预检</a></li><li><a href="https://mp.weixin.qq.com/s/3hXLSOQC-B5JGmkOaYjgqw" target="_blank" rel="noopener noreferrer">不使用第三方库怎么实现【前端引导页】功能</a></li><li><a href="https://juejin.cn/post/7124573626161954823" target="_blank" rel="noopener noreferrer">前端架构带你 封装axios，一次封装终身受益「美团后端连连点赞」</a></li><li><a href="https://mp.weixin.qq.com/s/d5M_-8XqFGYnpif7GQNmLA" target="_blank" rel="noopener noreferrer">【第2759期】异步分片计算在腾讯文档的实践</a></li><li><a href="https://mp.weixin.qq.com/s/FZUTFvOutS5NvURjj9jOFA" target="_blank" rel="noopener noreferrer">字节前端监控 SDK 体积与性能优化实践</a></li><li><a href="https://mp.weixin.qq.com/s/8cguocg_1DtZkHLfAGLyXg" target="_blank" rel="noopener noreferrer">使用 Vite 插件自动化实现骨架屏</a></li><li><a href="https://mp.weixin.qq.com/s/l7SA04BJovmJTUDIuobYiw" target="_blank" rel="noopener noreferrer">盘点12个yyds的微信小程序开源项目</a></li><li><a href="https://mp.weixin.qq.com/s/1HyQLZcnZN6I27p_hbfUPg" target="_blank" rel="noopener noreferrer">【第2628期】基于设计稿识别的可视化低代码系统实践</a></li><li><a href="https://mp.weixin.qq.com/s/Ba-3fMQXNXqIzVTjVUrWtQ" target="_blank" rel="noopener noreferrer">浅谈文档的实时协同编辑</a></li><li><a href="https://mp.weixin.qq.com/s/-WHafu5z-Ap4tjrbWesnmA" target="_blank" rel="noopener noreferrer">自动化生成骨架屏的技术方案设计与落地</a></li><li>⭐️ <a href="https://juejin.cn/post/7148254347401363463" target="_blank" rel="noopener noreferrer">谈谈JS二进制：File、Blob、FileReader、ArrayBuffer、Base64</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904046436843527" target="_blank" rel="noopener noreferrer">字节跳动面试官：请你实现一个大文件上传和断点续传</a></li><li>⭐️ <a href="https://juejin.cn/post/6990283221170651149" target="_blank" rel="noopener noreferrer">从零开始手写一个「开箱即用的大文件分片上传库」</a></li><li><a href="https://juejin.cn/post/6992007156320960542" target="_blank" rel="noopener noreferrer">5000字带你全面深入理解JS中的Stream API｜8月更文挑战</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="业务成长--软技能">业务成长 &amp;&amp; 软技能<a href="#业务成长--软技能" class="hash-link" aria-label="Direct link to 业务成长 &amp;&amp; 软技能" title="Direct link to 业务成长 &amp;&amp; 软技能">​</a></h2><ul><li>管理相关<ul><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/neSFlzQMh2P7ROwJxhVNkg" target="_blank" rel="noopener noreferrer">管理小册、一线同学推荐、一线Leader推荐、总监级推荐</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/FDK0a4HeO60fKyr6ioRYcw" target="_blank" rel="noopener noreferrer">谁能成为Leader，大Leader该做什么</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/dTXg9a4kXwVZi2N7mP71mg" target="_blank" rel="noopener noreferrer">少年，知道什么是信息差创造价值吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/oodAZtxzHCZVGIGS9rBzIA" target="_blank" rel="noopener noreferrer">什么是向上管理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/B3qgLTvSHzE33d6O-k7bAQ" target="_blank" rel="noopener noreferrer">你是如何做汇报的</a></li></ul></li><li>⭐️ <a href="https://juejin.cn/post/7073001183123603470" target="_blank" rel="noopener noreferrer">平时的工作如何体现一个人的技术深度</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/U6jAFVrgrKIm9--amZV5rA" target="_blank" rel="noopener noreferrer">如何成为优秀工程师之软技能篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MOWQ3rBFaITHSD2hvSelcw" target="_blank" rel="noopener noreferrer">干货！6个方面，32条总结教你提升职场经验</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/kozXWY95HXiQPGou1sfttg" target="_blank" rel="noopener noreferrer">聊聊如何学习</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/K36xQbYgGVme8v_p9_dhkQ" target="_blank" rel="noopener noreferrer">以前端架构师身份，从零开始搞事搞事搞事</a></li><li>⭐️ <a href="https://juejin.cn/post/7115634967945674765" target="_blank" rel="noopener noreferrer">Umi Core Maintainers，月榜作者，晋升 P8，来听我碎碎念如何｜2022 年中总结</a></li><li>⭐️ <a href="https://juejin.cn/post/7185376363808260152" target="_blank" rel="noopener noreferrer">一图胜千言系列——泳道图和数据流图</a></li><li>⭐️ <a href="https://juejin.cn/post/7153432342919397383" target="_blank" rel="noopener noreferrer">怎么做到一图胜千言</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/URJC9ERPrcniiFinUsIJkg" target="_blank" rel="noopener noreferrer">【图书】程序员的底层思维</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iTFj1Sn5vPTgkAT2Q9YC0w" target="_blank" rel="noopener noreferrer">作为大厂面试官，原来这种学生最吃香！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rJN14WFRTKjhoy8oWPulWw" target="_blank" rel="noopener noreferrer">用代码画时序图！YYDS</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/cbKpWKWrhyJwKQhlyYhQ_w" target="_blank" rel="noopener noreferrer">如何在项目开发中逐步成长</a></li><li>⭐️ <a href="https://juejin.cn/post/7114967732805697543" target="_blank" rel="noopener noreferrer">冴羽答读者问：如何在工作中打造影响力，带动同事</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1BdXL5dQfP6DnK7iJs6zGQ" target="_blank" rel="noopener noreferrer">入职Apifox研发组半年，我所提升的软技能｜文末抽书</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/G8SVu9CWrKwbT5jfXaBmtw" target="_blank" rel="noopener noreferrer">有哪些值得计算机专业学生加入的国企</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/usMxG3cAowUtO3Lvn9VjsQ" target="_blank" rel="noopener noreferrer">晋升，如何减少 50%+ 的答辩材料准备时间、调整心态（个人经验总结）</a></li><li><a href="https://mp.weixin.qq.com/s/1QMPfODUcH1p4pGaoO1owA" target="_blank" rel="noopener noreferrer">如何写好一份晋升PPT（附PPT模板）</a></li><li><a href="https://mp.weixin.qq.com/s/hXFWU6uuil1aC1lEYO_KhQ" target="_blank" rel="noopener noreferrer">如何画出一张优秀的架构图（老鸟必备）</a></li><li>⭐️ <a href="https://juejin.cn/post/6965675185890394119" target="_blank" rel="noopener noreferrer">精读《前端职业规划 - 2021 年》</a></li><li>⭐️ <a href="https://juejin.cn/post/7034419410706104356" target="_blank" rel="noopener noreferrer">2022年如何成为一名优秀的大前端Leader？</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/n4Pa0Bao1ISS68IOPWGI_Q" target="_blank" rel="noopener noreferrer">技术人的七大必备特质</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6906468062943182862#heading-8" target="_blank" rel="noopener noreferrer">初级工程师如何快速成长和寻求突破</a></li><li><a href="https://mp.weixin.qq.com/s/NRqhJax8e6K8LMCNZSSozA" target="_blank" rel="noopener noreferrer">年底了，你是如何做工作汇报的？</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904103504527374" target="_blank" rel="noopener noreferrer">写给初中级前端的高级进阶指南</a></li><li><a href="https://juejin.cn/post/7041713124210114567" target="_blank" rel="noopener noreferrer">在政采云如何写前端技术方案文档</a></li><li><a href="https://juejin.cn/post/7017643726944108558" target="_blank" rel="noopener noreferrer">如何编写前端设计文档</a></li><li>⭐️ <a href="https://juejin.cn/post/6901845776880795662#heading-0" target="_blank" rel="noopener noreferrer">理清思路，前端技术调研到底应该怎么做？</a></li><li><a href="https://juejin.cn/post/6869548364640288781" target="_blank" rel="noopener noreferrer">从实习到入职：与你分享我在政采云的工作和成长</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="git-相关">Git 相关<a href="#git-相关" class="hash-link" aria-label="Direct link to Git 相关" title="Direct link to Git 相关">​</a></h2><ul><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/250493093" target="_blank" rel="noopener noreferrer">血泪教训之请不要再轻视Git —— 我在工作中是如何使用 Git 的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aTr6xf4BEuF-yxL340TnLg" target="_blank" rel="noopener noreferrer">GitHub 搜索技巧：如何更有效地搜索 issue、repo 和更多信息</a></li><li>⭐️ <a href="https://juejin.cn/post/7046720828901163016" target="_blank" rel="noopener noreferrer">如果你还不会用git回滚代码，那你一定要来看看</a></li><li>⭐️ <a href="https://juejin.cn/post/7071780876501123085" target="_blank" rel="noopener noreferrer">Git不要只会pull和push，试试这5条提高效率的命令</a></li><li><a href="https://juejin.cn/post/7046409685561245733" target="_blank" rel="noopener noreferrer">利用好 git bisect 这把利器，帮助你快速定位疑难 bug</a></li><li>⭐️ <a href="https://juejin.cn/post/7024043015794589727" target="_blank" rel="noopener noreferrer">前端架构师的 git 功力，你有几成火候？</a></li><li>⭐️ <a href="https://segmentfault.com/a/1190000040712052" target="_blank" rel="noopener noreferrer">两条命令让你的git自动变基</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6844904191203213326" target="_blank" rel="noopener noreferrer">多年 Git 使用心得 &amp; 常见问题整理</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6974184935804534815" target="_blank" rel="noopener noreferrer">我在工作中是如何使用 git 的</a></li><li>🌛 <a href="https://juejin.cn/post/7000186205224566791" target="_blank" rel="noopener noreferrer">为什么 husky 放弃了传统的 JS 配置</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904036068491278" target="_blank" rel="noopener noreferrer">你可能已经忽略的git commit规范</a></li><li><a href="https://gitmoji.dev/" target="_blank" rel="noopener noreferrer">gitmoji: An emoji guide for your commit messages</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="源码系列">源码系列<a href="#源码系列" class="hash-link" aria-label="Direct link to 源码系列" title="Direct link to 源码系列">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/6982004709145968677" target="_blank" rel="noopener noreferrer">[建议收藏] 你想知道的Vue3核心源码这里都有</a></li><li>⭐️ <a href="https://juejin.cn/post/7048970987500470279" target="_blank" rel="noopener noreferrer">六千字详解！vue3 响应式是如何实现的？</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7019185205336342542" target="_blank" rel="noopener noreferrer">Redux通关简洁攻略 -- 看这一篇就够了！</a></li><li>⭐️ <a href="https://juejin.cn/post/6978654109893132318" target="_blank" rel="noopener noreferrer">手写系列-实现一个铂金段位的 React</a></li><li>⭐️ <a href="https://juejin.cn/post/7010539227284766751" target="_blank" rel="noopener noreferrer">React 运行时优化方案的演进</a></li><li>⭐️ <a href="https://juejin.cn/post/6990974525273800712" target="_blank" rel="noopener noreferrer">带你快速手写一个简易版vue了解vue响应式</a></li><li><a href="https://juejin.cn/post/7072321805792313357" target="_blank" rel="noopener noreferrer">Vue3.2 vDOM diff流程分析之一：diff算法</a></li><li><a href="https://juejin.cn/post/6977363265965785102" target="_blank" rel="noopener noreferrer">2021年，让我们手写一个mini版本的vue2.x和vue3.x框架</a></li><li><a href="https://juejin.cn/post/6846687602679119885" target="_blank" rel="noopener noreferrer">Vue(v2.6.11)万行源码生啃，就硬刚！</a></li><li><a href="https://juejin.cn/post/6992018709439053837" target="_blank" rel="noopener noreferrer">尤雨溪国外教程：亲手带你写个简易版的Vue！</a></li><li><a href="https://codepen.io/collection/DkxpbE?cursor=ZD0wJm89MCZwPTEmdj00" target="_blank" rel="noopener noreferrer">Vue 3 Workshop Code Samples</a></li><li>⭐️ <a href="https://juejin.cn/post/6997965021401579556" target="_blank" rel="noopener noreferrer">diff 算法深入一下？</a></li><li>⭐️ <a href="https://juejin.cn/post/6997943192851054606" target="_blank" rel="noopener noreferrer">Vue 3.2 发布了，那尤雨溪是怎么发布 Vue.js 的？</a></li><li>⭐️ <a href="https://juejin.cn/post/6994976281053888519" target="_blank" rel="noopener noreferrer">初学者也能看懂的 Vue3 源码中那些实用的基础工具函数</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="webpack-系列">Webpack 系列<a href="#webpack-系列" class="hash-link" aria-label="Direct link to Webpack 系列" title="Direct link to Webpack 系列">​</a></h2><ul><li><a href="https://juejin.cn/post/6937125495439900685" target="_blank" rel="noopener noreferrer">Webpack 案例 —— vue-loader 原理分析</a><ul><li>通过编写一个 plugin，在预处理阶段通过插件 apply 函数动态修改 webpack 配置，注入 vue-loader 专用的 rules</li></ul></li><li>⭐️ <a href="https://juejin.cn/post/7047777251949019173" target="_blank" rel="noopener noreferrer">超硬核｜带你畅游在 Webpack 插件开发者的世界</a></li><li>⭐️ <a href="https://juejin.cn/post/7170852747749621791" target="_blank" rel="noopener noreferrer">二十张图片彻底讲明白Webpack设计理念，以看懂为目的</a></li><li>⭐️ <a href="https://juejin.cn/post/7164175171358556173" target="_blank" rel="noopener noreferrer">【中级/高级前端】为什么我建议你一定要读一读 Tapable 源码</a></li><li><a href="https://mp.weixin.qq.com/s/P3mzw_vmOR6K_Mj-963o3g" target="_blank" rel="noopener noreferrer">Tree shaking问题排查指南来啦</a></li><li><a href="https://zhuanlan.zhihu.com/p/32831172" target="_blank" rel="noopener noreferrer">你的Tree-Shaking并没什么卵用</a></li><li><a href="https://juejin.cn/post/6844903939289120782" target="_blank" rel="noopener noreferrer">手摸手 Webpack 多入口配置实践</a></li><li>⭐️ <a href="https://juejin.cn/post/7031546400034947108" target="_blank" rel="noopener noreferrer">Webapck5核心打包原理全流程解析</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/7023242274876162084" target="_blank" rel="noopener noreferrer">【万字】透过分析 webpack 面试题，构建 webpack5.x 知识体系</a></li><li>⭐️ <a href="https://juejin.cn/post/7021729340945596424" target="_blank" rel="noopener noreferrer">Webpack 原理系列十：HMR 原理全解析</a></li><li><a href="https://mp.weixin.qq.com/s/gwHwVxA4zh59SBvq-onM-g" target="_blank" rel="noopener noreferrer">Webpack5 实践 - 构建效率倍速提升！</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/mpF6W-4dElu0UPed03oJQw" target="_blank" rel="noopener noreferrer">Webpack 性能系列一: 使用 Cache 提升构建性能</a></li><li>🌛 <a href="https://juejin.cn/post/6910893471339708429" target="_blank" rel="noopener noreferrer">我是如何将网页性能提升5倍的 — 构建优化篇</a></li><li>⭐️ <a href="https://juejin.cn/post/6858905382861946894" target="_blank" rel="noopener noreferrer">Webpack配置全解析（优化篇）</a></li><li>⭐️ <a href="https://juejin.cn/post/7144934998884220958" target="_blank" rel="noopener noreferrer">如何快速成为一名熟练的 Webpack 配置工程师 - 上篇</a></li><li>⭐️ <a href="https://juejin.cn/post/7145025071432597541" target="_blank" rel="noopener noreferrer">如何快速成为一名熟练的 Webpack 配置工程师 - 下篇</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6996816316875161637" target="_blank" rel="noopener noreferrer">学习 Webpack5 之路（优化篇）- 近 7k 字</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6991774994552324133" target="_blank" rel="noopener noreferrer">学习 Webpack5 之路（实践篇）</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6991630925792542750" target="_blank" rel="noopener noreferrer">学习 Webpack5 之路（基础篇）</a></li><li>⭐️ <a href="https://juejin.cn/post/6844903912588181511" target="_blank" rel="noopener noreferrer">手把手带你入门 Webpack4</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6949040393165996040" target="_blank" rel="noopener noreferrer">[<!-- -->万字总结<!-- -->]<!-- --> 一文吃透 Webpack 核心原理</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="vite-系列">Vite 系列<a href="#vite-系列" class="hash-link" aria-label="Direct link to Vite 系列" title="Direct link to Vite 系列">​</a></h2><ul><li><a href="https://juejin.cn/post/7124112069355372581" target="_blank" rel="noopener noreferrer">学会这 20 个库，让你快速看懂 vue3 和 vite3 源码 🚀</a></li><li><a href="https://juejin.cn/post/7094984070999834655" target="_blank" rel="noopener noreferrer">面试官：你会看 Vite 源码吗</a></li><li><a href="https://juejin.cn/post/6986533364438138894" target="_blank" rel="noopener noreferrer">前端历史项目的 Vite 迁移实践总结</a></li><li><a href="https://juejin.cn/post/6979932627465666568" target="_blank" rel="noopener noreferrer">下一代前端构建工具 - Vite 2.x 源码级分析</a></li><li><a href="https://juejin.cn/post/6956564266812571656" target="_blank" rel="noopener noreferrer">面向未来的前端构建工具 - Vite ⚡️原理分析</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="pnpm--monorepo">PNPM &amp;&amp; Monorepo<a href="#pnpm--monorepo" class="hash-link" aria-label="Direct link to PNPM &amp;&amp; Monorepo" title="Direct link to PNPM &amp;&amp; Monorepo">​</a></h2><ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/beLkwHan2C8BuSArs53cIA" target="_blank" rel="noopener noreferrer">课代表：Turborepo 笔记</a></li><li>⭐️ <a href="https://juejin.cn/post/7015566240991150117" target="_blank" rel="noopener noreferrer">lerna + dumi + eslint多包管理实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/z-tKxgRPmdyR0zwc78Khgw" target="_blank" rel="noopener noreferrer">组件库Monmrepo架构与开发调试环境构建</a></li><li><a href="https://juejin.cn/post/7177585131861835837" target="_blank" rel="noopener noreferrer">React Native工程Monorepo改造实践</a></li><li><a href="https://mp.weixin.qq.com/s/JWks8VyuXoB5zaeYdyJPxw" target="_blank" rel="noopener noreferrer">【第2714期】从Multirepo到Monorepo 袋鼠云数栈前端研发效率提升探索之路</a></li><li><a href="https://mp.weixin.qq.com/s/N0CZABDD0TKTmdljH3y74A" target="_blank" rel="noopener noreferrer">Monorepo，大型前端项目管理模式实践</a></li><li><a href="https://juejin.cn/post/7094984070999834655" target="_blank" rel="noopener noreferrer">面试官：你会看 Vite 源码吗</a></li><li><a href="https://mp.weixin.qq.com/s/6peafvVjmcF65PFSggSLYQ" target="_blank" rel="noopener noreferrer">复活了！ Lerna V6 带来了哪些新东西</a></li><li><a href="https://juejin.cn/post/7098609682519949325" target="_blank" rel="noopener noreferrer">pnpm + workspace + changesets 构建你的 monorepo 工程</a></li><li><a href="https://juejin.cn/post/7161063570594070559" target="_blank" rel="noopener noreferrer">Element Plus 组件库核心技术揭秘：5. 从终端命令解析器说起谈谈 npm 包管理工具的运行原理</a></li><li><a href="https://juejin.cn/post/7157743898939359262" target="_blank" rel="noopener noreferrer">Element Plus 组件库相关技术揭秘：4. ESLint 技术原理与实战及代码规范自动化详解</a></li><li><a href="https://juejin.cn/post/7146183222425518093" target="_blank" rel="noopener noreferrer">Element Plus 组件库相关技术揭秘：2. 组件库工程化实战之 Monorepo 架构搭建</a></li><li><a href="https://juejin.cn/post/7129267782515949575" target="_blank" rel="noopener noreferrer">🚀Turborepo：发布当月就激增 3.8k Star，这款超神的新兴 Monorepo 方案，你不打算尝试下吗</a></li><li><a href="https://juejin.cn/post/7136925215388499998" target="_blank" rel="noopener noreferrer">最详细的 lerna 中文手册</a></li><li><a href="https://turborepo.org/docs/handbook/what-is-a-monorepo" target="_blank" rel="noopener noreferrer">Monorepo Handbook 新鲜出炉</a></li><li><a href="https://mp.weixin.qq.com/s/99nozy-vtFMGcBTxYvumWA" target="_blank" rel="noopener noreferrer">现代 Monorepo 工程技术选型，聊聊我的思考</a></li><li><a href="https://juejin.cn/post/7092766235380678687" target="_blank" rel="noopener noreferrer">看了9个开源的 Vue3 组件库，发现了这些前端的流行趋势</a></li><li><a href="https://zhuanlan.zhihu.com/p/455809528" target="_blank" rel="noopener noreferrer">深入浅出 tnpm rapid 模式 - 如何比 pnpm 快 10 秒</a></li><li><a href="https://mp.weixin.qq.com/s/grb2OlBYiwU3TOkEtNZReA" target="_blank" rel="noopener noreferrer">pnpm 源码结构及调试指南</a></li><li><a href="https://mp.weixin.qq.com/s/0Nx093GdMcYo5Mr5VRFDjw" target="_blank" rel="noopener noreferrer">【第2506期】JavaScript 包管理器简史（npm/yarn/pnpm）</a></li><li><a href="https://juejin.cn/post/7083414641610588168" target="_blank" rel="noopener noreferrer">前端现代包管理器的进化史</a></li><li><a href="https://juejin.cn/post/7053340250210795557" target="_blank" rel="noopener noreferrer">都2022年了，pnpm快到碗里来！</a></li><li><a href="https://juejin.cn/post/6932046455733485575" target="_blank" rel="noopener noreferrer">关于现代包管理器的深度思考——为什么现在我更推荐 pnpm 而不是 npm/yarn?</a></li><li><a href="https://juejin.cn/post/7051929587852247077" target="_blank" rel="noopener noreferrer">年终盘点：2022基于Monorepo的首个大趋势-TurboRepo</a></li><li><a href="https://juejin.cn/post/7030207667457130527" target="_blank" rel="noopener noreferrer">基于 Lerna 实现 Monorepo 项目管理</a></li><li><a href="https://juejin.cn/post/7043998041786810398" target="_blank" rel="noopener noreferrer">One For All：基于pnpm + lerna + typescript的最佳项目实践 - 理论篇</a></li><li><a href="https://juejin.cn/post/7029262501833359368" target="_blank" rel="noopener noreferrer">【我要做开源】Vue DevUI开源指南08：Monorepo改造</a></li><li><a href="https://juejin.cn/post/6972139870231724045" target="_blank" rel="noopener noreferrer">Monorepo 的这些坑，我们帮你踩过了！</a></li><li><a href="https://juejin.cn/post/6950082433647640612" target="_blank" rel="noopener noreferrer">开源项目都在用 monorepo，但是你知道居然有那么多坑么？</a></li><li><a href="https://juejin.cn/post/6924854598268108807" target="_blank" rel="noopener noreferrer">All in one：项目级 monorepo 策略最佳实践</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="rollup-系列">Rollup 系列<a href="#rollup-系列" class="hash-link" aria-label="Direct link to Rollup 系列" title="Direct link to Rollup 系列">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/7145090564801691684" target="_blank" rel="noopener noreferrer">【实战篇】最详细的Rollup打包项目教程</a></li><li>⭐️ <a href="https://juejin.cn/post/7144365208646418462" target="_blank" rel="noopener noreferrer">从0到1开发一个React组件库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xjY0d8eNTmAuCZKxKQeu7g" target="_blank" rel="noopener noreferrer">基于storybook组件库的技术选型该怎么选</a></li><li>⭐️ <a href="https://juejin.cn/post/7151653067593613320" target="_blank" rel="noopener noreferrer">一文聊完前端项目中的Babel配置</a></li><li>⭐️ <a href="https://juejin.cn/post/7126394898445500423" target="_blank" rel="noopener noreferrer">从 package.json 来聊聊如何管理一款优秀的 Npm 包</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mL1pv2kPKvtaHalr7PXKow" target="_blank" rel="noopener noreferrer">前端工程化基建探索：从内部机制和核心原理了解npm</a></li><li><a href="https://juejin.cn/post/7069555431303020580" target="_blank" rel="noopener noreferrer">一文入门rollup🪀！13组demo带你轻松驾驭</a></li><li><a href="https://juejin.cn/post/7051236803344334862" target="_blank" rel="noopener noreferrer">说不清rollup能输出哪6种格式😥差点被鄙视</a></li><li><a href="https://juejin.cn/post/7052307032971411463" target="_blank" rel="noopener noreferrer">从零开始发布自己的NPM包</a></li><li><a href="https://juejin.cn/post/6844903970469576718" target="_blank" rel="noopener noreferrer">前端组件/库打包利器rollup使用与配置实战</a></li><li><a href="https://juejin.cn/post/6869551115420041229" target="_blank" rel="noopener noreferrer">一文带你快速上手Rollup</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="微前端--模块联邦">微前端 &amp;&amp; 模块联邦<a href="#微前端--模块联邦" class="hash-link" aria-label="Direct link to 微前端 &amp;&amp; 模块联邦" title="Direct link to 微前端 &amp;&amp; 模块联邦">​</a></h2><ul><li>🌟 <a href="https://mp.weixin.qq.com/s/pT_tugg_EvE5pnMCaUqliw" target="_blank" rel="noopener noreferrer">Module Federation最佳实践</a></li><li>🌟 <a href="https://mp.weixin.qq.com/s/WXeUuUdgF_3djqBhh1siQA" target="_blank" rel="noopener noreferrer">模块联邦在微前端架构中的实践</a></li><li>🌟 <a href="https://mp.weixin.qq.com/s/u5oAcIYiGrl1qOujOYjzqw" target="_blank" rel="noopener noreferrer">基于 MF 的组件化共享工作流</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/l_KKNRUyJANN6wkoC2TlVQ" target="_blank" rel="noopener noreferrer">聊一聊关于微前端架构的几种技术选型</a></li><li>⭐️ <a href="https://juejin.cn/post/7121244973558661150" target="_blank" rel="noopener noreferrer">超大体量项目，微前端落地方案，看完后悔来找我</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Fqy_pkgKvZrdZZc3t5xgdA" target="_blank" rel="noopener noreferrer">【第2774期】基于 Module Federation 的模块化跨栈方案探索</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iS-prT1xZPV6cpH7MHRRdQ" target="_blank" rel="noopener noreferrer">【第1912期】探索 webpack5 新特性Module federation在腾讯文档的应用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PFKxQgZPER_XHUSbk_SQJA" target="_blank" rel="noopener noreferrer">【第1901期】Webpack 5 Module Federation: JavaScript 架构的变革者</a></li><li><a href="https://mp.weixin.qq.com/s/vy84FY3P6KPeWzDaNl6Ntg" target="_blank" rel="noopener noreferrer">全面敏捷模式下的微前端方案</a></li><li><a href="https://mp.weixin.qq.com/s/mvdOU8uVG9NjGPzInpPxJA" target="_blank" rel="noopener noreferrer">微前端场景下的代码共享</a></li><li><a href="https://mp.weixin.qq.com/s/LL6VZj36PKftbwaybBFmXg" target="_blank" rel="noopener noreferrer">一文带你进入微前端世界</a></li><li><a href="https://mp.weixin.qq.com/s/ylkY9HWTQKPlbDb2M33YWQ" target="_blank" rel="noopener noreferrer">微前端架构的几种技术选型</a></li><li><a href="https://mp.weixin.qq.com/s/yu1tKtwneoTI9eSGS4us-g" target="_blank" rel="noopener noreferrer">我们是怎么在项目中落地qiankun的</a></li><li><a href="https://juejin.cn/post/7101457212085633054" target="_blank" rel="noopener noreferrer">模块联邦浅析</a></li><li><a href="https://mp.weixin.qq.com/s/ovwjufnPmCoYNLMkv5xv2g" target="_blank" rel="noopener noreferrer">【第2618期】手把手教你定制一套适合团队的微前端体系</a></li><li><a href="https://mp.weixin.qq.com/s/zt7x2KjMT_cWvLVVa2-Hww" target="_blank" rel="noopener noreferrer">【工程化】探索webpack5中的Module Federation</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="vs-code-插件">VS Code 插件<a href="#vs-code-插件" class="hash-link" aria-label="Direct link to VS Code 插件" title="Direct link to VS Code 插件">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/4MmBSD-d-9T5-kFhcWNlTA" target="_blank" rel="noopener noreferrer">vscode插件原理浅析与实战</a></li><li><a href="https://github.com/microsoft/vscode-extension-samples" target="_blank" rel="noopener noreferrer">vscode-extension-samples</a></li><li><a href="https://mp.weixin.qq.com/s/e2gfSnBrR6rn7x37ZGLplg" target="_blank" rel="noopener noreferrer">开发一款专属的 VSCode 代码提示插件</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="前端工程化">前端工程化<a href="#前端工程化" class="hash-link" aria-label="Direct link to 前端工程化" title="Direct link to 前端工程化">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/7062617190981173278" target="_blank" rel="noopener noreferrer">来自未来，2022 年的前端人都在做什么?</a></li><li><a href="https://juejin.cn/post/7056612950412361741" target="_blank" rel="noopener noreferrer">为什么说 WebAssembly 是 Web 的未来？</a></li><li><a href="https://juejin.cn/post/7057114641507287048" target="_blank" rel="noopener noreferrer">easy-serverless 功能分析</a></li><li><a href="https://mp.weixin.qq.com/s/ckskF06PD43KHpKAGaYmRA" target="_blank" rel="noopener noreferrer">2022 年 JavaScript 开发工具的生态</a></li><li><a href="https://mp.weixin.qq.com/s/JZbsIqsqNeJmc__QFKpo1Q" target="_blank" rel="noopener noreferrer">超全面的前端新一代构建工具对比: esbuild、Snowpack、Vite、wmr</a></li><li><a href="https://mp.weixin.qq.com/s/3aVYGfahv5rZJbWBhaI3BA" target="_blank" rel="noopener noreferrer">esno，基于 Esbuild 的神器</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/qnA1tFKMXr7hwsEKFXKOZg" target="_blank" rel="noopener noreferrer">Deno 简介：它比 Node.js 更好吗？</a></li><li>⭐️ <a href="https://juejin.cn/post/7046204235226021901" target="_blank" rel="noopener noreferrer">基于 Next.js 的 SSR/SSG 方案了解一下？</a></li><li>🌛 <a href="https://juejin.cn/post/7085257325165936648" target="_blank" rel="noopener noreferrer">我是如何带领团队从零到一建立前端规范的</a></li><li>🌛 <a href="https://juejin.cn/post/7029512357428592648" target="_blank" rel="noopener noreferrer">前端架构师神技，三招统一团队代码风格</a></li><li>🌛 <a href="https://juejin.cn/post/6844904110601273357" target="_blank" rel="noopener noreferrer">手把手教你搭建一个灰度发布环境</a></li><li>⭐️ <a href="https://juejin.cn/post/7049696761858195486" target="_blank" rel="noopener noreferrer">ES6 以上版本代码要不要转码成 ES5 ?</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3TKcUeoyzXvH3MGVI6Dj9A" target="_blank" rel="noopener noreferrer">ESM 与 CJS 的 Interop 来世今生</a></li><li>⭐️ <a href="https://www.zhihu.com/question/493891614/answer/2269197391" target="_blank" rel="noopener noreferrer">2022 前端技术领域会有哪些新的变化？</a></li><li>🌛 <a href="https://segmentfault.com/a/1190000040496020" target="_blank" rel="noopener noreferrer">前端构建这十年</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="软件架构--设计模式">软件架构 &amp;&amp; 设计模式<a href="#软件架构--设计模式" class="hash-link" aria-label="Direct link to 软件架构 &amp;&amp; 设计模式" title="Direct link to 软件架构 &amp;&amp; 设计模式">​</a></h2><ul><li>⭐️ Software Engineering at Google<ul><li>在线阅读：<a href="https://abseil.io/blog/04222021-swe-book" target="_blank" rel="noopener noreferrer">https://abseil.io/blog/04222021-swe-book</a></li><li>PDF 下载：<a href="https://github.com/garfield-dev-team/Frontend-Training-Program/blob/main/OReilly.Software.Engineering.at.Google.2020.3.pdf" target="_blank" rel="noopener noreferrer">https://github.com/garfield-dev-team/Frontend-Training-Program/blob/main/OReilly.Software.Engineering.at.Google.2020.3.pdf</a></li></ul></li><li><a href="https://dev.to/wiseai/the-ultimate-guide-to-software-engineering-545e" target="_blank" rel="noopener noreferrer">The Ultimate Guide To Software Engineering</a></li><li>⭐️ <a href="https://juejin.cn/post/7145014659584622629" target="_blank" rel="noopener noreferrer">语雀桌面端技术架构实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/kkSQu7zdr6x_CZRE5uW-lg" target="_blank" rel="noopener noreferrer">聊聊分布式一致性！</a></li><li><a href="https://mp.weixin.qq.com/s/kFjfzwTOdaKA2ym63VR3DQ" target="_blank" rel="noopener noreferrer">探秘微信业务优化：DDD从入门到实践</a></li><li><a href="https://mp.weixin.qq.com/s/12BS4V6fvXkeb84XDpPnHw" target="_blank" rel="noopener noreferrer">了解微前端，深入前端架构的前世今生</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yyoaDbKsvhdZbAL8T2V-zg" target="_blank" rel="noopener noreferrer">忘了又看，看了又忘？保姆级教学，一口气教你玩转 3 种高频设计模式！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ocPx6Sw09ioDyz_IOWK69Q" target="_blank" rel="noopener noreferrer">工作中常见的 6 种设计模式，你用过几种</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3MwRLM0jDmwv5l6gamFjcw" target="_blank" rel="noopener noreferrer">【第2757期】软件架构的23个基本原则</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iB23DV4hovPDdf5_4TCaOA" target="_blank" rel="noopener noreferrer">【第2677期】如何在React中应用SOLID原则</a></li><li><a href="https://mp.weixin.qq.com/s/1h6yqCWyzYLM8WPGlGdtVA" target="_blank" rel="noopener noreferrer">【第2703期】软件架构手册</a></li><li><a href="https://mp.weixin.qq.com/s/KHeo5bdY4cjPfA5I1mjXWw" target="_blank" rel="noopener noreferrer">【第2126期】每个开发者都应该知道的 SOLID 原则</a></li><li><a href="https://mp.weixin.qq.com/s/mz5S1iiRWkk-KKJg5lOOJQ" target="_blank" rel="noopener noreferrer">基于 TypeScript 理解程序设计的 SOLID 原则</a></li><li><a href="https://www.yuque.com/surfacew/fe/qg0uev" target="_blank" rel="noopener noreferrer">深入浅出前端做控制反转与依赖注入</a></li><li><a href="https://mp.weixin.qq.com/s/hP5YMgJTgaVIlaK-XJ3Bcw" target="_blank" rel="noopener noreferrer">javascript的23种设计模式</a></li><li><a href="https://mp.weixin.qq.com/s/iZ9BX6cCCp_TB-SC3knuew" target="_blank" rel="noopener noreferrer">实战！如何从零搭建10万级 QPS 大流量、高并发优惠券系统</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/jU0awhez7QzN_nKrm4BNwg" target="_blank" rel="noopener noreferrer">肝了一个月的 DDD，一文带你掌握</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SMAycMJPWr018sU04kbfbQ" target="_blank" rel="noopener noreferrer">领域驱动设计四论</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/BIYp9DNd_9sw5O2daiHmlA" target="_blank" rel="noopener noreferrer">万字长文助你上手软件领域驱动设计 DDD</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/QCIlheiEgmU4Qi-4b_XoqQ" target="_blank" rel="noopener noreferrer">用DDD(领域驱动设计)和ADT(代数数据类型)提升代码质量</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/hsH7LMBEDGe_df9UbfOvbQ" target="_blank" rel="noopener noreferrer">后台服务架构高性能设计之道</a></li><li><a href="https://coolshell.cn/articles/21672.html" target="_blank" rel="noopener noreferrer">我做系统架构的一些原则</a></li><li><a href="https://mp.weixin.qq.com/s/m1Dv-YG60AKArGu-URr88w" target="_blank" rel="noopener noreferrer">前端架构设计中如何做好技术决策？</a></li><li><a href="https://mp.weixin.qq.com/s/4bB_B5JTOrev8mqfG7K2cw" target="_blank" rel="noopener noreferrer">前端领域的 “干净架构”</a></li><li><a href="https://mp.weixin.qq.com/s/g9F05SRnQBTzzfx_2CKqhg" target="_blank" rel="noopener noreferrer">只会用传统开发模式？10分钟教你玩转敏捷！</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="持续集成">持续集成<a href="#持续集成" class="hash-link" aria-label="Direct link to 持续集成" title="Direct link to 持续集成">​</a></h2><ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/Bf5JNQjki9xLVzioYPy5qg" target="_blank" rel="noopener noreferrer">【好文分享】基于Jira的运维发布平台的设计与实现</a></li><li><a href="https://zhuanlan.zhihu.com/p/445217118" target="_blank" rel="noopener noreferrer">写给前端的 K8S 上手指南</a></li><li><a href="https://juejin.cn/post/7064906701941506061" target="_blank" rel="noopener noreferrer">GitLab CI 从入门到实践</a></li><li><a href="https://www.youtube.com/watch?v=fqMOX6JJhGo" target="_blank" rel="noopener noreferrer">Docker Tutorial for Beginners - A Full DevOps Course on How to Run Applications in Containers</a></li><li>⭐️ <a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/" target="_blank" rel="noopener noreferrer">Best practices for writing Dockerfiles</a></li><li>⭐️ <a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreferrer">Dockerfile reference</a></li><li><a href="https://juejin.cn/post/6844903793348329486" target="_blank" rel="noopener noreferrer">如何使用 docker 部署前端应用</a></li><li><a href="https://shanyue.tech/op/docker.html" target="_blank" rel="noopener noreferrer">docker 简易入门 - shanyue</a></li><li><a href="https://mp.weixin.qq.com/s/4aFJ7t37IwEMyq-u09Wf1g" target="_blank" rel="noopener noreferrer">小鲸鱼的前世今生--Docker</a></li><li><a href="https://juejin.cn/book/6844733746462064654/section/6844733746504007693" target="_blank" rel="noopener noreferrer">开发者必备的 Docker 实践指南</a></li><li><a href="https://mp.weixin.qq.com/s/U-zK6JEMpmK2Il68-ijcaw" target="_blank" rel="noopener noreferrer">谁说前端不需要学习docker？</a></li><li><a href="https://juejin.cn/post/7028222480326066213" target="_blank" rel="noopener noreferrer">使用Docker Compose、Nginx、SSH和Github Actions实现前端自动化部署测试机</a></li><li><a href="https://juejin.cn/post/6951684431597797389" target="_blank" rel="noopener noreferrer">前端开发者应该知道的 Centos/Docker/Nginx/Node/Jenkins 操作(🍡 长文)</a></li><li><a href="https://juejin.cn/post/7049920990351982628" target="_blank" rel="noopener noreferrer">保姆级指南：jekins+docker构建部署react项目实战</a></li><li><a href="https://juejin.cn/post/6993951401952935972" target="_blank" rel="noopener noreferrer">你的第一个 Docker + React + Express 全栈应用</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="服务端相关">服务端相关<a href="#服务端相关" class="hash-link" aria-label="Direct link to 服务端相关" title="Direct link to 服务端相关">​</a></h2><ul><li>推荐算法<ul><li><a href="https://mp.weixin.qq.com/s/GetU-ULhfvY8ri47Ht28GQ" target="_blank" rel="noopener noreferrer">图文解读：推荐算法架构——精排！</a></li><li><a href="https://mp.weixin.qq.com/s/wXb5uQJBCzSEq6IITP7VCQ" target="_blank" rel="noopener noreferrer">超强指南！推荐算法架构——重排</a></li><li><a href="https://mp.weixin.qq.com/s/1wOnG4dtNSI-x2x15-AjTQ" target="_blank" rel="noopener noreferrer">详细解读！推荐算法架构——召回</a></li><li><a href="https://mp.weixin.qq.com/s/YsK_8yyBNL5z269qT5CrIw" target="_blank" rel="noopener noreferrer">图文并茂！推荐算法架构——粗排</a></li><li><a href="https://juejin.cn/post/7153878508035391502" target="_blank" rel="noopener noreferrer">详解闲鱼推荐系统（长文收藏）</a></li></ul></li><li>Redis 相关<ul><li>⭐️ ⭐️ <a href="https://zhuanlan.zhihu.com/p/469102289" target="_blank" rel="noopener noreferrer">Redis详细入门教程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/fnOvw4JfwszNGVBMW0N2hw" target="_blank" rel="noopener noreferrer">Redis 只会用缓存？16种妙用让同事直呼牛X</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ThVtw8TVuhxIyYxJy6sOWw" target="_blank" rel="noopener noreferrer">深入浅出带你走进Redis！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/U87wrGsx0Eop3CbF9mlTwQ" target="_blank" rel="noopener noreferrer">万字图文讲透数据库缓存一致性问题</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/vwx99ER-9qiH9nfwtFW1zQ" target="_blank" rel="noopener noreferrer">Redis 事务遇上 @Transactional 有大坑！！记一次 Redis 生产事故</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/n6IEF2OinYN3slJXqc_xgw" target="_blank" rel="noopener noreferrer">Redis 实现分布式锁的 7 种方案</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WzAVtmFmEMhY-MiNEgQ0fw" target="_blank" rel="noopener noreferrer">如何保障 MySQL 和 Redis 的数据一致性</a></li><li>🌛 <a href="https://juejin.cn/post/7147602740405862407" target="_blank" rel="noopener noreferrer">Redis 持久化策略浅析</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/dCZm7e0aSEirhEqiCBvAyQ" target="_blank" rel="noopener noreferrer">图文结合！Redis延迟队列golang高效实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/frOhO8rj2Xvdix6tnjTOrw" target="_blank" rel="noopener noreferrer">用 Redis 都能实现哪些功能？这2万字+20张图给分析全了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mO819q_r9qLVuRBE8cjx1Q" target="_blank" rel="noopener noreferrer">如何保证数据库和缓存双写一致性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Cq-CF1BC4PWwGnlRp4HrnQ" target="_blank" rel="noopener noreferrer">为了拿捏 Redis 数据结构，我画了 40 张图（完整版）</a></li><li>⭐️ <a href="https://juejin.cn/post/7124572920403197965" target="_blank" rel="noopener noreferrer">Redis 5 种基本数据结构（String、List、Hash、Set、Sorted Set）详解 | JavaGuide</a></li></ul></li><li>Redis 实现分布式锁<ul><li><a href="https://mp.weixin.qq.com/s/2Rwy19C0eUshTWc_JfTPig" target="_blank" rel="noopener noreferrer">Redis分布式锁的10个坑</a></li><li><a href="https://mp.weixin.qq.com/s/p2rlkCRRj7h7-aojTidQbg" target="_blank" rel="noopener noreferrer">深入理解 go singleflight</a></li><li><a href="https://mp.weixin.qq.com/s/ESdfA5sJa6bmL-HvuWpoJA" target="_blank" rel="noopener noreferrer">面试官：如何用 Redis 实现分布式锁</a></li><li><a href="https://mp.weixin.qq.com/s/RS1kKvF_Ly576GV52bHQPg" target="_blank" rel="noopener noreferrer">如何用Redis实现分布式锁</a></li><li><a href="https://mp.weixin.qq.com/s/lrSQBK-Kihkj6994kQFpUQ" target="_blank" rel="noopener noreferrer">Go：分布式锁实现原理与最佳实践</a></li></ul></li><li>Web Server<ul><li>⭐️ <a href="https://juejin.cn/post/7085519712901136392" target="_blank" rel="noopener noreferrer">超越 Nginx！号称下一代 Web 服务器，用起来够优雅！</a></li></ul></li><li>IO多路复用<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/j1KjR5bRQV6oGrU5tsyHgg" target="_blank" rel="noopener noreferrer">从Linux零拷贝深入了解Linux-I/O</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5xj42JPKG8o5T7hjXIKywg" target="_blank" rel="noopener noreferrer">深入学习IO多路复用 select/poll/epoll 实现原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/bb7C6VNbq7REP9u8PsreSg" target="_blank" rel="noopener noreferrer">看一遍就理解：IO模型详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/qaUZ3AMA_dJkx2ZpyhJN2g" target="_blank" rel="noopener noreferrer">面试必备：零拷贝详解</a></li></ul></li><li>系统设计<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/FJi3ko9wjTBNWS79RVQf5A" target="_blank" rel="noopener noreferrer">技术总监分享的系统设计技巧，万能通用，稳的一批！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PPA8Iw6K2M2xVnGE-Tf6zw" target="_blank" rel="noopener noreferrer">高并发系统设计的15个锦囊</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5Jj-IClPhInXz7xsfUZEnQ" target="_blank" rel="noopener noreferrer">支付系统就该这么设计（万能通用），稳的一批！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/qhsVURhXm0Ot-jWq0khfEg" target="_blank" rel="noopener noreferrer">蚂蚁金服一面：十道经典面试题解析</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Ebh5iVsx0iExb5Wxq3tQFQ" target="_blank" rel="noopener noreferrer">公司新来一个同事，把优惠券系统设计的炉火纯青！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8GXe6sKPKk7Flbd_kNAp2Q" target="_blank" rel="noopener noreferrer">网关系统就该这么设计（万能通用），稳的一批！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/crzfBEGn78nUZ5H3MF8UZw" target="_blank" rel="noopener noreferrer">高并发下，幂等性如何保证</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/n6IEF2OinYN3slJXqc_xgw" target="_blank" rel="noopener noreferrer">Redis 实现分布式锁的 7 种方案</a></li><li><a href="https://mp.weixin.qq.com/s/Z0xVHgw-ZzZV-jOOOSsMUw" target="_blank" rel="noopener noreferrer">如何设计一个短链服务</a></li></ul></li><li>消息队列<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/D8ptc4SCqWtaWe-ZBhwXfA" target="_blank" rel="noopener noreferrer">聊聊RocketMQ存储模型</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mNpXpSVVVBuI59LI6vVvQA" target="_blank" rel="noopener noreferrer">面渣逆袭：RocketMQ二十三问</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/GeXtCJgo42u92FSS5V6oMQ" target="_blank" rel="noopener noreferrer">刨根问底 Kafka，核心知识点大贯通</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/J0zKPTNoJgiFvNT4M9BVcg" target="_blank" rel="noopener noreferrer">消息队列原理和选型：Kafka、RocketMQ 、RabbitMQ 和 ActiveMQ</a></li><li><a href="https://mp.weixin.qq.com/s/i_bwyEb8QqfVLxY-R9odag" target="_blank" rel="noopener noreferrer">你管这破玩意儿叫 MQ</a></li></ul></li><li>Elasticsearch 相关<ul><li>⭐️ <a href="https://juejin.cn/post/7155662252584992805" target="_blank" rel="noopener noreferrer">MyBatis-Plus同款Elasticsearch ORM框架，用起来够优雅！</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904117580595214" target="_blank" rel="noopener noreferrer">Elasticsearch快速入门，掌握这些刚刚好！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/GG_zrQlaiP2nfPOxzx_j9w" target="_blank" rel="noopener noreferrer">Elasticsearch 基础入门详文</a></li></ul></li><li>大数据相关<ul><li><a href="https://mp.weixin.qq.com/s/vua2g0_t1Y8KW4cNHSQdNw" target="_blank" rel="noopener noreferrer">一文了解-云原生大数据知识地图</a></li><li><a href="https://juejin.cn/post/7149487706991493156" target="_blank" rel="noopener noreferrer">【云原生】Hive on k8s 环境部署</a></li><li><a href="https://juejin.cn/post/7087484692718420005" target="_blank" rel="noopener noreferrer">大数据Hadoop之——数据仓库Hive</a></li><li><a href="https://juejin.cn/post/7136214451678052389" target="_blank" rel="noopener noreferrer">【云原生】Kubernetes（k8s）最完整版环境部署+master高可用实现</a></li><li><a href="https://juejin.cn/post/7141215211586863140" target="_blank" rel="noopener noreferrer">Flink 流批一体在字节跳动的探索与实践</a></li><li><a href="https://mp.weixin.qq.com/s/G66BCDUMzYE30p250JO0hg" target="_blank" rel="noopener noreferrer">大数据架构系列：如何理解湖仓一体</a></li><li><a href="https://mp.weixin.qq.com/s/yQavfvBayYbMEc7c9ObMxg" target="_blank" rel="noopener noreferrer">23张图，带你入门推荐系统</a></li><li><a href="https://mp.weixin.qq.com/s/gAhoIwPoFDlKbBmWzrHu8w" target="_blank" rel="noopener noreferrer">一文看懂大数据生态圈完整知识体系（文末送书）</a></li></ul></li><li>云原生监控<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/72UbwZTxo36eJVqGq8HBgw" target="_blank" rel="noopener noreferrer">自从项目上了SkyWalking，睡觉真香！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/D1JoTzdQnzUgX_yqT3N1BQ" target="_blank" rel="noopener noreferrer">自从线上项目用了这个监控系统，睡觉真香！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/bSw_QP4-xMKnBTmqAjkUGA" target="_blank" rel="noopener noreferrer">还在服务器上捞日志？快搭建一个ELK日志系统吧，真心强大！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/GfJqTG9XYx58eh5kImyeWg" target="_blank" rel="noopener noreferrer">主流监控系统技术选型，yyds！</a></li></ul></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/hJHMlbQpANwMjx9BetwkUg" target="_blank" rel="noopener noreferrer">一致性哈希算法解决的问题</a></li><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/482549860" target="_blank" rel="noopener noreferrer">一致性Hash算法原理总结</a></li><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/AGaxg4ymPvSnpt3dZuO9SA" target="_blank" rel="noopener noreferrer">100+篇原创！1900+转载！大家一起加油！</a></li><li><a href="https://mp.weixin.qq.com/s/l3l9d9sLiWoUM381E9o-3Q" target="_blank" rel="noopener noreferrer">解决了 Redis 大 key 问题，同事们都说牛皮！</a></li><li><a href="https://mp.weixin.qq.com/s/l_YdpyHht5Ayvrc7LFZNIA" target="_blank" rel="noopener noreferrer">图解|Linux内存背后的那些神秘往事</a></li><li><a href="https://juejin.cn/post/7064952956201730062" target="_blank" rel="noopener noreferrer">图解|什么是内容分发网络(cdn)</a></li><li><a href="https://juejin.cn/post/7070683049049980941" target="_blank" rel="noopener noreferrer">一键部署 K8S 环境，10分钟玩转，这款开源神器实在太香了！</a></li><li><a href="https://mp.weixin.qq.com/s/KIcn2TAwY58JGoWiz82Q2g" target="_blank" rel="noopener noreferrer">颜值爆表！Redis 官方可视化工具来啦，功能真心强大！</a></li><li><a href="https://juejin.cn/post/6844904017286561799" target="_blank" rel="noopener noreferrer">Nginx的这些妙用，你肯定有不知道的！</a></li><li><a href="https://juejin.cn/post/7064378702779891749" target="_blank" rel="noopener noreferrer">前端到底用nginx来做啥</a></li><li><a href="https://juejin.cn/post/7048952689601806366" target="_blank" rel="noopener noreferrer">一份简单够用的 Nginx Location 配置讲解</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="前端性能优化">前端性能优化<a href="#前端性能优化" class="hash-link" aria-label="Direct link to 前端性能优化" title="Direct link to 前端性能优化">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/6981673766178783262" target="_blank" rel="noopener noreferrer">写给中高级前端关于性能优化的9大策略和6大指标 | 网易四年实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Au_NNeamEoFEtlNvvVjpLw" target="_blank" rel="noopener noreferrer">前端监控系列3 ｜ 如何衡量一个站点的性能好坏</a></li><li>⭐️ <a href="https://juejin.cn/post/7052918009555320839" target="_blank" rel="noopener noreferrer">最全的前端性能定位总结</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/wJxj5QbOHwH9cKmqU5eSQw" target="_blank" rel="noopener noreferrer">Web页面全链路性能优化指南</a></li><li>⭐️ <a href="https://juejin.cn/post/7016900744695513125" target="_blank" rel="noopener noreferrer">字节跳动是如何落地微前端的</a></li><li>⭐️ <a href="https://juejin.cn/post/7048260643589193765" target="_blank" rel="noopener noreferrer">2022 年的 CSS</a></li><li>⭐️ <a href="https://juejin.cn/post/7054931603323093022" target="_blank" rel="noopener noreferrer">如何编写防御式的 CSS</a></li><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/396010993" target="_blank" rel="noopener noreferrer">前端 Code Review 不完全指北(万字长文，50+case)</a></li><li>🌛 <a href="https://juejin.cn/post/7020212914020302856" target="_blank" rel="noopener noreferrer">写在 2021 的前端性能优化指南</a></li><li><a href="https://juejin.cn/post/7000728875676205086" target="_blank" rel="noopener noreferrer">深入浅出 Performance 工具 &amp; API</a></li><li><a href="https://juejin.cn/post/6904582930174705677" target="_blank" rel="noopener noreferrer">使用 Performance 看看浏览器在做什么</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="前端组件库实战">前端组件库实战<a href="#前端组件库实战" class="hash-link" aria-label="Direct link to 前端组件库实战" title="Direct link to 前端组件库实战">​</a></h2><ul><li>⭐️ <a href="https://juejin.cn/post/7120893568553582622" target="_blank" rel="noopener noreferrer">快上车！搭建一个属于自己的组件库！</a></li><li>⭐️ <a href="https://juejin.cn/post/7117886038126624805" target="_blank" rel="noopener noreferrer">使用Vite和TypeScript带你从零打造一个属于自己的Vue3组件库</a></li><li>⭐️ <a href="https://juejin.cn/post/7069772395610898462" target="_blank" rel="noopener noreferrer">从arco-design的collapse组件分析如何吸收开源项目的知识</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904197863964685" target="_blank" rel="noopener noreferrer">从 Element UI 源码的构建流程来看前端 UI 库设计</a></li><li>⭐️ <a href="https://juejin.cn/post/7021528826798669854" target="_blank" rel="noopener noreferrer">尤大都推荐的组件库是如何开发出来的？</a></li><li><a href="https://juejin.cn/post/6983854006124675108" target="_blank" rel="noopener noreferrer">每个前端都值得拥有自己的组件库，就像每个夏天都拥有西瓜🍉</a></li><li><a href="https://juejin.cn/post/6930879590554402830" target="_blank" rel="noopener noreferrer">Vue3组件库工程化实战 --Element3</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="nodejs-系列">Node.js 系列<a href="#nodejs-系列" class="hash-link" aria-label="Direct link to Node.js 系列" title="Direct link to Node.js 系列">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://github.com/koala-coding/goodBlog" target="_blank" rel="noopener noreferrer">【程序员成长指北】node 必知必会系列</a></li><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/B051n14JbNHqJtQb68HBFA" target="_blank" rel="noopener noreferrer">Node.js 概述：架构、API、事件循环、并发</a></li><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/sSfj4BOjHNyzdjGc90yU8g" target="_blank" rel="noopener noreferrer">一篇文章构建你的 NodeJS 知识体系【上】</a></li><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/9SJL2UttCedNjF6CKyk3wg" target="_blank" rel="noopener noreferrer">一篇文章构建你的 NodeJS 知识体系【下】</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6887961766170066951" target="_blank" rel="noopener noreferrer">大厂是如何用DevCloud流水线实现自动化部署Web应用的？</a></li><li>⭐️ ⭐️ <a href="https://juejin.cn/post/6902659492161421325" target="_blank" rel="noopener noreferrer">手把手教你使用Rollup打包 📦 并发布自己的工具库 🔧</a></li><li>🌛 <a href="https://zhuanlan.zhihu.com/p/461945753" target="_blank" rel="noopener noreferrer">Node 案发现场揭秘 —— 未定义 “window” 对象引发的 SSR 内存泄露</a></li><li>🌛 <a href="https://cnodejs.org/topic/58eb5d378cda07442731569f" target="_blank" rel="noopener noreferrer">轻松排查线上Node内存泄漏问题</a></li><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/36728655" target="_blank" rel="noopener noreferrer">Node.js 流（stream）：你需要知道的一切</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/1DIDUvGoQcckRq757R9Ohw" target="_blank" rel="noopener noreferrer">最全面的 Node.js 资源汇总推荐</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yKm_U9Veh_1twIoXzM8Prw" target="_blank" rel="noopener noreferrer">Nest.js进阶系列四：Node.js中使用Redis原来这么简单！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/TmCtsbhjexZNCdvUSXdNCw" target="_blank" rel="noopener noreferrer">Redis学习-入门篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2CBGgtja04NnOerpKfk0Ug" target="_blank" rel="noopener noreferrer">Node.js 安全最佳实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PhuFfNAhvXAqW4eSbUqpKQ" target="_blank" rel="noopener noreferrer">2022年值得使用的 Node.js 框架</a></li><li>🌛 <a href="https://juejin.cn/post/7095354780079357966" target="_blank" rel="noopener noreferrer">NodeJs进阶开发、性能优化指南</a></li><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/502951532" target="_blank" rel="noopener noreferrer">Node.js 18 新特性解读</a></li><li>🌛 <a href="https://zhuanlan.zhihu.com/p/415361629" target="_blank" rel="noopener noreferrer">那些你应该说再见的 npm 祖传老库</a></li><li>🌛 <a href="https://github.com/unjs" target="_blank" rel="noopener noreferrer">unjs: Unified JavaScript Tools</a></li><li>🌛 <a href="https://github.com/vercel/pkg" target="_blank" rel="noopener noreferrer">pkg - 把 Node.js 项目打包为可执行文件</a></li><li>⭐️ <a href="https://github.com/oclif/oclif" target="_blank" rel="noopener noreferrer">Oclif v2.5：Heroku 开源的 CLI 框架</a></li><li>🌛 <a href="https://juejin.cn/post/6961790494514872333" target="_blank" rel="noopener noreferrer">JavaScript Debugger 原理揭秘</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/xCoTeyJDifi4Ymk0VsI2Ig" target="_blank" rel="noopener noreferrer">浅谈 Node.js 热更新</a></li><li>⭐️ <a href="https://juejin.cn/post/7044344538969669663" target="_blank" rel="noopener noreferrer">NodeJS加解密之Crypto</a></li><li>🌛 <a href="https://github.com/google/zx" target="_blank" rel="noopener noreferrer">zx - 谷歌开发的命令行脚本工具</a></li><li>🌛 <a href="https://github.com/node-fetch/node-fetch" target="_blank" rel="noopener noreferrer">node-fetch - node 环境下进行网络请求</a></li><li>⭐️ <a href="https://juejin.cn/post/6971770846872338439" target="_blank" rel="noopener noreferrer">浅析 NodeJS 多进程和集群</a></li><li>⭐️ <a href="https://github.com/privatenumber/tasuku" target="_blank" rel="noopener noreferrer">Tasuku - 面向 Node 的最小任务运行器</a></li><li>🌛 <a href="https://juejin.cn/post/7008504029277847565" target="_blank" rel="noopener noreferrer">Node.js的底层原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Gcx6E4cYo6WPB8PLI72NWg" target="_blank" rel="noopener noreferrer">认真写了个快速创建 Node 服务的CLI，看看对小伙伴们有帮忙吗？</a><ul><li>项目地址：<a href="https://github.com/koala-coding/create-bff-service-cli" target="_blank" rel="noopener noreferrer">https://github.com/koala-coding/create-bff-service-cli</a></li></ul></li></ul><div class="tabs-container tabList_oPPN"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_VDVc tabs__item--active">开源项目</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_VDVc">React 生态</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_VDVc">浏览器环境</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_VDVc">实用工具</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_VDVc">CLI 工具</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_xe4B"><ul><li>⭐️ <a href="https://github.com/antfu/taze" target="_blank" rel="noopener noreferrer">taze - 更新依赖版本的 CLI 工具</a></li><li>⭐️ <a href="https://github.com/egoist/haya" target="_blank" rel="noopener noreferrer">haya - Vite 的替代方案，提供基于 esbuild 的 devServer 和 bundler</a></li><li>⭐️ <a href="https://github.com/unjs/unbuild" target="_blank" rel="noopener noreferrer">unbuild - 第三方库打包工具</a></li><li>⭐️ <a href="https://github.com/egoist/tsup" target="_blank" rel="noopener noreferrer">tsup - 零配置的 TS 第三方库打包工具</a></li><li>⭐️ <a href="https://github.com/Rich-Harris/degit" target="_blank" rel="noopener noreferrer">degit - 简单的项目脚手架</a></li><li>⭐️ <a href="https://github.com/streamich/react-use" target="_blank" rel="noopener noreferrer">react-use - 一个 React Hooks 库</a></li><li><a href="https://github.com/tannerlinsley/react-query" target="_blank" rel="noopener noreferrer">react-query - 用于获取数据、缓存、异步更新状态的 hook</a></li><li><a href="https://github.com/luin/ioredis" target="_blank" rel="noopener noreferrer">ioredis - 专注于性能的全功能 Redis 客户端</a></li><li><a href="https://github.com/prisma/prisma" target="_blank" rel="noopener noreferrer">prisma - 下一代 Nodejs ORM 工具，支持各种数据库</a></li><li><a href="https://github.com/withastro/astro" target="_blank" rel="noopener noreferrer">astro - 静态站点构建工具</a></li><li><a href="https://github.com/pmndrs/zustand" target="_blank" rel="noopener noreferrer">zustand - 小型、快速可扩展的状态管理解决方案</a></li><li><a href="https://github.com/tauri-apps/tauri" target="_blank" rel="noopener noreferrer">tauri - 将前端项目打包为桌面应用，用于替代 electron</a></li><li><a href="https://github.com/trpc/trpc" target="_blank" rel="noopener noreferrer">tRPC - 方便快速的生成端对端类型安全的 API 定义</a></li><li><a href="https://github.com/MaxLeiter/Drift" target="_blank" rel="noopener noreferrer">Drift - 一个可以自己部署的代码片段服务，基于 Next.js 13 构建</a></li></ul></div><div role="tabpanel" class="tabItem_xe4B" hidden=""><ul><li>⭐️ <a href="https://github.com/bytedance/bytemd" target="_blank" rel="noopener noreferrer">bytemd - 字节出品的 markdown 编辑器</a></li><li>⭐️ <a href="https://github.com/bytedance/guide" target="_blank" rel="noopener noreferrer">guide - 字节出品的 React 新手引导组件</a></li><li>⭐️ <a href="https://github.com/rpearce/react-medium-image-zoom" target="_blank" rel="noopener noreferrer">react-medium-image-zoom - 受 Medium.com 启发的图片预览组件</a></li><li>⭐️ <a href="https://github.com/pacocoursey/cmdk" target="_blank" rel="noopener noreferrer">cmdk - 一个基于 React 的快速、可组合、无风格的命令面板</a></li><li>⭐️ <a href="https://github.com/eBay/nice-modal-react" target="_blank" rel="noopener noreferrer">nice-modal-react：来自 eBay 的模态框状态管理</a></li></ul></div><div role="tabpanel" class="tabItem_xe4B" hidden=""><ul><li>⭐️ <a href="https://github.com/date-fns/date-fns" target="_blank" rel="noopener noreferrer">date-fns - 现代化的 JavaScript 日期类库</a></li><li>⭐️ <a href="https://github.com/ai/nanoid" target="_blank" rel="noopener noreferrer">nanoid - 用于替代 uuid 的随机 id 生成库</a></li><li><code>dayjs</code>：与 <code>moment</code> 的 API 设计保持一样，但体积仅有 2KB；</li><li><code>qs</code>：解析 URL query 参数的库；</li><li><code>js-cookie</code>：简单、轻量的处理 cookie 的库；</li><li><code>flv.js</code>：bilibili 开源的 HTML5 flash 播放器，使浏览器在不借助 flash 插件的情况下可以播放 flv；</li><li><code>vConsole</code>：一个轻量、可拓展、针对手机网页的前端开发者调试面板；</li><li><code>animate.css</code>：一个跨浏览器的 css3 动画库，内置了很多典型的 css3 动画，兼容性好，使用方便；</li><li><code>lodash</code>：一个一致性、模块化、高性能的 JavaScript 实用工具库；</li></ul></div><div role="tabpanel" class="tabItem_xe4B" hidden=""><ul><li>⭐️ <a href="https://github.com/paulmillr/chokidar" target="_blank" rel="noopener noreferrer">chokidar - 跨平台监听文件变化</a></li><li>⭐️ <a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="noopener noreferrer">fs-extra - Node 原生 fs 模块的扩展</a></li><li><code>yargs</code>：通过使用 Node.js 构建功能全面的命令行应用</li><li><code>Ajv</code>：一个适用于 Node.js 和浏览器的最快 JSON 验证器</li><li><code>yallist</code>：一个双向链表的实现</li><li><code>rimraf</code>：Node.js 的 rm -rf 实用程序</li><li><code>consola</code>：Nuxt.js 出品的终端日志工具</li><li><code>webpackbar</code>：Nuxt.js 出品的 webpack 编译进度条</li><li><code>pkg</code>: 把 Node.js 项目打包为可执行文件</li><li><code>concurrently</code>：更优雅地并发执行命令</li><li><code>better-logging</code>：Node 默认日志记录方法的替代品</li></ul></div><div role="tabpanel" class="tabItem_xe4B" hidden=""><ul><li><code>chalk/kolorist</code></li><li><code>inquirer/prompts</code></li><li><code>ora</code></li><li><code>semver</code></li><li><code>pkg-install</code></li><li><code>ncp</code>：跨平台递归拷贝文件</li><li><code>commander/yargs</code></li><li><code>execa</code>（个人觉得 Node 原生 <code>child_process</code> 的 <code>exec</code> 就够用了）</li><li><code>minimist</code></li><li><code>oclif</code>：Heroku 开源的 CLI 框架</li></ul></div></div></div><h2 class="anchor anchorWithStickyNavbar_B0by" id="前端编译">前端编译<a href="#前端编译" class="hash-link" aria-label="Direct link to 前端编译" title="Direct link to 前端编译">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/JMl8LOsNYlttxO-KyVK-Vw" target="_blank" rel="noopener noreferrer">【第2597期】如何用JavaScript实现一门编程语言 - AST</a></li><li><a href="https://juejin.cn/post/7041021350114230285" target="_blank" rel="noopener noreferrer">V8 编译浅谈</a></li><li>⭐️ <a href="https://juejin.cn/post/7057354419888717855" target="_blank" rel="noopener noreferrer">编译技术在前端的实践（二）—— Antlr 及其应用</a></li><li>⭐️ <a href="https://juejin.cn/post/6989509925844041742" target="_blank" rel="noopener noreferrer">编译技术在前端的实践（一）—— 编译原理基础</a></li><li>⭐️ <a href="https://juejin.cn/book/6946117847848321055" target="_blank" rel="noopener noreferrer">Babel 插件通关秘籍</a></li><li>🌛 <a href="https://www.zoo.team/article/the-process-of-executing-js-in-v8" target="_blank" rel="noopener noreferrer">v8 执行 js 的过程</a></li><li>🌛 <a href="https://laocuicode.cn/daydream/2022/04/01/202241-%E7%A1%AC%E6%A0%B8%E5%86%B7%E7%9F%A5%E8%AF%86%EF%BC%9AWebAssembly/" target="_blank" rel="noopener noreferrer">硬核冷知识：V8与WebAssembly不得不说的秘密</a></li><li><a href="https://juejin.cn/post/7018563244679757855" target="_blank" rel="noopener noreferrer">import 方式随意互转，感受 babel 插件的威力</a></li><li><a href="https://mp.weixin.qq.com/s/pNossFUtJrDHshXbWLb4vA" target="_blank" rel="noopener noreferrer">从零到一，我们来一起造个 JS 的编译器</a></li><li><a href="https://juejin.cn/post/7047329886502912030" target="_blank" rel="noopener noreferrer">浅析TypeScript Compiler 原理</a></li><li>⭐️ <a href="https://juejin.cn/post/6962861837800964133" target="_blank" rel="noopener noreferrer">《从 0 到 1 手写 babel》思路分享</a></li><li><a href="https://juejin.cn/post/6953963506693570573" target="_blank" rel="noopener noreferrer">前端也要懂编译：AST 从入门到上手指南</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="网络相关">网络相关<a href="#网络相关" class="hash-link" aria-label="Direct link to 网络相关" title="Direct link to 网络相关">​</a></h2><ul><li><a href="https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/" target="_blank" rel="noopener noreferrer">HTTP/3 From A To Z: Core Concepts</a></li><li><a href="https://juejin.cn/post/7155280646112280613" target="_blank" rel="noopener noreferrer">502问题怎么排查</a></li><li><a href="https://juejin.cn/post/7153255870447484936" target="_blank" rel="noopener noreferrer">刚插上网线，电脑怎么知道自己的IP是什么</a></li><li><a href="https://juejin.cn/post/7147243567075819557" target="_blank" rel="noopener noreferrer">动图图解 | UDP就一定比TCP快吗</a></li><li><a href="https://juejin.cn/post/7126710506936598558" target="_blank" rel="noopener noreferrer">用了TCP协议，就一定不会丢包吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/nS1bMy2TejmGwEfCHPXy5A" target="_blank" rel="noopener noreferrer">HTTPS 就一定安全？我不信</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/fb2uUWz5ZjPEfYv_l6e4Zg" target="_blank" rel="noopener noreferrer">能ping通，TCP就一定能连通吗</a></li><li><a href="https://mp.weixin.qq.com/s/RJp9s_shNckkHBqHsJThuA" target="_blank" rel="noopener noreferrer">Linux 是如何收发网络包的</a></li><li><a href="https://mp.weixin.qq.com/s/7P_1VkBeoArKuuEqGcR9ig" target="_blank" rel="noopener noreferrer">字节三面，答的不满意</a></li><li><a href="https://mp.weixin.qq.com/s/8CPWh_Ly61m8rkHvPT5n2g" target="_blank" rel="noopener noreferrer">体验 http3: 基于 nginx quic 分支</a></li><li><a href="https://mp.weixin.qq.com/s/nRHlwYsr0MaadmaFWEIblQ" target="_blank" rel="noopener noreferrer">HTTP/3发布了，我们来谈谈HTTP/3</a></li><li><a href="https://mp.weixin.qq.com/s/qmnfmUCdekEt1xG0hp_4MQ" target="_blank" rel="noopener noreferrer">既然有 HTTP 协议，为什么还要有 RPC</a></li><li><a href="https://mp.weixin.qq.com/s/3fMZN_LidCi5fiD16nNWWA" target="_blank" rel="noopener noreferrer">字节一面：TCP 和 UDP 可以使用同一个端口吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/hVh5PIVaOeLyErZDPXx6mg" target="_blank" rel="noopener noreferrer">面试必备！TCP协议经典十五连问</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/hX75YxVOMtsnB6Sm_yjm0g" target="_blank" rel="noopener noreferrer">字节一面：如何用 UDP 实现可靠传输</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/toQUgqJHeUbFZMtxfzFCxw" target="_blank" rel="noopener noreferrer">TCP 重传、滑动窗口、流量控制、拥塞控好难？看完图解就不愁了</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904070889603085" target="_blank" rel="noopener noreferrer">(建议收藏)TCP协议灵魂之问，巩固你的网路底层基础</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/9kHoRk6QIYOFUR_PCmHY6g" target="_blank" rel="noopener noreferrer">TCP 就没什么缺陷吗？</a></li><li>推荐看看 QUIC 101 视频以及 <a href="https://courses.cs.washington.edu/courses/cse550/20au/papers/CSE550.quic.pdf" target="_blank" rel="noopener noreferrer">The QUIC transport protocol: design and Internet-scale deployment</a> 论文</li><li>⭐️ <a href="https://segmentfault.com/a/1190000024523772" target="_blank" rel="noopener noreferrer">一文彻底搞懂加密、数字签名和数字证书！</a></li><li>⭐️ <a href="https://juejin.cn/post/6944420222757503006" target="_blank" rel="noopener noreferrer">一个Response Header引发的血案(包含CDN的相关概念)</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="操作系统">操作系统<a href="#操作系统" class="hash-link" aria-label="Direct link to 操作系统" title="Direct link to 操作系统">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://github.com/jlevy/the-art-of-command-line" target="_blank" rel="noopener noreferrer">The Art of Command Line</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xRnG204OW67mKMnbfFHBoA" target="_blank" rel="noopener noreferrer">操作系统常用知识总结！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/94F4v1E9sB82lOr2DeSK0A" target="_blank" rel="noopener noreferrer">Arch Linux 完全手册（上）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ev8hnv-coGLobrbezMK1og" target="_blank" rel="noopener noreferrer">Arch Linux 完全手册（下）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZralWEfG2WJfZ-G-x9biow" target="_blank" rel="noopener noreferrer">看完这篇你一定能掌握Linux</a></li><li>⭐️ <a href="https://juejin.cn/post/6938385978004340744" target="_blank" rel="noopener noreferrer">2万字系统总结，带你实现 Linux 命令自由</a></li><li><a href="https://juejin.cn/post/6917096816118857736" target="_blank" rel="noopener noreferrer">6w字搞定Linux基本操作，建议收藏</a></li><li><a href="https://juejin.cn/post/6844904080972709901" target="_blank" rel="noopener noreferrer">半小时搞会 CentOS 入门必备基础知识</a></li><li><a href="https://juejin.cn/post/6875323565479034894" target="_blank" rel="noopener noreferrer">手摸手带你 Docker 从入门到实践</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="机器学习">机器学习<a href="#机器学习" class="hash-link" aria-label="Direct link to 机器学习" title="Direct link to 机器学习">​</a></h2><ul><li>本地运行 Stable Diffusion 预训练模型<ul><li><a href="https://mp.weixin.qq.com/s/nDnQuZn3hVgrwqWVada2cw" target="_blank" rel="noopener noreferrer">AI数字绘画 stable-diffusion 保姆级教程</a></li><li><a href="https://lexica.art/?q=fc98f231-c95f-4a68-8727-899c73dbc486" target="_blank" rel="noopener noreferrer">https://lexica.art/?q=fc98f231-c95f-4a68-8727-899c73dbc486</a></li><li><a href="https://huggingface.co/CompVis/stable-diffusion-v1-4" target="_blank" rel="noopener noreferrer">https://huggingface.co/CompVis/stable-diffusion-v1-4</a></li><li><a href="https://github.com/CompVis/stable-diffusion" target="_blank" rel="noopener noreferrer">https://github.com/CompVis/stable-diffusion</a></li><li><a href="https://huggingface.co/blog/stable_diffusion" target="_blank" rel="noopener noreferrer">https://huggingface.co/blog/stable_diffusion</a></li></ul></li><li><a href="https://juejin.cn/post/7146575333721341966" target="_blank" rel="noopener noreferrer">不会算法也能微调一个 NLP 预训练模型</a></li><li><a href="https://mp.weixin.qq.com/s/BcXl8YQVNQA6auilbxW0kQ" target="_blank" rel="noopener noreferrer">人工神经网络算法入门</a></li><li><a href="https://mp.weixin.qq.com/s/gaOzwCypQMFAJ4X50aUOcg" target="_blank" rel="noopener noreferrer">浅析神经网络 Neural Networks</a></li><li><a href="https://juejin.cn/post/7075518863814869005" target="_blank" rel="noopener noreferrer">前端工程师如何快速使用一个NLP模型</a></li><li>深入理解 Transformer：<ul><li><a href="https://www.bilibili.com/video/BV1P4411F77q" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1P4411F77q</a></li><li><a href="https://www.bilibili.com/video/BV1Mt411J734" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1Mt411J734</a></li></ul></li><li><a href="https://www.bilibili.com/video/BV1cD4y1D7uR" target="_blank" rel="noopener noreferrer">《深入理解计算机系统》- bilibili</a></li><li><a href="https://www.bilibili.com/video/BV1mb4y1d7K7" target="_blank" rel="noopener noreferrer">《计算机网络自顶向下方法》- bilibili</a><ul><li>这本书重点章节是第2、3、4、5、6章，其他章节可以跳过</li></ul></li><li>学习资源<ul><li><a href="https://github.com/ossu/computer-science" target="_blank" rel="noopener noreferrer">https://github.com/ossu/computer-science</a></li><li><a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener noreferrer">https://github.com/Snailclimb/JavaGuide</a></li><li><a href="https://github.com/QSCTech/zju-icicles" target="_blank" rel="noopener noreferrer">https://github.com/QSCTech/zju-icicles</a></li></ul></li><li><a href="https://www.bilibili.com/video/BV1Vt411z7wy" target="_blank" rel="noopener noreferrer">一天学会 MySQL 数据库</a></li><li><a href="https://www.bilibili.com/video/BV1FT4y1E74V" target="_blank" rel="noopener noreferrer">吴恩达《深度学习》</a></li><li><a href="https://www.bilibili.com/video/BV1qK4y1479r" target="_blank" rel="noopener noreferrer">推荐系统算法基础+综合项目实战</a><ul><li>再就是一些我认为很优秀的开源项目：</li><li><a href="https://github.com/zhongqiangwu960812/AI-RecommenderSystem" target="_blank" rel="noopener noreferrer">https://github.com/zhongqiangwu960812/AI-RecommenderSystem</a></li><li><a href="https://github.com/ZiyaoGeng/Recommender-System-with-TF2.0" target="_blank" rel="noopener noreferrer">https://github.com/ZiyaoGeng/Recommender-System-with-TF2.0</a></li></ul></li><li>参考：<a href="https://mp.weixin.qq.com/s/YbwQAPIEkihO7XzVvrlDCg" target="_blank" rel="noopener noreferrer">万字入门推荐系统！</a></li><li><a href="https://juejin.cn/post/7013674501116264484" target="_blank" rel="noopener noreferrer">说一说Web端侧AI</a></li><li><a href="https://juejin.cn/post/6964335363787620383" target="_blank" rel="noopener noreferrer">机器学习初探-线性回归</a></li><li><a href="https://juejin.cn/post/6951340421658181646" target="_blank" rel="noopener noreferrer">机器学习进阶 - 深入思考逻辑回归</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="llm-技术调研">LLM 技术调研<a href="#llm-技术调研" class="hash-link" aria-label="Direct link to LLM 技术调研" title="Direct link to LLM 技术调研">​</a></h2><ul><li><a href="https://mp.weixin.qq.com/s/Fo26NbtK8wFiHEGP0nhzuQ" target="_blank" rel="noopener noreferrer">使用 Transformers 量化 Meta AI LLaMA2 中文版大模型</a></li><li><a href="https://mp.weixin.qq.com/s/9cTNa_oya2Zj9YdDYodCvw" target="_blank" rel="noopener noreferrer">使用 Docker 快速上手中文版 LLaMA2 开源大模型</a></li><li><a href="https://mp.weixin.qq.com/s/NJ1JXkAK9LTSuor0mxtz1A" target="_blank" rel="noopener noreferrer">使用 Docker 快速上手官方版 LLaMA2 开源大模型</a></li><li><a href="https://mp.weixin.qq.com/s/iKtNOWkycm0FcMwnwq2M-A" target="_blank" rel="noopener noreferrer">AI 加持的代码编写实战：快速实现 Nginx 配置格式化工具</a></li><li><a href="https://mp.weixin.qq.com/s/o-6Xg1f7SMX-BUFgXgwb8w" target="_blank" rel="noopener noreferrer">让 OpenAI 更 Open，在 ChatGPT 里自由接入数据源</a></li><li><a href="https://mp.weixin.qq.com/s/Qo1--bFCzdNHAdesshrUuQ" target="_blank" rel="noopener noreferrer">八十行代码实现开源的 Midjourney、Stable Diffusion “咒语”作图工具</a></li><li><a href="https://mp.weixin.qq.com/s/vH5zkdQ9esiMeg3L9TYgvw" target="_blank" rel="noopener noreferrer">模型杂谈：1.5G 显存就能运行的 RNN 14B 的开源模型（ChatRWKV）</a></li><li><a href="https://mp.weixin.qq.com/s/cVR9yYP8zDiVBPEo91dSSA" target="_blank" rel="noopener noreferrer">使用 Docker 和 Alpaca LoRA 对 LLaMA 65B 大模型进行 Fine-Tune</a></li><li><a href="https://mp.weixin.qq.com/s/6Ae6SgEws5gndQwmZqkcUg" target="_blank" rel="noopener noreferrer">基于 Docker 的深度学习环境：入门篇</a></li><li><a href="https://mp.weixin.qq.com/s/6oKORqZWX7IlQFI5zbLKCw" target="_blank" rel="noopener noreferrer">模型杂谈：使用 IN8 量化推理运行 Meta “开源泄露”的大模型（LLaMA）</a></li><li><a href="https://mp.weixin.qq.com/s/vc4t7sm-BhAYtE7_J8DekQ" target="_blank" rel="noopener noreferrer">模型杂谈：快速上手元宇宙大厂 Meta “开源泄露”的大模型（LLaMA）</a></li><li><a href="https://mp.weixin.qq.com/s/YKzWBa9kGbzwUpy2iuPjNA" target="_blank" rel="noopener noreferrer">RSS Can：借助 V8 让 Golang 应用具备动态化能力（二）</a></li><li><a href="https://mp.weixin.qq.com/s/UO6_L_oVe3-ocOyt6R_YTA" target="_blank" rel="noopener noreferrer">在搭载 M1 及 M2 芯片 MacBook设备上玩 Stable Diffusion 模型</a></li><li><a href="https://mp.weixin.qq.com/s/_1AZ5U27JOkEaCUkAuZADQ" target="_blank" rel="noopener noreferrer">Linux 软件包下载加速工具：APT Proxy</a></li><li><a href="https://mp.weixin.qq.com/s/e0x7BR2PwkTk9JWdr2hg-w" target="_blank" rel="noopener noreferrer">轻量高可用的 K8s 集群搭建方案：MicroK8s</a></li><li><a href="https://mp.weixin.qq.com/s/8MppGs90WWP5sMlHFX2EUQ" target="_blank" rel="noopener noreferrer">向量数据库入坑：使用 Docker 和 Milvus 快速构建本地轻量图片搜索引擎</a></li><li><a href="https://mp.weixin.qq.com/s/pVYPpYRPjq7BUCahParVvw" target="_blank" rel="noopener noreferrer">向量数据库入坑：入门向量数据库 Milvus 的 Docker 工具镜像</a></li><li><a href="https://mp.weixin.qq.com/s/F0YgDChHceNoOPFstnBv3Q" target="_blank" rel="noopener noreferrer">向量数据库入坑：传统文本检索方式的降维打击，使用 Faiss 实现向量语义检索</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="java-相关">Java 相关<a href="#java-相关" class="hash-link" aria-label="Direct link to Java 相关" title="Direct link to Java 相关">​</a></h2><ul><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/AGaxg4ymPvSnpt3dZuO9SA" target="_blank" rel="noopener noreferrer">100+篇原创！1900+转载！大家一起加油！</a></li><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/1Xe16FaHWfihYjqMVWidQg" target="_blank" rel="noopener noreferrer">原创精选荟萃（2022.05.11）</a></li><li><a href="https://mp.weixin.qq.com/s/j1U4L06y2-8z2fSJypGG7w" target="_blank" rel="noopener noreferrer">支付宝一面：如何基于Redis实现分布式锁</a></li><li><a href="https://mp.weixin.qq.com/s/va75wKPBtpp2ceL25SkIVA" target="_blank" rel="noopener noreferrer">Jenkins+Docker 实现一键自动化部署项目！步骤齐全，少走坑路！</a></li><li><a href="https://mp.weixin.qq.com/s/njeXqkHiIsXneBholN72OQ" target="_blank" rel="noopener noreferrer">两万字详解！Netty经典32连问！</a></li><li><a href="https://mp.weixin.qq.com/s/409QGKe5H7tCP1qpCiY_KA" target="_blank" rel="noopener noreferrer">两万字盘点设计模式！</a></li><li><a href="https://mp.weixin.qq.com/s/J0C9TJF7nVVi2cMiDBqepA" target="_blank" rel="noopener noreferrer">实战，实现幂等的8种方案！</a></li><li><a href="https://mp.weixin.qq.com/s/Jct2rnz_0ahozWNZYfZ4Qg" target="_blank" rel="noopener noreferrer">写优雅代码的45个小技巧</a></li><li><a href="https://mp.weixin.qq.com/s/PzZ31ju32-5epXpQeTZsNA" target="_blank" rel="noopener noreferrer">肝了一周总结的SpringBoot常用注解大全，看完就炉火纯青了！</a></li><li><a href="https://mp.weixin.qq.com/s/rSYOAuJeIXaonHvuR5O47Q" target="_blank" rel="noopener noreferrer">瞧瞧人家写的API接口代码，那叫一个优雅！</a></li><li><a href="https://mp.weixin.qq.com/s/P017RfO8TDL5LxGzBoTLSA" target="_blank" rel="noopener noreferrer">SpringBoot 实现 Excel 导入导出，性能爆表，用起来够优雅！</a></li><li><a href="https://mp.weixin.qq.com/s/SG9sNmMu9acB1xTODkG00Q" target="_blank" rel="noopener noreferrer">还在用HttpUtil？SpringBoot 3.0全新HTTP客户端工具来了，用起来够优雅！</a></li><li><a href="https://mp.weixin.qq.com/s/ezLN8AzVhBaeMdNMK-TS-g" target="_blank" rel="noopener noreferrer">妙用Java 8中的 Function接口，消灭if...else（非常新颖的写法）</a></li><li><a href="https://mp.weixin.qq.com/s/20LjD3_nJYvZrTNo4tqjvA" target="_blank" rel="noopener noreferrer">别再用 if 校验参数了，太Low！这才是专业的 SpringBoot 参数校验方式！</a></li><li><a href="https://mp.weixin.qq.com/s/bb7C6VNbq7REP9u8PsreSg" target="_blank" rel="noopener noreferrer">看一遍就理解：IO模型详解</a></li><li><a href="https://mp.weixin.qq.com/s/qaUZ3AMA_dJkx2ZpyhJN2g" target="_blank" rel="noopener noreferrer">面试必备：零拷贝详解</a></li><li><a href="https://mp.weixin.qq.com/s/DGP1frbIlirZ_C8Vd0OmEA" target="_blank" rel="noopener noreferrer">实战总结！18种接口优化方案的总结</a></li><li><a href="https://mp.weixin.qq.com/s/yyoaDbKsvhdZbAL8T2V-zg" target="_blank" rel="noopener noreferrer">忘了又看，看了又忘？保姆级教学，一口气教你玩转 3 种高频设计模式！</a></li><li><a href="https://mp.weixin.qq.com/s/FX2umO7XCCmj8Bke7uKDZw" target="_blank" rel="noopener noreferrer">11种常用的设计模式</a></li><li><a href="https://mp.weixin.qq.com/s/Va4eoL5xizJasnSUbvvccw" target="_blank" rel="noopener noreferrer">这些并发编程知识，一定要知道</a></li><li><a href="https://mp.weixin.qq.com/s/EVgd689xdOX732hdOxPqcw" target="_blank" rel="noopener noreferrer">这10种神级性能优化手段，你用过几个</a></li><li><a href="https://mp.weixin.qq.com/s/VStQWv_ehN8RFDxpoAnKmg" target="_blank" rel="noopener noreferrer">两万字！多线程硬核50问！</a></li><li><a href="https://mp.weixin.qq.com/s/X11OCZSEh2k5K6uYG768yQ" target="_blank" rel="noopener noreferrer">MyBatis这样用，同事直呼哇塞，堪称最佳实践！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/29xlEK2N_Wptl4TBMg1ZPQ" target="_blank" rel="noopener noreferrer">源码深度解析之 Spring IOC</a></li><li><a href="https://mp.weixin.qq.com/s/T1toQ7NeHQKqof9A0o-99g" target="_blank" rel="noopener noreferrer">76 张图，剖析 Spring AOP 源码，小白居然也能看懂，大神，请收下我的膝盖！</a></li><li><a href="https://mp.weixin.qq.com/s/n8iw_33Wwr9i0mWEXMG6-A" target="_blank" rel="noopener noreferrer">使用 lambda 实现超强的排序功能</a></li><li><a href="https://mp.weixin.qq.com/s/e_uJhaGj4HO1iTS_zCoCXw" target="_blank" rel="noopener noreferrer">万字长文，SpringSecurity实现权限系统设计</a></li><li><a href="https://mp.weixin.qq.com/s/J_11wYusexAjwa1cuckyfw" target="_blank" rel="noopener noreferrer">1.2w+字！Java IO 基础知识总结</a></li><li><a href="https://mp.weixin.qq.com/s/7js2uDZNv2Pb55ihKPc1xg" target="_blank" rel="noopener noreferrer">两万字！多线程硬核50问！</a></li><li><a href="https://mp.weixin.qq.com/s/djVu6SJjfYj4y_LNW-SKyw" target="_blank" rel="noopener noreferrer">源码深度解析，Spring 如何解决循环依赖</a></li><li><a href="https://mp.weixin.qq.com/s/hhjwiMx-ypEbxwHJ9rJoBw" target="_blank" rel="noopener noreferrer">麻了，代码改成多线程，竟有9大问题</a></li><li><a href="https://mp.weixin.qq.com/s/ioDYZjdSii3WUvL9xqc_Sg" target="_blank" rel="noopener noreferrer">别再乱打日志了，这份 Java 日志规范，应有尽有，建议收藏！</a></li><li><a href="https://mp.weixin.qq.com/s/zn4TDT4Vl_MobqNkW1m-jw" target="_blank" rel="noopener noreferrer">聊聊SpringBoot单元测试</a></li><li><a href="https://mp.weixin.qq.com/s/4Sxal7N-uZ8gvphC8XWo8A" target="_blank" rel="noopener noreferrer">总监又来了，人狠话不多，这篇 gRPC，小弟佩服！</a></li><li><a href="https://mp.weixin.qq.com/s/vqKKoPB5FQkCWXFWBLbkZg" target="_blank" rel="noopener noreferrer">腾讯一面：Thread、Runnable、Callable、Future、FutureTask，谈谈他们的关系</a></li><li><a href="https://mp.weixin.qq.com/s/rlfRjCb8EOrpt3xnF7isBw" target="_blank" rel="noopener noreferrer">拜托！面试请不要再问我 @Transactional</a></li><li><a href="https://mp.weixin.qq.com/s/YcyC1Jm4H7uGvSg3rCkDig" target="_blank" rel="noopener noreferrer">7 段小代码，玩转Java程序常见的崩溃场景</a></li><li><a href="https://mp.weixin.qq.com/s/Ua03qsLcrVURtxhSnuU_6w" target="_blank" rel="noopener noreferrer">单例模式 4 种经典实现方法</a></li><li><a href="https://blog.csdn.net/mu_wind/article/details/118423362" target="_blank" rel="noopener noreferrer">ElasticSearch进阶：一文全览各种ES查询在Java中的实现</a></li><li><a href="https://juejin.cn/post/7031047868806873096" target="_blank" rel="noopener noreferrer">使用 @Transactional 时常犯的N种错误</a></li><li><a href="https://juejin.cn/post/6984974277573836830" target="_blank" rel="noopener noreferrer">Spring Boot 2.x基础教程：使用@Scheduled实现定时任务</a></li><li><a href="https://juejin.cn/post/7007642025264676871" target="_blank" rel="noopener noreferrer">Spring Boot中使用@Async实现异步调用，加速任务的执行！</a></li><li><a href="https://github.com/CodingDocs/awesome-idea" target="_blank" rel="noopener noreferrer">IDEA 高效使用指南</a></li><li><a href="https://github.com/fuzhengwei/CodeGuide" target="_blank" rel="noopener noreferrer">CodeGuide | 程序员编码指南</a></li><li><a href="https://github.com/fuzhengwei/small-spring" target="_blank" rel="noopener noreferrer">🌱 Spring 手撸专栏 - 易学、好写、能懂！</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="mysql-学习">MySQL 学习<a href="#mysql-学习" class="hash-link" aria-label="Direct link to MySQL 学习" title="Direct link to MySQL 学习">​</a></h2><ul><li>MySQL 专栏<ul><li>⭐️ ⭐️ <a href="https://mp.weixin.qq.com/s/G8fWBvZPy6yxAyggwwx1NA" target="_blank" rel="noopener noreferrer">田螺哥的MySQL专栏！25篇，真香！</a></li></ul></li><li>表结构设计<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/3yHSh7djpeeYZkajkTGFKg" target="_blank" rel="noopener noreferrer">推荐一款SQL自动检查神器，再也不用担心SQL出错了！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sSsZ-w6WzjA_DLZfnsxD2w" target="_blank" rel="noopener noreferrer">21个MySQL表设计的经验准则</a></li><li>⭐️ <a href="https://juejin.cn/post/7136126923851169823" target="_blank" rel="noopener noreferrer">聊聊数据库建表的15个小技巧</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904142733836301" target="_blank" rel="noopener noreferrer">我用起来顺手的数据库设计工具，这次推荐给大家！</a></li><li>⭐️ <a href="https://juejin.cn/post/7108525565157589005" target="_blank" rel="noopener noreferrer">数据库表结构设计一点心得和经验</a></li></ul></li><li>慢 SQL 优化<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/SBKlxcTK_kZf0s5CRtIEBA" target="_blank" rel="noopener noreferrer">SQL优化13连问，收藏好！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Pi_SLqs3lwA7vWcT6lVv5g" target="_blank" rel="noopener noreferrer">美团面试：这个 SQL 语句加了哪些锁</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8X-MuPgS-o53XZywqi_dmA" target="_blank" rel="noopener noreferrer">专坑同事的SQL 就这么写，性能降低100倍，不来看看</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/0_Arz-KO3UqJij1s4DjLNw" target="_blank" rel="noopener noreferrer">完爆90%的性能毛病，数据库优化八大通用绝招！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3H9SD1dnAH0RoN-RoPXxgQ" target="_blank" rel="noopener noreferrer">公司新来个同事，MyBatis批量插入10w条数据仅用2秒，拍案叫绝！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/OBjRKdGzwFM4PNrbMd7kIA" target="_blank" rel="noopener noreferrer">一次显著的大表查询优化，从20s优化到500ms，查询分离YYDS！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/UxZRGO58kTiX5wUnuzMJ9Q" target="_blank" rel="noopener noreferrer">MySQL表太大，count(*)都能 502，怎么优化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/exPgSB0MNUnu0wMkThET1w" target="_blank" rel="noopener noreferrer">这15个SQL优化口诀，工作面试都够用了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KegqAAvI4KxDffforTQqKA" target="_blank" rel="noopener noreferrer">保姆级教程！2 万字 + 30 张图搞懂 MySQL 是怎么加行级锁的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/DZbAq9fpPxElhfJCkY53GA" target="_blank" rel="noopener noreferrer">两万字详解！InnoDB锁专题！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/BbrLQWGYlkXiy6t4YANj0Q" target="_blank" rel="noopener noreferrer">SQL优化思路+经典案例分析</a></li><li><a href="https://mp.weixin.qq.com/s/N3te_fVBeqhjIpl25N6kpA" target="_blank" rel="noopener noreferrer">MySQL 单表不要超过 2000W 行，靠谱吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/l3jJHIcqMzCcezbpboqyvQ" target="_blank" rel="noopener noreferrer">explain | 索引优化的这把绝世好剑，你真的会用吗</a></li><li><a href="https://mp.weixin.qq.com/s/EVzU7KW9d5_254Kg4LZYQQ" target="_blank" rel="noopener noreferrer">MySQL 优化：Explain 执行计划详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3jrf1GKBBbVzcvJxqYnx9Q" target="_blank" rel="noopener noreferrer">这11条接口性能优化技巧，利好每日睡眠</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Y1Mh-99cgQWuCQ53wAxkUQ" target="_blank" rel="noopener noreferrer">顺丰快递：请签收MySQL灵魂十连</a></li></ul></li><li>MySQL 事务<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/pkJb_9mddmdYaJZ8azHSsg" target="_blank" rel="noopener noreferrer">图解MySQL事务底层原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KEbuoasD_DOHRJiSqUgzzA" target="_blank" rel="noopener noreferrer">MySQL事务的12连问，你顶得了嘛</a></li></ul></li><li>MySQL 索引<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/d3iC_Iokrjdn392I0Y53Og" target="_blank" rel="noopener noreferrer">MySQL索引15连问，抗住！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sqW51yqeAXcDs9r84UFP7A" target="_blank" rel="noopener noreferrer">跟大家聊聊 MySQL 一行记录是怎么存储的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yvgB1a2o-m3_EBLePZM8cw" target="_blank" rel="noopener noreferrer">你管这破玩意叫B+树</a></li></ul></li><li>MySQL 日志<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/Tfbd-KiBgsZtkiuVc70BFA" target="_blank" rel="noopener noreferrer">聊聊 MySQL 日志，好牛的设计！</a></li></ul></li><li>分库分表<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/cZ7mUsCvBxmo1dzsPA3WjQ" target="_blank" rel="noopener noreferrer">分库分表经典15连问</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AjVl-0u3plmL9U77h0VVJw" target="_blank" rel="noopener noreferrer">面试必备：分库分表！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/wYXs7gsID8a9ahJKsWXJ6w" target="_blank" rel="noopener noreferrer">再有人问你什么是分库分表，直接把这篇文章发给他</a></li></ul></li><li>脏读、不可重复读、幻读<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/VWEKgnOWVnufz5pfvRjUWw" target="_blank" rel="noopener noreferrer">美团三面：一直追问我， MySQL 幻读被彻底解决了吗</a></li></ul></li><li>数据一致性<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/VEU5p85aTvyBKf2XP5QTSg" target="_blank" rel="noopener noreferrer">数据库锁的12连问，抗住！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/shogIDEgXTtPVPFgsS8crw" target="_blank" rel="noopener noreferrer">聊聊select for update到底加了什么锁</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WzAVtmFmEMhY-MiNEgQ0fw" target="_blank" rel="noopener noreferrer">如何保障 MySQL 和 Redis 的数据一致性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/lyqvv-nA_PMUc-eBuCsNTA" target="_blank" rel="noopener noreferrer">如何保障 MySQL 和 Redis 的数据一致性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/kkSQu7zdr6x_CZRE5uW-lg" target="_blank" rel="noopener noreferrer">聊聊分布式一致性！</a></li><li>⭐️ <a href="https://juejin.cn/post/7104507830522085383" target="_blank" rel="noopener noreferrer">聊聊分布式锁</a></li></ul></li><li>ORM 相关<ul><li>⭐️ <a href="https://mp.weixin.qq.com/s/R2yqW3kfesK-T5oZR2Vl2w" target="_blank" rel="noopener noreferrer">MyBatis 连环 20 问，你能答对几个</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/X11OCZSEh2k5K6uYG768yQ" target="_blank" rel="noopener noreferrer">MyBatis这样用，同事直呼哇塞，堪称最佳实践！</a></li></ul></li><li><a href="https://juejin.cn/post/6850037271233331208" target="_blank" rel="noopener noreferrer">MySQL 三万字精华总结 + 面试100 问，和面试官扯皮绰绰有余（收藏系列）</a></li><li><a href="https://mp.weixin.qq.com/s/vRI-bFB4_IEaoCCQcMqZjw" target="_blank" rel="noopener noreferrer">明明加了唯一索引，为什么还是产生重复数据</a></li><li><a href="https://mp.weixin.qq.com/s/O6sgYSpXBPwAA4Qcstj-BA" target="_blank" rel="noopener noreferrer">互联网公司都怎么实现分页的，拿 MySQL 使劲Limit</a></li><li><a href="https://mp.weixin.qq.com/s/cdc1NCSkvAU4Urk2wVFDMw" target="_blank" rel="noopener noreferrer">MySQL夺命66问</a></li><li><a href="https://mp.weixin.qq.com/s/L9qseWiHGfu1oAuKIhcUhw" target="_blank" rel="noopener noreferrer">一次 MySQL 误操作导致的事故，「高可用」都顶不住了！</a></li><li><a href="https://mp.weixin.qq.com/s/Inocu3vjMG4ivE19HrxR3g" target="_blank" rel="noopener noreferrer">虾皮二面：MySQL 中有哪些锁？表级锁和行级锁有什么区别</a></li><li><a href="https://mp.weixin.qq.com/s/Jhh-_5ynu58EKPMignk5fA" target="_blank" rel="noopener noreferrer">面霸篇：MySQL六十六问，两万字+五十图详解！</a></li><li><a href="https://juejin.cn/post/7101581835527782414" target="_blank" rel="noopener noreferrer">慢SQL分析与优化</a></li><li><a href="https://mp.weixin.qq.com/s/r91hINCgCYJDNHLMeaba8Q" target="_blank" rel="noopener noreferrer">Mysql数据库查询好慢，除了索引，还能因为什么</a></li><li><a href="https://mp.weixin.qq.com/s/8OOSyFB9pzoBMH73ey7YmQ" target="_blank" rel="noopener noreferrer">MySQL 主从，6 分钟带你掌握</a></li><li><a href="https://mp.weixin.qq.com/s/N08tFkGyXtmBSN0nS6S6UA" target="_blank" rel="noopener noreferrer">大厂面试题：日常工作如何做MySQL优化</a></li><li><a href="https://mp.weixin.qq.com/s/i8SHizPrBMQ2GIhQP7ozRw" target="_blank" rel="noopener noreferrer">Mysql完结汇总篇（18W字送给大家），完结撒花</a></li><li><a href="https://juejin.cn/post/7081456994413969445" target="_blank" rel="noopener noreferrer">面试官：什么是MySQL 事务与 MVCC 原理？</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="golang-学习">Golang 学习<a href="#golang-学习" class="hash-link" aria-label="Direct link to Golang 学习" title="Direct link to Golang 学习">​</a></h2><ul><li>Golang 学习路线<ul><li>⭐️ <a href="https://github.com/xiaobaiTech/golangFamily/blob/main/README.md" target="_blank" rel="noopener noreferrer">Go后端开发成长路线</a></li><li>⭐️ <a href="https://juejin.cn/post/7119123646471208968" target="_blank" rel="noopener noreferrer">《Go学习路线图》带你少走弯路，Let's Go ！</a></li><li>⭐️ <a href="https://juejin.cn/post/7176518080674136121" target="_blank" rel="noopener noreferrer">最全的Go资料汇总和最走心的学Go建议</a></li><li>⭐️ <a href="https://juejin.cn/post/7147939014870302756" target="_blank" rel="noopener noreferrer">给想转Go或者Go进阶同学的一些建议</a></li><li><a href="https://juejin.cn/post/7035966042857799687" target="_blank" rel="noopener noreferrer">我肝了三个月，为你写出了GO核心手册</a></li><li><a href="https://juejin.cn/post/7061980386640789540" target="_blank" rel="noopener noreferrer">Go 学习路线（2022）</a></li><li><a href="https://www.bilibili.com/video/BV16E411H7og" target="_blank" rel="noopener noreferrer">Golang学习手册之：带你21周搞定Go语言</a></li><li><a href="https://www.youtube.com/watch?v=YS4e4q9oBaU" target="_blank" rel="noopener noreferrer">Learn Go Programming - Golang Tutorial for Beginners</a></li></ul></li><li>Golang 进阶<ul><li>⭐️ <a href="https://github.com/danielfurman/presentations/blob/master/lets-go-generic/README.md" target="_blank" rel="noopener noreferrer">Golang 泛型介绍</a></li><li>⭐️ <a href="https://www.bilibili.com/video/BV1ry4y1y7V2" target="_blank" rel="noopener noreferrer">GopherCon UK 2018- Florin Patan - Production Ready Go Service in 30 Minutes</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/r4IWY6bzKph2QvxrKZszPA" target="_blank" rel="noopener noreferrer">作为Gopher，你知道Go的注释即文档应该怎么写吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Ne0uir1hpMokBUItntkfvw" target="_blank" rel="noopener noreferrer">31个！Golang常用工具来啦（建议收藏）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Mj-EqwYWZBMr8XNIHxUqDA" target="_blank" rel="noopener noreferrer">Golang依赖注入提升开发效率！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VFS4TWi3OpeAegScZ4cJRw" target="_blank" rel="noopener noreferrer">Go语言从0到1实现最简单的数据库！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/--ciEa-Oj0NEUxlp1Af_aQ" target="_blank" rel="noopener noreferrer">必撸系列！Go另外几个黑魔法技巧汇总</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8HNZQrQ2oqMB2fAYbmH2Ow" target="_blank" rel="noopener noreferrer">来了！Go的2个黑魔法技巧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Zb5zGOy_mdalUQ_Qy0HngQ" target="_blank" rel="noopener noreferrer">3种方式！Go Error处理最佳实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/OCpVRwtiphFRZgu9zdae5g" target="_blank" rel="noopener noreferrer">Go组件：context学习笔记！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NkSyv7iDSZsLhMUgAi-r4w" target="_blank" rel="noopener noreferrer">不得不知道的Golang之sync.Map解读！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/XHbfPtUzkUTGF06Ao4jQYA" target="_blank" rel="noopener noreferrer">超全避坑指南: 盘点 Go 的常见典型错误</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/56tth8PSquB1eR5-1XaDWA" target="_blank" rel="noopener noreferrer">鹅厂后台大佬教你Go内存管理！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/QBZ1dp0XIqMo24vVFYf1fA" target="_blank" rel="noopener noreferrer">全面解读！Golang中泛型的使用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/niLk_n9Yp-iyl_RIie3Umw" target="_blank" rel="noopener noreferrer">超干货！彻底搞懂Golang内存管理和垃圾回收</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/BPcRI0BHBLmuYfzvP10Wvw" target="_blank" rel="noopener noreferrer">关于Go并发编程，你不得不知的“左膀右臂”——并发与通道！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aoR_69JMBN5ZM10DKqRCyQ" target="_blank" rel="noopener noreferrer">它来了，关于Golang并发编程的超详细教程！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/POZGQXsYu5aWXvu29vSM8g" target="_blank" rel="noopener noreferrer">通俗易懂！图解Go协程原理及实战</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/DpCFUAYpvMzd6138Yp_JUA" target="_blank" rel="noopener noreferrer">拒绝千篇一律，这套Go错误处理的完整解决方案值得一看！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_VGaV8ef65h9goxxfWejtQ" target="_blank" rel="noopener noreferrer">go语言最全优化技巧总结，值得收藏！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/fXKSr8GXaYxG1WCrLIgneg" target="_blank" rel="noopener noreferrer">再不Go就来不及了！Go高性能编程技法解读</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/XrJVpErmP8wIjd_byCCmhA" target="_blank" rel="noopener noreferrer">腾讯 13 年，我所总结的Code Review终极大法</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AMv5IVBPU2lAY_qUwskk4g" target="_blank" rel="noopener noreferrer">Go与C的桥梁：CGO入门剖析与实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/tN27osC6K0NM-Laj9MbtsA" target="_blank" rel="noopener noreferrer">Golang 汇编入门知识总结</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VMzhyySny60zABnxlzlVjQ" target="_blank" rel="noopener noreferrer">Golang高性能编程实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/GwXQwJUdBi1UHdh2Q8FBMw" target="_blank" rel="noopener noreferrer">敲黑板！鹅厂程序员面试也考了这些算法知识</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/JkpzM06IWNb11wUaJWJn8Q" target="_blank" rel="noopener noreferrer">Java与Go到底差别在哪，谁要被时代抛弃</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/T4tk-sckA1oNcWIvp27MMA" target="_blank" rel="noopener noreferrer">看了这篇你会发现，你是懂Go内存分配的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SLouDICt3HABv_wh-sSqKw" target="_blank" rel="noopener noreferrer">Go 实战技巧：避免内存分配的小技巧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aIuta8Lr0govruPTgglw2w" target="_blank" rel="noopener noreferrer">通过一个例子让你彻底掌握 Go 工作区模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_duDs0oHc_z_p--3OoIfVw" target="_blank" rel="noopener noreferrer">Go的方法接收者：值接收者与指针接收者</a></li><li>⭐️ <a href="https://juejin.cn/post/7157594175846744071" target="_blank" rel="noopener noreferrer">适合团队和个人项目的 Golang 编码规范</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/94thx36Ao2PYQ-8Cbto-wQ" target="_blank" rel="noopener noreferrer">程序员应该遵守的编程原则(不止Gopher哦)</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rPKO23mHDGofeyzeCIHJxQ" target="_blank" rel="noopener noreferrer">给，你要的Go学习路线图来啦</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/UqjSA2i3s1VoLFACt_EL2A" target="_blank" rel="noopener noreferrer">Go 1.18新特性前瞻：原生支持Fuzzing测试</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PBTP4vnwEXtrtsHdq0oL0g" target="_blank" rel="noopener noreferrer">如何应对不断膨胀的接口</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/pCcNtUykXAwb-BN_prPGpA" target="_blank" rel="noopener noreferrer">每个 gopher 都需要了解的 Go AST</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xzNqpRbIvoJygSWeQJFjTw" target="_blank" rel="noopener noreferrer">一文搞懂Go标准库context包</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/E4lT4SuWKIlCZd60i7vigQ" target="_blank" rel="noopener noreferrer">使用反射操作channel</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/z75HDSlX0PLCnvL5kAcSDw" target="_blank" rel="noopener noreferrer">Go 1.20新特性前瞻</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/H3iygMqDTRWv6h2VcgVeUg" target="_blank" rel="noopener noreferrer">Go类型系统：有何与众不同</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MRBEJHZBMS9s0w7UhseQWA" target="_blank" rel="noopener noreferrer">2022年Go语言盘点：泛型落地，无趣很好，稳定为王</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/HbFVODpDEzEZ047kv-LYbg" target="_blank" rel="noopener noreferrer">Go1.20 新特性：context支持自定义取消原因</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NtBzM8l54HRVSpapKR_0sg" target="_blank" rel="noopener noreferrer">聊聊Go与TLS 1.3</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/CFwiFw00ah0rfdZyv_ppxw" target="_blank" rel="noopener noreferrer">将Roaring Bitmap序列化为JSON</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Y-JxePxv9XlaX_UASlWSvQ" target="_blank" rel="noopener noreferrer">万字长文告诉你Go 1.20中值得关注的几个变化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/6_ygmyd64LP7rlkrOh-kRQ" target="_blank" rel="noopener noreferrer">一文告诉你如何判断Go接口变量是否相等</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WDw-Y8Rp4VxAa2iPKRnKKg" target="_blank" rel="noopener noreferrer">小厂内部私有Go module拉取方案3</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/r5gIVtyBWtD7UQncK_JPNQ" target="_blank" rel="noopener noreferrer">Go是一门面向对象编程语言吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5zoNwCWnNNunrDtu6cokqg" target="_blank" rel="noopener noreferrer">一文搞懂Go subtest</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ypK-2wGHGj9_n4o8y-clXg" target="_blank" rel="noopener noreferrer">聊聊godoc、go doc与pkgsite</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MI9x4YOAhbtS-xQtOS-K_A" target="_blank" rel="noopener noreferrer">聊聊Go语言的全局变量</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8yLt0Sh18VF5ApTcuxV-Sg" target="_blank" rel="noopener noreferrer">Go开发命令行程序指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RKshV1hu61wabq4am906PA" target="_blank" rel="noopener noreferrer">使用go test框架驱动的自动化测试</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/0TnAPFib82KC-BIL-uhMWw" target="_blank" rel="noopener noreferrer">一文告诉你哪些map element类型支持就地更新</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/EHSR-GFPJy5RzVDgcvoTog" target="_blank" rel="noopener noreferrer">理解unsafe-assume-no-moving-gc包</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PwSJQM7WmJeLnDDbCr78hg" target="_blank" rel="noopener noreferrer">Go 1.21新特性前瞻</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/FcuXy0Vqp6aczKpNpQeFrA" target="_blank" rel="noopener noreferrer">Go：值与指针</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IEsgLu5PFwcKppUWABA6-Q" target="_blank" rel="noopener noreferrer">Go项目组织：在单一repo中管理多个Go module指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/D_CVrPzjP3O81EpFqLoynQ" target="_blank" rel="noopener noreferrer">一文搞懂Go错误链</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/18SbYmKnUbNR59gFlKEULQ" target="_blank" rel="noopener noreferrer">Go与神经网络：张量运算</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2P9_nyrdZ3JqlKRIR8--7g" target="_blank" rel="noopener noreferrer">聊聊Go语言的控制语句</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/J3hIbUaAp55l8QDuJYUQOg" target="_blank" rel="noopener noreferrer">Go语言反射编程指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/-EAH8jjj4uy1LCr_9C1ghg" target="_blank" rel="noopener noreferrer">The State Of Go 2023</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_xA6bhKTm543i3QV8EZMSg" target="_blank" rel="noopener noreferrer">Go语言包设计指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/dyQ3WBMPF2DyaI8Dlgy8Gw" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：数据类型</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/JWg8yW_lDiZQCk6bKZ5TeA" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：内存管理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WgeTzhP4T0AAjFssHz36UA" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：高级数据结构</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Lxxfeqn70rfmnrGvgrxevA" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：数据操作</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xBpA36wpmbO85LIHlaTXBg" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：扩展compute包</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/LppX2mvbkgsLKkqqudehQA" target="_blank" rel="noopener noreferrer">使用testify包辅助Go测试指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PcNpQJcKuWpZgYrKmVvRLQ" target="_blank" rel="noopener noreferrer">Go语言开发者的Apache Arrow使用指南：读写Parquet文件</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4UI6gTx7ZWRPhGbm4YGGCQ" target="_blank" rel="noopener noreferrer">Gopher Daily改版了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZaDNxyewtrSuiLRF62ipYg" target="_blank" rel="noopener noreferrer">Go项目初始化不再困扰你：gonew全方位解析</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3bfD9LPBB5zA9VxAv920Cw" target="_blank" rel="noopener noreferrer">Go 1.21中值得关注的几个变化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/snVLySXv4E5xMlbD153FcQ" target="_blank" rel="noopener noreferrer">编译Go应用的黑盒挑战：无源码只有.a文件，你能搞定吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4HN0-m8AlzSmDCuF9hYU4Q" target="_blank" rel="noopener noreferrer">slog正式版来了：Go日志记录新选择！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/7jS6E6d578QQIxvWKSux1Q" target="_blank" rel="noopener noreferrer">slog实战：文件日志、轮转与kafka集成</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NzUXgDd7qPMK4LxIopcFLA" target="_blank" rel="noopener noreferrer">聊聊Go语言的向前兼容性和toolchain规则</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/vY76-34hm-ujgaGTS_lDaQ" target="_blank" rel="noopener noreferrer">使用Go和WebRTC data channel实现端到端实时通信</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2ibzE46UVnO_YNtugikpPQ" target="_blank" rel="noopener noreferrer">了解go在协程调度上的改进</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/J3Sfo9u63aTG6IndFP-BnQ" target="_blank" rel="noopener noreferrer">一站式Golang内存洗髓经<!-- -->[<!-- -->Go三关典藏版<!-- -->]</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/9MfIdUdBZmfqbUYT_xrB8A" target="_blank" rel="noopener noreferrer">深入理解Golang协程调度GPM<!-- -->[<!-- -->Go三关典藏版<!-- -->]</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/up1MHqYW_v_C4P6AY-sW3w" target="_blank" rel="noopener noreferrer">Golang三色标记混合写屏障GC模式全分析<!-- -->[<!-- -->Go三关典藏版<!-- -->]</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/veu5W0BFmLIZ-yvs39NdUw" target="_blank" rel="noopener noreferrer">为什么泛型使你的程序变慢</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/XojOIIZfKm_wXul9eSU1tQ" target="_blank" rel="noopener noreferrer">Go error 处理最佳实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mrAwE-go0vNSwrJ4g4L9Cg" target="_blank" rel="noopener noreferrer">开通个人博客啦！附带全部 Hexo + Nginx + Git 教程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gMjQmNvEi1o_iOFt2z7flg" target="_blank" rel="noopener noreferrer">非广告| DDD 到底是银弹还是垃圾</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yEbqNo9UfPTCxL5-RDvlPw" target="_blank" rel="noopener noreferrer">给面试官一点小小的 gpt 震撼</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AaHk-yg8D4atbO-zVAvhKQ" target="_blank" rel="noopener noreferrer">Go 语言 GC 分析</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/XR1KAeCW930i-Qxv6N2kaA" target="_blank" rel="noopener noreferrer">动态调整 GOGC 优化 Go 的 GC 标记 CPU 占用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/T7IBCimzmWI07dHD8NA-Qw" target="_blank" rel="noopener noreferrer">聊聊 rust trait</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/A4m1xlFwh9pD0qy3p7ItSA" target="_blank" rel="noopener noreferrer">Gopher 需要知道的几个结构体骚操作</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sYQ0vqKiIWaUCha740Dxtw" target="_blank" rel="noopener noreferrer">Go 服务端开发，请牢记这几条</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8xTtSoLvAcE1u_jWw9I-Eg" target="_blank" rel="noopener noreferrer">值得收藏调度器系列：偷天换日 — g0 栈和用户栈如何完成切换？（四）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5E5V56wazp5gs9lrLvtopA" target="_blank" rel="noopener noreferrer">曹大带我学 Go（1）——调度的本质</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WWfm7Ui7g_gGlb8XkIZigg" target="_blank" rel="noopener noreferrer">曹大带我学 Go（2）—— 迷惑的 goroutine 执行顺序</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2Y3qPkysRLaWDcIyLOerZg" target="_blank" rel="noopener noreferrer">曹大带我学 Go（3）—— 如何用汇编打同事的脸</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8R9ZLa0Xlscw6qhl-5g2Cg" target="_blank" rel="noopener noreferrer">曹大带我学 Go（10）—— 如何给 Go 提性能优化的 pr</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SGv5vuh9aU2mqViC4Kj0YQ" target="_blank" rel="noopener noreferrer">曹大带我学 Go（11）—— 从 map 的 extra 字段谈起</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RmEtL869Sd-FjB_73tFSaw" target="_blank" rel="noopener noreferrer">『曹大带我学 Go 』系列文章汇总</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IEunJaXMfrOfPmounloYig" target="_blank" rel="noopener noreferrer">Go map 竟然也会发生内存泄漏</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ujWkFUqJiY3DCWeKZeS8uw" target="_blank" rel="noopener noreferrer">内联函数和编译器对Go代码的优化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VnF7YrXTaK5MASacXgzRhw" target="_blank" rel="noopener noreferrer">深度阅读之《100 Go Mistakes and How to Avoid Them》</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/U5Okkf9FzLxxSYcsUI2DZg" target="_blank" rel="noopener noreferrer">kafka producer 在 aws 又挂了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Bl3UrbgiMMsP3gxm6vnDtA" target="_blank" rel="noopener noreferrer">《谷歌的软件工程》笔记(一)</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/j59HejHj5hzKovfsGdrIdg" target="_blank" rel="noopener noreferrer">《谷歌的软件工程》笔记(二)</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/UIeIBtC9MZJh3w-EphWHiA" target="_blank" rel="noopener noreferrer">Gopher 应该记住这 10 个命令</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/HPzoclfCB3UxLScXm4J83w" target="_blank" rel="noopener noreferrer">有趣的 Go HttpClient 超时机制</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2V3VSsAJH5haWqdvVJ9e8g" target="_blank" rel="noopener noreferrer">我如何用两行代码节省了30%的CPU</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/YzkPHkBCdqv-Z3APSPaDrQ" target="_blank" rel="noopener noreferrer">Go 1.19 中atomic包的新变化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/EIuM073G7VV1rIsnTXWyEw" target="_blank" rel="noopener noreferrer">等等， 怎么使用 SetMemoryLimit</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sSwXgrHvQcjSuiy9bA8d_g" target="_blank" rel="noopener noreferrer">分布式系统设计模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/S4FDRve0YPtRUixY4kPqAQ" target="_blank" rel="noopener noreferrer">啊哈，一道有趣的Go并发题</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VtDR2uJ8SQ2jiIS2o2uyfA" target="_blank" rel="noopener noreferrer">还咋优化？我是说Go程序</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/chPDWyBibBlvcEKKENFYGg" target="_blank" rel="noopener noreferrer">零拷贝技术第一篇：综述</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/hXfZImBUYTBe2JvhBD-OmA" target="_blank" rel="noopener noreferrer">零拷贝技术第二篇：Go语言中的应用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/EAk_LdlfYGwaiDDj9CgqHA" target="_blank" rel="noopener noreferrer">一些关于时间和定时任务的库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/kSZieI3zE9RgvfAqEQEhbw" target="_blank" rel="noopener noreferrer">没用微服务，Shopify的单体程序居然支撑了127万/秒的请求</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8omJxT10c5UX6Neua9dLjA" target="_blank" rel="noopener noreferrer">机智！生抠内建map的哈希函数</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KTmMWyULYMS0LFsg69zwZg" target="_blank" rel="noopener noreferrer">像闪电一样快速扫描全网的IP地址</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KzMmzd2ZfAJwtHt4s-V0zQ" target="_blank" rel="noopener noreferrer">每秒百万级别的包传输，我是说CPU使用率几乎为零那种</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sVLOFBdL6a_1pOBFP8pSfw" target="_blank" rel="noopener noreferrer">使用底层的syscall.Socket实现网络编程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/uwdL6QjLIG6SbMKeb2HOAw" target="_blank" rel="noopener noreferrer">使用Go语言实现ping工具</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1Nv5_b2jM9uiG0tEu1Pr1A" target="_blank" rel="noopener noreferrer">几种使用Go发送IP包的方法</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/C2AmKZjg9CyiIDxyU0-b1Q" target="_blank" rel="noopener noreferrer">怎么阻止一个Go程序退出</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SFXe1bdBu0bLuHoGEFTz8g" target="_blank" rel="noopener noreferrer">Go 1.21中 sync.Once的新扩展</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mKraN_3xUfy6Bm-SswHEbw" target="_blank" rel="noopener noreferrer">改造! 让 sync.Map 支持泛型</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/26PlfCFLc9Giuv_7nmgxjg" target="_blank" rel="noopener noreferrer">一个泛型的有序Go Map实现</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aC7omLYJ6Anm9f-8b4qYAg" target="_blank" rel="noopener noreferrer">MPTCP: 一个在 Go 1.21中的被忽略的新特性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Sv-SXDYxea_K_TtiI_CjTw" target="_blank" rel="noopener noreferrer">Go可以使用设计模式，但绝不是《设计模式》中的那样</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/325iHPhAQicbSN6-pb05rw" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 工厂模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/jXaCLkagT-cKbVHConcadg" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 建造者模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NQOmlQfFpM-asN9I9CeVkw" target="_blank" rel="noopener noreferrer">单例模式和惰性初始化模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/R1bPyZBMWizcfuwQv0-t8Q" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 原型模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/p5lv_yTUbxsNYDmZiIpGTw" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 对象池模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/zVVl_R0WbP6AUcav5ys6tQ" target="_blank" rel="noopener noreferrer">原型模式补遗 - Go语言中的深度拷贝</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KYlY-WFNpYirvcRiyaeVXw" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 适配器模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MiACdPNOhnXRoysRX2VBVA" target="_blank" rel="noopener noreferrer">真实世界的Go设计模式 - 资源获取即初始化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/hgFvoopT7DZoGUqHiurTeQ" target="_blank" rel="noopener noreferrer">Go 1.21 中的泛型推断</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1cIcrObMP5xG_UsMUatETw" target="_blank" rel="noopener noreferrer">mping: 使用新的icmp库实现探测和压测工具</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SSkt6YYGcqgH9kbIQH-tNg" target="_blank" rel="noopener noreferrer">PGO: 为你的Go程序提效5%</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/M0WFAQtoCd1aEZHjxTyjMw" target="_blank" rel="noopener noreferrer">深入理解 PromQL</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5XMmVqdcji8jpRnC2p0F3w" target="_blank" rel="noopener noreferrer">什么是 Go runtime.KeepAlive</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gc34RYqmzeMndEJ1-7sOwg" target="_blank" rel="noopener noreferrer">性能优化 | Go Ballast 让内存控制更加丝滑</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/lE83EZ7eztjEWd_NU796YQ" target="_blank" rel="noopener noreferrer">gin 源码阅读(5) - 灵活的返回值处理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2OI9vh_LGPxtGkhF-AnWDA" target="_blank" rel="noopener noreferrer">gin 源码阅读(4) - 友好的请求参数处理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PldVh8Wk6oxCFIcWVx3hrQ" target="_blank" rel="noopener noreferrer">gin 源码阅读(3) - gin 路由的实现剖析</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/d9kP77eKRm2MSW_9ySlVGA" target="_blank" rel="noopener noreferrer">见微知著| 带你透过内存看 Slice 和 Array的异同</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mrCQyw_dR5VYzf8ejyvHfA" target="_blank" rel="noopener noreferrer">Goland 这些实操技巧，你可能还不会！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gmKi3bE99K6bXVGcMFz53w" target="_blank" rel="noopener noreferrer">这些 Goland 技巧，学会开发效率翻倍</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/lMvU80jhkabMvqXeTFiDnw" target="_blank" rel="noopener noreferrer">Go interface 原理剖析--类型转换</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MQWZOkaAc4Bw-PmYHyd9SA" target="_blank" rel="noopener noreferrer">快收藏！最全Go语言实现设计模式（上）</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NrUWfpyfzX4sag22qF-Y-Q" target="_blank" rel="noopener noreferrer">快收藏！最全GO语言实现设计模式【下】</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/i1N9bmVSW1lGfOezvhcD7g" target="_blank" rel="noopener noreferrer">深入理解 golang 的互斥锁</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rETmci7xvzf5X9_liS0Hmg" target="_blank" rel="noopener noreferrer">Go 1.20新变化！第一部分：语言特性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/UQwOJVqm5gnQPMgSE3MW9w" target="_blank" rel="noopener noreferrer">[<!-- -->译<!-- -->]<!-- -->Uber 的 Go语言开发规范</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/jrua9iSa1Huk3UvMluVe7w" target="_blank" rel="noopener noreferrer">这可能是最权威、最全面的Go语言编码风格规范了！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/uWhmvBk_MN23RjmfjkxqeQ" target="_blank" rel="noopener noreferrer">从鹅厂实例出发！分析Go Channel底层原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/vB9ElJCfgZeQHtB596XHpA" target="_blank" rel="noopener noreferrer">Go 服务自动收集线上问题现场</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gLbAZShFnkPcI937pk-wpg" target="_blank" rel="noopener noreferrer">用规则引擎让你一天上线十个需求</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gGs0tOJqBvJKCzPuUWsPiA" target="_blank" rel="noopener noreferrer">计算密集型服务 性能优化实战始末</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/nSlfsoIo0cMYUdgIEuHWEg" target="_blank" rel="noopener noreferrer">IO 密集型服务 性能优化实战记录</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/YM9UP-esSDNZywMneKcVYw" target="_blank" rel="noopener noreferrer">Golang GC 从理论到针对服务的定制化应用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/QQjOyYkDfuxIxHl6k6qkRA" target="_blank" rel="noopener noreferrer">一文彻底理解Go语言栈内存/堆内存</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Oz0Zn8Y43UfHIOPL6rZ5Ig" target="_blank" rel="noopener noreferrer">字节大规模微服务 Go 语言发展之路</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2FVYnKHXFoj18W62pob_jw" target="_blank" rel="noopener noreferrer">通过分析gin、beego源码，读懂web框架对http请求处理流程的本质</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aLiqEuD9T8sERVrfGDSxvw" target="_blank" rel="noopener noreferrer">一文读懂 Go Http Server 原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/0JbLDkJboDDihy-7N4MMPw" target="_blank" rel="noopener noreferrer">Golang slog 介绍</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Immr4DD-XA-noOEkZ6flKg" target="_blank" rel="noopener noreferrer">Golang 库: golang slog 怎么设置日志 Debug 等级</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PKtrqHFTYWyAVSolKVOoBQ" target="_blank" rel="noopener noreferrer">Golang 库: 为什么 Golang slog 库不支持 Fatal</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/G8mEAKRYbaae_rFBVJqdeg" target="_blank" rel="noopener noreferrer">发现conc并发库一个有趣的问题</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Rrz-UEx2SwYmyWC5rKh4Wg" target="_blank" rel="noopener noreferrer">Go 语言 Web 应用怎么使用 Nginx 部署</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/irp0uBR-nJ87tZ_elMWPnA" target="_blank" rel="noopener noreferrer">「Go语言进阶」并发编程详解 | 文末抽奖</a></li><li>⭐️ <a href="https://juejin.cn/post/7194334949011357755" target="_blank" rel="noopener noreferrer">一文入门Go云原生微服务「爆肝6千字」</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/jsdGV31yT5AR07BzRovWVw" target="_blank" rel="noopener noreferrer">为什么 Go 不支持 <!-- -->[<!-- -->]<!-- -->T 转换为 <!-- -->[<!-- -->]<!-- -->interface</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/uTJ1En-BXiLvH45xx0eFsA" target="_blank" rel="noopener noreferrer">go-zero 是如何做路由管理的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RyVc_JZJi_pTT_51mEHYiw" target="_blank" rel="noopener noreferrer">Go 语言中排序的 3 种方法</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ExfVdEM7_YWlQF6GhFn74A" target="_blank" rel="noopener noreferrer">一文吃透 Go 内置 RPC 原理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ea7LfF2jOoHOSozX-qUZLA" target="_blank" rel="noopener noreferrer">Go 最细节篇｜内存回收又踩坑了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/BwqHMhc2WtAY_R-UffNQ4w" target="_blank" rel="noopener noreferrer">Go 最细节篇｜Go 的 nil 值判断，千方百计，还是踩坑!</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/-3X0c4P0WdZdjtkTsX16Rw" target="_blank" rel="noopener noreferrer">Go 最细节篇｜pprof 统计的内存总是偏小</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZgTCSj-PZMTiMCR4FtBeyA" target="_blank" rel="noopener noreferrer">Go 最细节篇｜解密 defer 原理，究竟背着程序猿做了多少事情</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Atj8Ngvg3Uzw4gMDwf5rag" target="_blank" rel="noopener noreferrer">Go 最细节篇｜Golang 并发编程核心篇 —— 内存可见性</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2u2qRUbgcOwvU9wcHpC0SA" target="_blank" rel="noopener noreferrer">Go 最细节篇｜Golang最细节篇— struct{} 空结构体究竟是啥</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ylsTVohPo7x8QKAUj1uoTA" target="_blank" rel="noopener noreferrer">Go Slice 扩容的这些坑你踩过吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ixTP1qythuJyhf3b9kIRaA" target="_blank" rel="noopener noreferrer">Go 语言实现创建型设计模式 - 单例模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/qTYlHqozkWHkhF9OKfaAMQ" target="_blank" rel="noopener noreferrer">Go 语言自带设计模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SYQTlvbLvbsSwFi2Q_kI1Q" target="_blank" rel="noopener noreferrer">如何做好表结构设计</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xiUPLOTkDCX2i2jTOSNgCQ" target="_blank" rel="noopener noreferrer">Go 错误处理：100+ 提案全部被拒绝，为何现阶段仍用 if err != nil</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/431YMKwRjaStanqA6juePA" target="_blank" rel="noopener noreferrer">Go 语言并发模式代码模板</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/elsHIqDQ0yABUZXNVpjwMg" target="_blank" rel="noopener noreferrer">基于性能分析的优化预览</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/soaxFUjo6hEe2KSnle_LkQ" target="_blank" rel="noopener noreferrer">「高频必考」Go并发编程面试题和答案</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/k0zwlJNFssMRh1NHA6rGcA" target="_blank" rel="noopener noreferrer">源码阅读 - 切片扩容过程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/PzfiMXiYjfGQFHW_0hTS4A" target="_blank" rel="noopener noreferrer">Golang反射学习：手写一个RPC</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/mAo2K8lZNeJHTtShBHlUsQ" target="_blank" rel="noopener noreferrer">深入解析非阻塞Golang IO框架nbio</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aP9bT4UL1MK5EDx18WfvmQ" target="_blank" rel="noopener noreferrer">Go 语言标准库 bufio 详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Yi0eGTzrT7mtkpebmLXqVA" target="_blank" rel="noopener noreferrer">CPU 缓存体系对 Go 程序的影响</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2iOkW5h7x-1wdYe51vMemw" target="_blank" rel="noopener noreferrer">「刷起来」Go必看的进阶面试题详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/NJuOB8k86Z7Hv-xITL1Vqg" target="_blank" rel="noopener noreferrer">Go 性能加速器：你需要知道的 5 个诀窍和技巧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/tgBqY3xYbk5IBzViL9eaiA" target="_blank" rel="noopener noreferrer">深入剖析 Golang 程序启动原理 - 从 ELF 入口点到GMP初始化到执行 main！</a></li><li>⭐️ <a href="https://juejin.cn/post/7254384497649844280" target="_blank" rel="noopener noreferrer">从编译原理到 Go 启动时的流程，Go程序是怎样跑起来的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/V5wAZcTbunU3HdS1xaWavQ" target="_blank" rel="noopener noreferrer">从.go文本文件到可执行文件</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/eWM9AvG1qXnMWF4qIwhnVQ" target="_blank" rel="noopener noreferrer">Go 编译器优化</a></li><li>⭐️ <a href="https://juejin.cn/post/7210005376653377597" target="_blank" rel="noopener noreferrer">学会 Go select 语句，轻松实现高效并发</a></li><li>⭐️ <a href="https://juejin.cn/post/7215188852851097656" target="_blank" rel="noopener noreferrer">Go Mutex：保护并发访问共享资源的利器</a></li><li>⭐️ <a href="https://juejin.cn/post/7218554163051413561" target="_blank" rel="noopener noreferrer">Go RWMutex：高并发读多写少场景下的性能优化利器</a></li><li>⭐️ <a href="https://juejin.cn/post/7223035239072333861" target="_blank" rel="noopener noreferrer">Go 语言中没有枚举类型，但是我们可以这样做</a></li><li>⭐️ <a href="https://juejin.cn/post/7224147971834691639" target="_blank" rel="noopener noreferrer">Go 方法接收器：选择值接收器还是指针接收器</a></li><li>⭐️ <a href="https://juejin.cn/post/7233981178101186619" target="_blank" rel="noopener noreferrer">一文掌握 Go 并发模式 Context 上下文</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rD3pnjWF5_Zz-r6GB0LrrA" target="_blank" rel="noopener noreferrer">Go 空结构体：零内存的魔力</a></li><li>⭐️ <a href="https://juejin.cn/post/7241938328839618597" target="_blank" rel="noopener noreferrer">Go 函数选项模式（Functional Options Pattern）</a></li><li>⭐️ <a href="https://juejin.cn/post/7246777406387306553" target="_blank" rel="noopener noreferrer">Go 项目分层下的最佳 error 处理方式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xjkY6hJnUq5btDyJuSOZrg" target="_blank" rel="noopener noreferrer">Go 语言 iota 的神奇力量</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sJeXoxTSh7M9azpsbsr1rQ" target="_blank" rel="noopener noreferrer">高阶函数编程：探索Go语言中的函数一等公民</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_enXW8Pk4okosAgDo_aYSw" target="_blank" rel="noopener noreferrer">[<!-- -->Go开源工具<!-- -->]<!-- --> go-optioner：轻松生成函数选项模式代码</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/biTRyEu2h8AzQaQf7Ik8nA" target="_blank" rel="noopener noreferrer">深入探索 Go 1.21.0 中的 maps 工具库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_a9d67L8l7G6EDJom1kixw" target="_blank" rel="noopener noreferrer">Go Gin 框架系列 - 入门篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gC4D9CqeYAd-jPotKgIV4g" target="_blank" rel="noopener noreferrer">Go 项目必备：深入浅出 Wire 依赖注入工具</a></li><li>⭐️ <a href="https://juejin.cn/post/7226187111330611255" target="_blank" rel="noopener noreferrer">快速上手 Go CGO，掌握在 Go 里写 C！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1NuBnk8_lxmTi9N0biLa2g" target="_blank" rel="noopener noreferrer">Go1.21 速览：过了一年半，slices、maps 泛型库终于要加入标准库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/N7_-WNBsTpTc4X8qTQw-Nw" target="_blank" rel="noopener noreferrer">Go1.22 可能会解决循环变量的坑，真好！！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xgJ8lPS-O84Ttne5heRa3g" target="_blank" rel="noopener noreferrer">Go1.21 速览：骚操作 panic(nil) 将成为历史！以后别这么干了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rxxQhrVk3_4ZvTjsIJbstw" target="_blank" rel="noopener noreferrer">Go1.21.0 新特性：不需要循环 delete map 元素了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MorBUrzpKFhssiZWLt4o6g" target="_blank" rel="noopener noreferrer">Go1.21 速览：新内置函数 clear、min、max 和新标准库包 cmp！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/s13EBwOExsVz_vwNEm0fvQ" target="_blank" rel="noopener noreferrer">Go1.21 速览：go.mod 的 Go 版本号将会约束 Go 程序构建，要特别注意了！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/b_TYBRIZ3-EORFYq1xRjyQ" target="_blank" rel="noopener noreferrer">Go 将引入标准库 v2 版本，首个动手的是：math/rand/v2！</a></li><li>⭐️ <a href="https://juejin.cn/post/7249913673216966714" target="_blank" rel="noopener noreferrer">Go1.21 速览：Context 可以设置取消原因和回调函数了，等的可太久了！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VO0VlfGbuvZst9yD73-VDQ" target="_blank" rel="noopener noreferrer">Go 团队将修改 for 循环变量的语义，Go1.21 新版本即可体验！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Z8kMDwuv9ZlmqvdrOu5SEQ" target="_blank" rel="noopener noreferrer">Google 工作 10+ 年的感悟，有看到 Go 核心团队的影子吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4vpgxwTEn-xjdmXF5Hj7Kw" target="_blank" rel="noopener noreferrer">Go defer 去掉闭包函数，靠谱吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xjjnE5hcspbNRGHP-I869A" target="_blank" rel="noopener noreferrer">另一种视角：我为什么放弃 Go 语言</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4pPpHRWflkkvqrf-FlXztg" target="_blank" rel="noopener noreferrer">Go 面试题：string 是线程安全的吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/BfW8Ra3tsv7Dv3nu3MeI0g" target="_blank" rel="noopener noreferrer">Go 改版本号规则，主版本号终于支持第三位数字 0 了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Nuj_cYFvBesaBbSSz5PuBg" target="_blank" rel="noopener noreferrer">Go1.21 那些事：泛型库、for 语义变更、统一 log/slog、WASI 等新特性，你知道多少</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/jk7k5v9uvaNy_2fUsDjq0Q" target="_blank" rel="noopener noreferrer">又有新功能！Go 将有生成新模板的 gonew 工具链</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/o1iKbXJEikJn8BLwetvF5g" target="_blank" rel="noopener noreferrer">Go 将增加内置的零值标识符 zero！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/M6b4Q7rwKSt4KNKJN7_j4g" target="_blank" rel="noopener noreferrer">Go 零值和空值的判断问题</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/5kNyYJhrzigujLq1YSVjHw" target="_blank" rel="noopener noreferrer">Go 负责人说以后不会有 Go2 了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/TlJFr25XNgGA7uyRtLMOlw" target="_blank" rel="noopener noreferrer">Go 常量为什么只支持基本数据类型</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xO_w3FvNN8OeiuEYFarwGQ" target="_blank" rel="noopener noreferrer">Go 官方新玩具：漏洞管理和扫描，看看自己项目有没有坑</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4yfVZCaJ1489ddpYD5vDQA" target="_blank" rel="noopener noreferrer">快速掌握 Go 工作区模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/C_KpYoul8ko5yrVLMe_uQg" target="_blank" rel="noopener noreferrer">「必知必会」 Nacos 的面试题和详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8XdbLrlzHhofiC089AMb1Q" target="_blank" rel="noopener noreferrer">zookeeper到nacos的迁移实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/YGhndR5zR-Ebf8IaKbFZiQ" target="_blank" rel="noopener noreferrer">上篇：带你手工体验从写代码、编译、打包镜像、部署到K8S的全过程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yJ6rkYrwn8RAMLt5uCF9mw" target="_blank" rel="noopener noreferrer">下篇：使用jenkins发布go项目到k8s，接上篇的手工体验改造为自动化发布</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/pW0vxt8k1pDk0OEz5asWGQ" target="_blank" rel="noopener noreferrer">值得收藏：K8S的kubectl常用命令已经按场景分好类，请您查阅</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/lYg-GdheztmkTo9mwqHGsg" target="_blank" rel="noopener noreferrer">避坑：Go并发编程时，如何避免发生竞态条件和数据竞争</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/bwkK3Yw02w4szwub2B2-ig" target="_blank" rel="noopener noreferrer">Go接口：运维开发场景中，go的接口到底怎么用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/bqZ6gAsOZoVEMSCeOuLbiQ" target="_blank" rel="noopener noreferrer">Go：4个场景就可以让你知道Goroutine和通道是怎么用的</a></li><li>⭐️ <a href="https://juejin.cn/post/7210747150828798008" target="_blank" rel="noopener noreferrer">不背锅运维：Go语言切片内存优化技巧和实战案例</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rxPAcU5zhWCtRQLbh9uxKw" target="_blank" rel="noopener noreferrer">Go实战：开发一个简单的gRPC Demo</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/im8JZV3bL9WVOn7VgArmhw" target="_blank" rel="noopener noreferrer">Go：使用Cobra打造强大命令行应用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/4VfTjWQwNO-tlxYbUOrWZw" target="_blank" rel="noopener noreferrer">Go的这个库，让你的命令行输出变得专业</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/nbouC5ynfZShaTMTYiCJFA" target="_blank" rel="noopener noreferrer">「Go开源包」asynq：一个基于redis的，简单、可靠、高效的分布式任务队列包</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/HBLwocMA2vQE2uFlJ0D8Iw" target="_blank" rel="noopener noreferrer">抽丝剥茧，记一次 Go 程序性能优化之旅</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1Y_A6WVslDthVjtbP9Ibvg" target="_blank" rel="noopener noreferrer">Go：记一次提升18倍的性能优化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/js3m_Fe6k4ys4aBSFDJhLQ" target="_blank" rel="noopener noreferrer">Go语言中JSON处理技巧总结</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ueNuYA23F3bQTwIKU-PZ2Q" target="_blank" rel="noopener noreferrer">探究｜Go JSON 三方包哪家强</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IAHEQu-N5OO-X_q-47GCsQ" target="_blank" rel="noopener noreferrer">Sonic: Go语言的超级JSON库，解析与编码速度狂飙</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/cjQyDdIgcdzj7LOeZf21bQ" target="_blank" rel="noopener noreferrer">收藏！！！一图掌握 Go 中 IO 包的关系</a></li><li>⭐️ <a href="https://juejin.cn/post/7207058392287346747" target="_blank" rel="noopener noreferrer">通过源码剖析Go的map扩容底层实现</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/cK2KMpN4vUrlDXEkTm7Mig" target="_blank" rel="noopener noreferrer">「有问必答」Gopher如何优雅的对时间进行格式化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/7qutgFgPDGyjKhxb6YVB3Q" target="_blank" rel="noopener noreferrer">Go 泛型的二十一个陷阱</a></li><li>⭐️ <a href="https://juejin.cn/post/7248388270723039290" target="_blank" rel="noopener noreferrer">保护数据隐私：深入探索Golang中的SM4加密解密算法</a></li><li>⭐️ <a href="https://juejin.cn/post/7248791708334899258" target="_blank" rel="noopener noreferrer">精选8道ES高频面试题和答案，后悔没早点看</a></li><li>⭐️ <a href="https://juejin.cn/post/7248995705291866169" target="_blank" rel="noopener noreferrer">精选Go高频面试题和答案汇总，阅读破万，收藏230+</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ldn5APfp0UooWbh4cmcM4A" target="_blank" rel="noopener noreferrer">Go进阶面试题详解 | 文末送书</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/GXAvaFvXR3HYI7qU4lL4lA" target="_blank" rel="noopener noreferrer">Go中这么多创建error的方式，你真的了解它们各自的应用场景吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/6aicpVC3qjRpf1ILI4V4lA" target="_blank" rel="noopener noreferrer">基于Redis实现一个简单的固定窗口限流器</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/CUQaiZp4BrulnXvLd9ogZQ" target="_blank" rel="noopener noreferrer">go channel应用系列之控制协程数量</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/YJp2jxuBwwbPBaMWlDZG9g" target="_blank" rel="noopener noreferrer">配图清新的Protobuf 编码&amp;避坑指南</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iptZLaGFLd1rDedclQUMFg" target="_blank" rel="noopener noreferrer">写给开发者的gRPC教程-服务发现与负载均衡</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/oettru3CV_Cjqv5GEOmcMw" target="_blank" rel="noopener noreferrer">答网友问：golang中的slice作为函数参数时是值传递还是引用传递</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/OXopl6FpwtE6P-k0GEP9qA" target="_blank" rel="noopener noreferrer">Go可用性(七) 总结: 一张图串联可用性知识点</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MSwUlVGPDRBjdR-xh5cNfA" target="_blank" rel="noopener noreferrer">Go 工程化(十) 如何在整洁架构中使用事务</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/pb0P_y34N3uOhMu0SDqC2A" target="_blank" rel="noopener noreferrer">Go 工程化(十一) 如何优雅的写出 repo 层代码</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2wYRmG_AiiHYjLDEXg94Ag" target="_blank" rel="noopener noreferrer">使用 Go 语言实现二叉搜索树</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/7hU0iSDBg0z1nYZnB-61gQ" target="_blank" rel="noopener noreferrer">Opentelemetry 实践分享 - Golang篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xavjsa4NzRiVRxyMhifCDg" target="_blank" rel="noopener noreferrer">Golang实现单机百万长连接服务 - 美图的三年优化经验</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IpvR28soReYC3nNkAisteA" target="_blank" rel="noopener noreferrer">使用go-zero快速构建微服务</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yHD5XKsk6emuXjcnU2JxDw" target="_blank" rel="noopener noreferrer">大型 Go 代码库的 3 种最佳设计模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/n199y8JEyjuGFwUEyH2XVg" target="_blank" rel="noopener noreferrer">Asynq: 基于Redis实现的Go生态分布式任务队列和异步处理库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/C2kZGElYQmHz3OCb7LuYoA" target="_blank" rel="noopener noreferrer">「Go面经」算法 并发模型 缓存落盘 etcd actor模型</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2tFBe6LH84dZnOcfkgX32w" target="_blank" rel="noopener noreferrer">探索 Go1.21 中的 slices 包：原理，特点和示例</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/7nK4whfh0Owwhmq_67_eYg" target="_blank" rel="noopener noreferrer">盘点 Go 语言的那些日志库：你用了哪个</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_mXRLJ-h7Iqkrt1jq_sZXg" target="_blank" rel="noopener noreferrer">Go 语言为什么适合开发网络服务</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iamOjb0k3M2k_FVG9W7z0A" target="_blank" rel="noopener noreferrer">用 Go 编写简洁代码的最佳实践</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/7vDklpTsbRdRDvB0-yvB5g" target="_blank" rel="noopener noreferrer">Golang channel 三大坑，你踩过了嘛</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/j9Obe6Na25388AzeSL1dRA" target="_blank" rel="noopener noreferrer">使用Singleflight优化Go代码</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gVjq59qnLjy-gwibt7Q3yw" target="_blank" rel="noopener noreferrer">盘点 Go 语言的那些日志库：你用了哪个</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/G3FGOUo-F-stOp5eZjq4QQ" target="_blank" rel="noopener noreferrer">定了：Go 1.22将修复for循环变量错误</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/R_2pwdv2V1jj3zMjuUTNHw" target="_blank" rel="noopener noreferrer">Go字符串操作不是你想的那么简单！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/QlzH18i72pWPm012t7d42Q" target="_blank" rel="noopener noreferrer">Golang知识点(defer): 面试经常变量在 defer 中的值， 其实在问变量的作用域</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/VjP9Bv46x7NP6uQ7cbsqmg" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(1)：Gin框架中如何处理HTTP请求</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/x5qUJ-htS6ML1Cc8uYIDVQ" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(2)：net库对socket/bind/listen/accept的封装</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/WoXZ_i7lJeXny8lIJ_Aj4g" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(3): 基于系统调用实现tcp echo server</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/76xvAvnFAcDUAa6fgoZRfg" target="_blank" rel="noopener noreferrer">【补充代码】Go BIO/NIO探讨(3): 基于系统调用实现tcp echo server</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AvtIiC349sDqOe9labc3-A" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(4)：net/http 在 tcp conn 上的处理</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MO5XV40D3MI6NpEEpJiCMA" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(5)：net库的非阻塞支持</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/t_4uTGN9DFCjqDw4LZT-0w" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(6)：IO多路复用之select</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Zsh92yqK4e6mxNBLgY0Umw" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(7)：IO多路复用之epoll</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3_eToHvOw25JrC8-xePe_w" target="_blank" rel="noopener noreferrer">Go BIO/NIO探讨(8)：Go netpoll 的工作机制</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/-qms3hEl2mNMkDN1S4ZQoQ" target="_blank" rel="noopener noreferrer">Go协程池(1): 线程vs协程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ktMff61A9vvqeRGkGwQnwg" target="_blank" rel="noopener noreferrer">Go协程池(2): 如何实现协程池</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/cIgfuumVCL4rxtNYGcQH4A" target="_blank" rel="noopener noreferrer">高并发系统设计(1): 如何实现抖音关注/粉丝列表</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ydFRhjV70QC64N8r2zEtVA" target="_blank" rel="noopener noreferrer">SIMD能力初体验</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/q-keuybJ2d-QMXWoPpSbPA" target="_blank" rel="noopener noreferrer">[<!-- -->代码附录<!-- -->]<!-- --> SIMD能力初体验</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1kuLtd8rxC1xP628FgAwqw" target="_blank" rel="noopener noreferrer">服务架构简介</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Ane5iRMqYrtQMnC3TWlrwA" target="_blank" rel="noopener noreferrer">服务架构：大数据架构</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/dOw25R2xihr0M3T27fYUSA" target="_blank" rel="noopener noreferrer">服务架构：微服务架构</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/CUCHUQa6lYuPhvEALdIQQg" target="_blank" rel="noopener noreferrer">服务架构：分层架构</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/P1j0vg2FYqt1zvwPQsdtww" target="_blank" rel="noopener noreferrer">服务架构：Web-Queue-Worker架构</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/YkOoLbH2P2HheQxomGsbNQ" target="_blank" rel="noopener noreferrer">异步请求-响应模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Q-YvkWhFC2uK1z5AKEKSnw" target="_blank" rel="noopener noreferrer">Sidecar模式</a></li><li>⭐️ <a href="https://juejin.cn/post/7157594175846744071" target="_blank" rel="noopener noreferrer">适合团队和个人项目的 Golang 编码规范</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1CY3E5daJ5U42orVwzCpaw" target="_blank" rel="noopener noreferrer">Go Scheduler 的 GMP 模型</a></li><li>⭐️ <a href="https://juejin.cn/post/7116817920209977351" target="_blank" rel="noopener noreferrer">Golang 泛型初识</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/yHB9BzEGIki1fyjYojdpYQ" target="_blank" rel="noopener noreferrer">Go 语言官方依赖注入工具 Wire 使用指北</a></li><li>⭐️ <a href="https://juejin.cn/post/7043587400131411976" target="_blank" rel="noopener noreferrer">Go 服务端开发总结</a></li><li>🌛 <a href="https://eddycjy.com/go-categories/" target="_blank" rel="noopener noreferrer">Go 语言入门系列：初探 Go 项目实战</a></li><li>🌛 <a href="https://golang2.eddycjy.com/" target="_blank" rel="noopener noreferrer">Go 语言编程之旅：深入用 Go 做项目</a></li><li>🌛 <a href="https://golang3.eddycjy.com/" target="_blank" rel="noopener noreferrer">Go 语言设计哲学：了解 Go 的为什么和设计思考</a></li><li>🌛 <a href="https://golang1.eddycjy.com/" target="_blank" rel="noopener noreferrer">Go 语言进阶之旅：进一步深入 Go 源码</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUxMDI4MDc1NA==&amp;scene=1&amp;album_id=1383459655464337409&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】HTTP 系列教程</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUzNTY5MzU2MA==&amp;scene=1&amp;album_id=1323498303014780929&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go 语言 Web 编程</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUzNTY5MzU2MA==&amp;action=getalbum&amp;album_id=1325302744319737858&amp;scene=21&amp;from_msgid=2247484375&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go 语言并发编程</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/homepage?__biz=MzkyNzI1NzM5NQ==&amp;hid=2&amp;sn=4d298cf2d9ad21260321275cf6c75194&amp;scene=1&amp;devicetype=iOS14.0&amp;version=18000733&amp;lang=zh_CN&amp;nettype=3G+&amp;ascene=7&amp;session_us=gh_169729c17b9c&amp;fontScale=100" target="_blank" rel="noopener noreferrer">【系列文章】Go 源码</a></li><li>🌛 <a href="http://mp.weixin.qq.com/mp/homepage?__biz=MzkyMzIyNjIxMQ==&amp;hid=1&amp;sn=631fe1ce375f2cd672449d0bd01963d2&amp;scene=18#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go源码与底层</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUzNTY5MzU2MA==&amp;scene=1&amp;album_id=1394839706508148737&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Kubernetes 学习笔记</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUxMDI4MDc1NA==&amp;scene=1&amp;album_id=1488826194207752195&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】微服务设计和思考</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUzNTY5MzU2MA==&amp;action=getalbum&amp;album_id=1809543596702777345&amp;scene=21&amp;from_msgid=2247492061&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go 微服务实战</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUzNTY5MzU2MA==&amp;scene=1&amp;album_id=1326949382503219201&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go 语言实战技巧</a></li><li>🌛 <a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;__biz=MzUxMDI4MDc1NA==&amp;scene=1&amp;album_id=1751854579329056768&amp;count=3#wechat_redirect" target="_blank" rel="noopener noreferrer">【系列文章】Go 面试题</a></li><li>⭐️ <a href="https://go.dev/doc/effective_go" target="_blank" rel="noopener noreferrer">Golang 进阶 - Effective Go</a></li><li>⭐️ <a href="https://go.dev/doc/faq" target="_blank" rel="noopener noreferrer">Golang 进阶 - Go FAQ</a></li><li>⭐️ <a href="https://go.dev/blog/all" target="_blank" rel="noopener noreferrer">Golang 进阶 - blog文章</a></li><li>⭐️ <a href="https://go.dev/talks/" target="_blank" rel="noopener noreferrer">Golang 进阶 - 各个talk资料</a></li><li>⭐️ <a href="https://tonybai.com/2019/10/12/uber-go-style-guide/" target="_blank" rel="noopener noreferrer">Golang 进阶 - Uber Go语言编码规范</a></li><li>⭐️ <a href="https://tonybai.com/google-go-style/" target="_blank" rel="noopener noreferrer">Golang 进阶 - Google Go语言编码风格规范</a></li><li>⭐️ <a href="https://github.com/golang/go/wiki/CodeReviewComments" target="_blank" rel="noopener noreferrer">Golang 进阶 - CodeReviewComments</a></li><li>⭐️ <a href="https://github.com/golang/go/wiki/SliceTricks" target="_blank" rel="noopener noreferrer">Golang 进阶 - SliceTricks</a></li><li>⭐️ <a href="https://github.com/golang/go/wiki/CompilerOptimizations#optimized-memclr" target="_blank" rel="noopener noreferrer">Golang 进阶 - CompilerOptimizations</a></li><li>⭐️ <a href="https://github.com/golang/go/wiki#learning-more-about-go" target="_blank" rel="noopener noreferrer">Golang 进阶 - learning-more-about-go</a></li><li>⭐️ <a href="https://github.com/luk4z7/go-concurrency-guide" target="_blank" rel="noopener noreferrer">Golang 进阶 - go-concurrency-guide</a></li></ul></li><li>Golang 文章分享<ul><li>⭐️ <a href="https://github.com/kevinyan815/gocookbook" target="_blank" rel="noopener noreferrer">Golang开发手记</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZVLaykgYaOACbT2r-K0qBg" target="_blank" rel="noopener noreferrer">分享三个阅读 Go 源码的窍门</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2qPeqi3qdk4sqtpqo-3_Uw" target="_blank" rel="noopener noreferrer">成为 Go 高手的 8 个 GitHub 开源项目</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rOtR8FfMpfBZrIkyRrNsfQ" target="_blank" rel="noopener noreferrer">Go 语言代码风格规范-指南篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RCBUlu0gRuVFSQ2m8Uyycg" target="_blank" rel="noopener noreferrer">Go 语言代码风格规范-概述篇</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/vP2IDCK4cjyIGiutCoA7Pw" target="_blank" rel="noopener noreferrer">万字长文，教你用go开发区块链应用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8_pJiuOzoQt6xyoLUX0CIw" target="_blank" rel="noopener noreferrer">Go 服务网络不通？net/http自带的这个工具帮你快速定位</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RnsM-bWSRBiDS4v1JcRzdg" target="_blank" rel="noopener noreferrer">颠覆微服务架构？谷歌最新开源service weaver初体验</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/i1loQpQufni3v4Ho2J6Pgw" target="_blank" rel="noopener noreferrer">一个 Go 程序的 Benchmark 基准分析工具</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RLqjkV_1geeVkXeG9TLHFw" target="_blank" rel="noopener noreferrer">你说 Go 的切片原生支持并发吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gNQETEVBMOH0US42M0uODg" target="_blank" rel="noopener noreferrer">电脑用GoLand太卡，记录下自己把VsCode定制成Go IDE的步骤和过程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iRgaOlFs52O2TMScu8wDzg" target="_blank" rel="noopener noreferrer">用了Go匿名结构体，搬砖效率更高，产量更足了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/KaesgBLyTz7xi9eXvSTMmQ" target="_blank" rel="noopener noreferrer">合订本｜用Go语言实现23种设计模式及学习重点</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/91-XUm5Gn9oQLd_F4dLb3A" target="_blank" rel="noopener noreferrer">Go设计模式--中介者，最后的模式！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8v0UZWygCvkbye4Y0P-3sQ" target="_blank" rel="noopener noreferrer">Go设计模式--解释器模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/n1R1fnRZuDwlaQqsDh5y3g" target="_blank" rel="noopener noreferrer">Go设计模式--命令模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/RikZAeI2Pic4vYwVNh4HnA" target="_blank" rel="noopener noreferrer">Go设计模式--备忘录模式，带暂存的业务功能可以参考它来实现</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/qsw89qI8DOXyb4C1XI5QtA" target="_blank" rel="noopener noreferrer">Go设计模式--访客模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/sABibBRsC2kknbAH18oatA" target="_blank" rel="noopener noreferrer">Go设计模式-迭代器到底是不是一个多此一举的模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/O8shSU46TcgFPx3h7NGFAA" target="_blank" rel="noopener noreferrer">Go设计模式--桥接模式，让代码既能多维度扩展又不会臃肿</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AZHO7R6IXFG8MguDpUNdbw" target="_blank" rel="noopener noreferrer">Go设计模式--享元模式，节省内存的好帮手</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/X9dKNO6sd-OY2VfsZpaElA" target="_blank" rel="noopener noreferrer">Go设计模式实战--用状态模式实现系统工作流和状态机</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/tC9xfZFJvcNEbTXHQYvT6w" target="_blank" rel="noopener noreferrer">外观模式，一个每天都在用，却被多数人在面试中忽视的模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/r8975amH-DcJkWQKytIeJQ" target="_blank" rel="noopener noreferrer">Go 设计模式｜项目依赖耦合度太高？可以用适配器做下优化</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/JKWbyr4Yt7A6l1nFsANUcQ" target="_blank" rel="noopener noreferrer">Go 设计模式｜组合，一个对数据结构算法和职场都有提升的设计模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_e9Qa97gZvgv9n-pFB4lFw" target="_blank" rel="noopener noreferrer">Go学设计模式--装饰器和职责链，哪个模式实现中间件更科学</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/59cxPFHWcdnUxKyRyo8SKw" target="_blank" rel="noopener noreferrer">sourcegraph 出品的并发库 conc 详解</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/AUSse5z1YES9wtKCiMdyWA" target="_blank" rel="noopener noreferrer">Go语言实现的可读性更高的并发神库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/LW8Woq5Rg4x31DbtD-_jeA" target="_blank" rel="noopener noreferrer">两种 Option 编程模式的实现，Uber推荐这一种</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SFbSAGwQgQBVWpySYF-rkw" target="_blank" rel="noopener noreferrer">Go版本大于1.13，程序里这样做错误处理才地道</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IelVDnMzGtT5y7hGSb_OxA" target="_blank" rel="noopener noreferrer">面试官：net/http库知道吗？能说说优缺点吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3uWozu4VIUJHyIGut3_0Bg" target="_blank" rel="noopener noreferrer">Go 模糊测试fuzzing的原理分析</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/FTXkgxkUzsHMIspCK60G4w" target="_blank" rel="noopener noreferrer">Go学设计模式--怕把核心代码改乱，记得用代理模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/zCh12E10JM24EGTyFS7hPQ" target="_blank" rel="noopener noreferrer">你也是业务开发？提前用这个设计模式预防产品加需求吧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/IQsojcdwLZ1g0TgVQDoqVw" target="_blank" rel="noopener noreferrer">Go 程序里 if else 分支太多？试着用策略模式治理一下吧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/-Ysho1jI9MfrAIrplzj7UQ" target="_blank" rel="noopener noreferrer">用Go学设计模式-提炼流程，减少重复开发就靠它了!</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/cAwc6ZhdUwxkI5VT8LY9Hg" target="_blank" rel="noopener noreferrer">Go Gin框架请求自动验证和数据绑定，看完这篇就会用了</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Uu3EAWpRO9pSbg1F1DLa_w" target="_blank" rel="noopener noreferrer">Go开源库、大项目的公共包，是这么用建造者模式的</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/y1qHsQNR7EWeDU5g60Loqg" target="_blank" rel="noopener noreferrer">Go学设计模式--原型模式的考查点和使用推荐</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/MlC6-TDf06LGpF8hxcSV_w" target="_blank" rel="noopener noreferrer">工厂模式有三个Level，你能用Go写到第几层</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/1ZuhUA9Lt2uLFlamIY6fLQ" target="_blank" rel="noopener noreferrer">最简单的单例模式，Go版本的实现你写对了吗</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/OKUeAdicn0Bvkz8dYx1epQ" target="_blank" rel="noopener noreferrer">拒绝 Go 代码臃肿，其实在这几块可以用下观察者模式</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SpVTl64W1Exy8fuN15-kmA" target="_blank" rel="noopener noreferrer">Go指针的使用限制和突破之路</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/TtN6NZ8hQ2AIf0C8wVzkjA" target="_blank" rel="noopener noreferrer">Go语言的IO库那么多，我该怎么选</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/gYWhjh1BburgeAU72mn_aw" target="_blank" rel="noopener noreferrer">Go 眼中的文件系统是什么？ io.FS</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/zJXPGYwNXIUyEOI0Kc15rg" target="_blank" rel="noopener noreferrer">几个提升Go语言开发效率的小技巧</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZVLaykgYaOACbT2r-K0qBg" target="_blank" rel="noopener noreferrer">分享三个阅读 Go 源码的窍门</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Elq7SWRpH08KmhX7auboOA" target="_blank" rel="noopener noreferrer">Gophers如何准备面试</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/FEPXDMFfvKgmtsymVTWzHw" target="_blank" rel="noopener noreferrer">Go Modules知识点总结</a></li><li>🌛 <a href="https://juejin.cn/post/7147939014870302756" target="_blank" rel="noopener noreferrer">给想转Go或者Go进阶同学的一些建议</a></li><li>🌛 <a href="https://juejin.cn/post/7131717990558466062" target="_blank" rel="noopener noreferrer">GO面试必知必会面试题</a></li><li><a href="https://mp.weixin.qq.com/s/kyGNVNDby5uq5JGfQt4Yrg" target="_blank" rel="noopener noreferrer">这些最常用的 Go CLI 命令，新手 Gopher 应该掌握</a></li><li><a href="https://mp.weixin.qq.com/s/7uobN6DmpIYqG34pOpvvlA" target="_blank" rel="noopener noreferrer">PGO 是啥，咋就让 Go 更快更猛了</a></li><li><a href="https://mp.weixin.qq.com/s/Pcp2FjcXk7Q7sV0Z-bEUNw" target="_blank" rel="noopener noreferrer">Go for 循环有时候真的很坑</a></li><li><a href="https://mp.weixin.qq.com/s/6KxJRG3lKUDY734t4EzAaA" target="_blank" rel="noopener noreferrer">深度解密Go语言之关于 interface 的 10 个问题</a></li><li><a href="https://mp.weixin.qq.com/s/qyEiEACuUd8SsyqCDLUjXA" target="_blank" rel="noopener noreferrer">手撸源码系列 - cache2go</a></li><li><a href="https://mp.weixin.qq.com/s/nc4s289ULpQkGlQuaFbZlQ" target="_blank" rel="noopener noreferrer">Go常见错误集锦之函数式选项模式</a></li><li><a href="https://mp.weixin.qq.com/s/THMhcM9TXydW8K5-Vvqvxg" target="_blank" rel="noopener noreferrer">详解并发编程基础之原子操作(atomic包)</a></li><li><a href="https://mp.weixin.qq.com/s/E2XwSIXw1Si1EVSO1tMW7Q" target="_blank" rel="noopener noreferrer">学习channel设计：从入门到放弃</a></li><li><a href="https://mp.weixin.qq.com/s/lJxjlDg5SkQyNLZBpOPP5A" target="_blank" rel="noopener noreferrer">context使用不当引发的一个bug</a></li><li><a href="https://mp.weixin.qq.com/s/S_EzyWZmFzzbBbxoSNe6Hw" target="_blank" rel="noopener noreferrer">Go语言如何实现可重入锁</a></li><li><a href="https://mp.weixin.qq.com/s/zlqZ-4EdzMNt3iubMknKLA" target="_blank" rel="noopener noreferrer">如何在测试中发现goroutine泄漏</a></li><li><a href="https://mp.weixin.qq.com/s/JC14dWffHub0nfPlPipsHQ" target="_blank" rel="noopener noreferrer">请勿滥用goroutine</a></li><li><a href="https://mp.weixin.qq.com/s/bhze_LcFHk7Y-QB4nEQKnA" target="_blank" rel="noopener noreferrer">面试官：哥们Go语言互斥锁了解到什么程度了</a></li><li><a href="https://mp.weixin.qq.com/s/E45dNnEURe87P709Ovu-Qw" target="_blank" rel="noopener noreferrer">Go工具之generate</a></li><li><a href="https://mp.weixin.qq.com/s/dN9G4Tnt9HgVqlNh73HNUQ" target="_blank" rel="noopener noreferrer">探究 Go 源码中 panic &amp; recover 有哪些坑</a></li><li><a href="https://mp.weixin.qq.com/s/Wdh2O4cnez95x0RBpMiDvQ" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#41 substrings and memory leaks</a></li><li><a href="https://mp.weixin.qq.com/s/39S-WWKt1rYNF9OUfFSCbw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#38 Misusing trim functions</a></li><li><a href="https://mp.weixin.qq.com/s/m0WyJyd2JwQfX1SP2H-jrA" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#37 Inaccurate string iteration</a></li><li><a href="https://mp.weixin.qq.com/s/P6rEyeLvl8gxT_4RJf235Q" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#36 Not understanding the concept of a rune</a></li><li><a href="https://mp.weixin.qq.com/s/Ls1_qaEnuc8MSZoDyTwa1Q" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#35 Using defer inside a loop</a></li><li><a href="https://mp.weixin.qq.com/s/XRQq1O9VROBxItSP4kC8zA" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#34 Ignoring how the break statement works</a></li><li><a href="https://mp.weixin.qq.com/s/gwsWE-NTBOs0NnsdNG4WBw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#33 Making wrong assumptions during map iterations</a></li><li><a href="https://mp.weixin.qq.com/s/58EVYGZ02xPfGYrprk7dRw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#32 Ignoring the impact of using pointer ...</a></li><li><a href="https://mp.weixin.qq.com/s/cuJAYXGOleUt0FG5brX8ng" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#31 Ignoring how arguments are evaluated in ...</a></li><li><a href="https://mp.weixin.qq.com/s/71wpR1kz5PgzVNBgpN855g" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#30 Ignoring the fact that elements are copied</a></li><li><a href="https://mp.weixin.qq.com/s/fpHMk37QGLQCXrPAdxXC_w" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#29 Comparing values incorrectly</a></li><li><a href="https://mp.weixin.qq.com/s/s5-Pl5u6yoZCPWwoeINs9g" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#28 maps and memory leaks</a></li><li><a href="https://mp.weixin.qq.com/s/9pfznxXKHCv-QEZBqHw1YQ" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#27 Inefficient map initialization</a></li><li><a href="https://mp.weixin.qq.com/s/TYxqo1BniI-wfKVHQsrjjw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#26 slices and memory leaks</a></li><li><a href="https://mp.weixin.qq.com/s/lAIB0l666R6Zh9NAdV809g" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#25 Unexpected side effects using slice append</a></li><li><a href="https://mp.weixin.qq.com/s/vZBePdCuKe12OMQOj6Rz4A" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#24 Not making slice copies correctly</a></li><li><a href="https://mp.weixin.qq.com/s/WsFGv9tcdRLP9K-NQSqimA" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#23 Not properly checking if a slice is empty</a></li><li><a href="https://mp.weixin.qq.com/s/uHmCU0v0xJ2RYlmq_lQAiQ" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#22 Being confused about nil vs. empty slices</a></li><li><a href="https://mp.weixin.qq.com/s/-Kt2QJdzEUDJx8MFvrUo7Q" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#20 Not understanding slice length and capacity</a></li><li><a href="https://mp.weixin.qq.com/s/epK_0yn_EPIWJjz9xmddcA" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#12 Project misorganization</a></li><li><a href="https://github.com/teivah/100-go-mistakes" target="_blank" rel="noopener noreferrer">100 Go Mistakes and How to Avoid Them</a></li><li><a href="https://mp.weixin.qq.com/s/aj_hULmeqy3whILr2ytECQ" target="_blank" rel="noopener noreferrer">Go 中基于 IP 地址的 HTTP 请求限流</a></li><li><a href="https://mp.weixin.qq.com/s/pe0CQa3tdrUmC86OSRBNeg" target="_blank" rel="noopener noreferrer">项目实战：用 Go 创建一个简易负载均衡器</a></li><li><a href="https://mp.weixin.qq.com/s/tloEYzrnKNrrAo1YKdeyrw" target="_blank" rel="noopener noreferrer">你知道几种Go并发控制方式</a></li><li><a href="https://mp.weixin.qq.com/s/H5HDrwhxZ_4v6Vf5xXUsIg" target="_blank" rel="noopener noreferrer">浅谈Golang两种线程安全的map</a></li><li><a href="https://mp.weixin.qq.com/s/YYvoeDfPMm8Y2kFu9uesGw" target="_blank" rel="noopener noreferrer">Go精妙的互斥锁设计</a></li><li><a href="https://mp.weixin.qq.com/s/CEIQUa7H43FR7M1ghkDSGg" target="_blank" rel="noopener noreferrer">Go更细粒度的读写锁设计</a></li><li><a href="https://mp.weixin.qq.com/s/Mro5XC8dS5ZAMvEVbJZsCw" target="_blank" rel="noopener noreferrer">Go 的 TryLock 实现</a></li><li><a href="https://mp.weixin.qq.com/s/oA6UJ-0R2OucFl-fbgrvWA" target="_blank" rel="noopener noreferrer">Go1.18 新特性：TryLock 是什么？需要它吗</a></li><li><a href="https://mp.weixin.qq.com/s/V2x0Nw3Y8lZxHYJh_yQ0dQ" target="_blank" rel="noopener noreferrer">Go中看似简单的WaitGroup源码设计，竟然暗含这么多知识</a></li><li><a href="https://mp.weixin.qq.com/s/Lsm-BMdKCKNQjRndNCLwLw" target="_blank" rel="noopener noreferrer">Go 标准库源码学习（一）详解短小精悍的 Once</a></li><li><a href="https://mp.weixin.qq.com/s/3VkcIg7NhCCiIwVRjuwR0A" target="_blank" rel="noopener noreferrer">Go 中为什么建议使用 NewXxx 这样的构造函数</a></li><li><a href="https://mp.weixin.qq.com/s/nA26g46tM_hu-khaGYniAQ" target="_blank" rel="noopener noreferrer">Uber Go语言编码规范</a></li><li><a href="https://mp.weixin.qq.com/s/KHzdEE_w_ev9p4v6MR7M8Q" target="_blank" rel="noopener noreferrer">怎么选择 Go 文件读取方案</a></li><li><a href="https://mp.weixin.qq.com/s/EeOxPkTe8WkOide49yIfEg" target="_blank" rel="noopener noreferrer">如何有效控制 Go 线程数</a></li><li><a href="https://mp.weixin.qq.com/s/OIqgqjXEvVmDUmnRqq4PGw" target="_blank" rel="noopener noreferrer">加大力度！Go 将会增强 Go1 向后兼容性</a></li><li><a href="https://mp.weixin.qq.com/s/Ucqqg4h9uRo7RVd8XCz80w" target="_blank" rel="noopener noreferrer">Go 的零值有什么用？看看这 4 个场景</a></li><li><a href="https://mp.weixin.qq.com/s/L_Sy4_6BURL4XWDK6bpEwg" target="_blank" rel="noopener noreferrer">Go 只会 if err != nil？这是不对的，分享这些优雅的处理姿势给你！</a></li><li><a href="https://mp.weixin.qq.com/s/cJON1H68eBFeuBpWhFbXXw" target="_blank" rel="noopener noreferrer">10+ 条 Go 官方谚语，你知道几条？</a></li><li><a href="https://mp.weixin.qq.com/s/xDXwsVjOfU2j3gisiHTZTQ" target="_blank" rel="noopener noreferrer">Go 适合 IO 密集型？并不准确！</a></li><li><a href="https://mp.weixin.qq.com/s/fzmN6zFVioQGedTdSDmyqQ" target="_blank" rel="noopener noreferrer">如何让 Go 反射变快</a></li><li><a href="https://mp.weixin.qq.com/s/y60q0-RMh8isd4u4PuLfUg" target="_blank" rel="noopener noreferrer">深入理解StatefulSet，用Kubernetes编排有状态应用</a></li><li><a href="https://juejin.cn/post/6844903433846145038" target="_blank" rel="noopener noreferrer">Go Modules 终极入门</a></li><li><a href="https://juejin.cn/post/7075098594151235597" target="_blank" rel="noopener noreferrer">非常适合PHP同学使用的GO框架：GoFrame</a></li><li><a href="https://mp.weixin.qq.com/s/EGN7G8ku-zkaZuzfBwx9Qw" target="_blank" rel="noopener noreferrer">看 Go 中的 struct 如何被优化，还有小插曲</a></li><li><a href="https://mp.weixin.qq.com/s/Qlqt1pP_Li-PxOICrz7bAw" target="_blank" rel="noopener noreferrer">在 Go 里用 CGO？这 7 个问题你要关注！</a></li><li><a href="https://mp.weixin.qq.com/s/Am0ORd08GsMc4xSdLG9kgg" target="_blank" rel="noopener noreferrer">Go 探讨了 13 年，怎么解决再赋值的坑</a></li><li><a href="https://juejin.cn/post/7134497015576133669" target="_blank" rel="noopener noreferrer">Go如何优雅的记录操作日志 | 冲刺掘金一周</a></li><li><a href="https://mp.weixin.qq.com/s/0c7emt54ayCrm1K16lk2SQ" target="_blank" rel="noopener noreferrer">如何更直观地理解 Go 调度过程</a></li><li><a href="https://mp.weixin.qq.com/s/FviFOLkIHuEjZdTg_qCoNQ" target="_blank" rel="noopener noreferrer">Go1.19 那些你不知道的新特性</a></li><li><a href="https://mp.weixin.qq.com/s/SrqJdng9cNUEVAS7nFaqAA" target="_blank" rel="noopener noreferrer">Go 中可别用复制锁，会有这些大问题！</a></li><li><a href="https://mp.weixin.qq.com/s/zyvO_hhUo1TRm6kMPcaFFQ" target="_blank" rel="noopener noreferrer">伙计，Go项目怎么使用枚举</a></li><li><a href="https://mp.weixin.qq.com/s/XPPwHd7eDUjvzsnuFwgbyw" target="_blank" rel="noopener noreferrer">Go ORM 单元测试全流程讲解</a></li><li><a href="https://mp.weixin.qq.com/s/r30z2i_sSuRfEnM_23wFlg" target="_blank" rel="noopener noreferrer">超全总结：Go语言如何操作文件</a></li><li><a href="https://mp.weixin.qq.com/s/HaF9qieEJWNUoyY9qTvnKw" target="_blank" rel="noopener noreferrer">Go 的时间转换和时区校对总记不住？给你一份备忘单</a></li><li><a href="https://mp.weixin.qq.com/s/ptJK7CDHCr6P4JCdsUXKdg" target="_blank" rel="noopener noreferrer">搞清楚 Go Mod的版本和伪版本，下次别乱用了</a></li><li><a href="https://mp.weixin.qq.com/s/7jLmwtP3xk-wbCFKqPLK2g" target="_blank" rel="noopener noreferrer">自己的项目，如何发布到Go Module上</a></li><li><a href="https://mp.weixin.qq.com/s/Dn2oM89mHEgoz8yVQnNEoQ" target="_blank" rel="noopener noreferrer">这不会又是一个Go的BUG吧</a></li><li><a href="https://mp.weixin.qq.com/s/YojNHW7kkjmmdjqBXCuQYA" target="_blank" rel="noopener noreferrer">这三个 Go 水平自测题，手写不出来还是先老实上班吧</a></li><li><a href="https://mp.weixin.qq.com/s/pR_XHTnhft2Hi_mY7JuEJg" target="_blank" rel="noopener noreferrer">不想Go 错误处理太臃肿，可以参考这个代码设计</a></li><li><a href="https://mp.weixin.qq.com/s/HuZn9hnHUBx3J4bAGYBYpw" target="_blank" rel="noopener noreferrer">关于Go程序错误处理的一些建议</a></li></ul></li><li>Golang 部署<ul><li>使用 Docker Desktop 搭建 k8s 集群</li><li><a href="https://mp.weixin.qq.com/s/MFd1R5VeEW0eLk-A4BqSQQ" target="_blank" rel="noopener noreferrer">天呐！我用 go 从零开始写了一个 k8s 应用管理工具（附完整代码和开发过程）</a></li><li><a href="https://mp.weixin.qq.com/s/Rrz-UEx2SwYmyWC5rKh4Wg" target="_blank" rel="noopener noreferrer">Go 语言 Web 应用怎么使用 Nginx 部署</a></li><li><a href="https://mp.weixin.qq.com/s/i3n0hoHRaYoDMWcC5DSQ3w" target="_blank" rel="noopener noreferrer">掌握了这篇 Dockerfile 中的 ARG 作用域， 就算 Build 镜像 CI 入门了 【文末抽奖】</a></li><li><a href="https://mp.weixin.qq.com/s/pen6G2aFsPfSqhKjgocVjQ" target="_blank" rel="noopener noreferrer">面试问 Dockerfile 的优化， 千万不要只会说减少层数</a></li><li><a href="https://mp.weixin.qq.com/s/10Ll8ipVGWg4HU4hjwILsQ" target="_blank" rel="noopener noreferrer">没想到在 Docker 容器中设置时区这么简单</a></li><li><a href="https://mp.weixin.qq.com/s/5NTgcdhn6CiZ2tg44_T-FQ" target="_blank" rel="noopener noreferrer">快收藏！超强图解Docker常见命令与实战！</a></li><li><a href="https://mp.weixin.qq.com/s/rDSKItZ8hvgjvpp4f4VzCQ" target="_blank" rel="noopener noreferrer">实时可视化Go Runtime指标，这个Go库超赞</a></li><li><a href="https://mp.weixin.qq.com/s/GfJqTG9XYx58eh5kImyeWg" target="_blank" rel="noopener noreferrer">主流监控系统技术选型，yyds！</a></li><li><a href="https://mp.weixin.qq.com/s/DEZPCzQul7wnZKqm1Ue6rg" target="_blank" rel="noopener noreferrer">从Go程序第一行代码，到在 K8s 上运行，要经历多少步</a></li><li><a href="https://mp.weixin.qq.com/s/ZU61NIMxh_UOo-chNvkPXA" target="_blank" rel="noopener noreferrer">在K8S上的Web服务该怎么做域名解析呢</a></li><li><a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/" target="_blank" rel="noopener noreferrer">https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/</a></li><li><a href="https://mp.weixin.qq.com/s/uruu3qbpSLbTRJJRcWTYqg" target="_blank" rel="noopener noreferrer">Kubernetes入门实践--部署运行Go项目</a></li><li><a href="https://mp.weixin.qq.com/s/hoJgL-sP2OtMEFAhYNCItA" target="_blank" rel="noopener noreferrer">线上Go项目的Docker镜像应该怎么构建</a></li><li><a href="https://blog.opskumu.com/docker.html" target="_blank" rel="noopener noreferrer">Docker 学习笔记</a></li><li><a href="https://mp.weixin.qq.com/s/Ze096f0Utcl84c6gBwrCYw" target="_blank" rel="noopener noreferrer">程序解Bug最常用的K8s命令，外加使用窍门</a></li></ul></li><li>Golang 开源库推荐<ul><li>⭐️ 字节跳动大规模企业级 HTTP 框架 Hertz 设计实践<ul><li><a href="https://mp.weixin.qq.com/s/J6ziP7VOitGk-lz8NGdDrA" target="_blank" rel="noopener noreferrer">HTTP 框架 Hertz 实践入门：性能测试指南</a></li><li><a href="https://juejin.cn/post/7124337913352945672" target="_blank" rel="noopener noreferrer">字节开源WEB框架Hertz太香啦！</a></li><li><a href="https://juejin.cn/post/7153889167385526308" target="_blank" rel="noopener noreferrer">字节跳动大规模企业级 HTTP 框架 Hertz 设计实践</a></li><li><a href="https://github.com/cloudwego/hertz" target="_blank" rel="noopener noreferrer">https://github.com/cloudwego/hertz</a></li><li><a href="https://www.cloudwego.io/blog/2021/10/09/bytedance-practices-on-go-network-library/" target="_blank" rel="noopener noreferrer">ByteDance Practices on Go Network Library</a></li><li><a href="https://www.cloudwego.io/docs/hertz/getting-started/" target="_blank" rel="noopener noreferrer">https://www.cloudwego.io/docs/hertz/getting-started/</a></li></ul></li><li><a href="https://mp.weixin.qq.com/s/025-MLMAbdT38kWI--AoYg" target="_blank" rel="noopener noreferrer">Go 语言终极搜索插件</a></li><li><a href="https://mp.weixin.qq.com/s/ie7LqXZQOUX0Bfn4QhHzLA" target="_blank" rel="noopener noreferrer">「Go开源包」snappy：google开源的快速、无损压缩包</a></li><li><a href="https://mp.weixin.qq.com/s/Vkx8zzm1SjIl4IXLib3xkQ" target="_blank" rel="noopener noreferrer">「Go开源包」xxhash：比标准库更快，基于xxHash算法实现的64位的整型hash值</a></li><li><a href="https://mp.weixin.qq.com/s/xt0v6snX6y5jaOy1IniwVw" target="_blank" rel="noopener noreferrer">「Go开源包」env：一个将系统环境变量解析到结构体的库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/rGPsEt-XDOayDWwLGxvcsw" target="_blank" rel="noopener noreferrer">「Go开源包」chromedp：一个基于Chrome DevTools协议的库，支持数据采集、截取网页长图</a></li><li>⭐️ <a href="https://juejin.cn/post/7248951438742339639" target="_blank" rel="noopener noreferrer">「Go开源包」nunu：一个快速构建应用程序的脚手架</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/_TBmfaVwvX5VDRe8kLReXA" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】Shopify 出品的完整度最完善的 Kafka 客户端_sarama</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/iHIxsEZf3w06GbO2sHSuRA" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」Golang的Ealstic链接库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/wGqwfX8lEifeD_VGcITmHw" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」协程池ants介绍</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/2cERDCRKlmfHKv8gY324Hg" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」使用 cmux 实现服务端连接多路复用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/dkbpIvy1o5aLnklt0ddIDA" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」使用GO语言启动docker Container</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/uLpmEV8mI4JpfNVfSK8cRQ" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」抽象语法树go/ast库使用</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/weT4KUTTLWdQaC6q7VrPPg" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」万能的对象拷贝工具——Copier</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/q3wRIvoXpnPLPJsDAPTdeA" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」漏桶限流库 — uber-go/ratelimit</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/emNifkcdn9oRjVHRcQmK9w" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」时间轮算法定时器antlabs/timer介绍</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/3iPqxiK2mf9Fl5CSZ9U7RQ" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】Goroutine 泄漏防治神器 goleak</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/SWyMIE1rtVDVUPEFno4xsQ" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】异步任务队列Asynq</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/X6Fo_6pEZTIZJ-1MJNrg6A" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】protobuf生成Go代码插件gogo/protobuf</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/ZoVr9ubPgcvjX9ERiQoLyA" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】Golang官方认可的websocket库-gorilla/websocket</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/JrEQwQZQRwf4SymprwKUmw" target="_blank" rel="noopener noreferrer">【GoCN酷Go推荐】Html解析利器-goquery库</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/zRmAjQ0o9n8FE1R0WcnUtQ" target="_blank" rel="noopener noreferrer">「GoCN酷Go推荐」高性能中文分词库 gojieba</a></li><li><a href="https://mp.weixin.qq.com/s/8YRqypiW1dQQVlZkmCd1mQ" target="_blank" rel="noopener noreferrer">「Go工具箱」解析http中的user-agent，就用这个包：user_agent</a></li><li><a href="https://mp.weixin.qq.com/s/92O1SHs4tw1FMcDeQoSfkA" target="_blank" rel="noopener noreferrer">「Go工具箱」推荐一个轻量级、语义化的时间处理库：carbon</a></li><li><a href="https://mp.weixin.qq.com/s/n-kU6nwhOH6ouhufrP_1kQ" target="_blank" rel="noopener noreferrer">Go每日一库之CSRF库的使用方式和实现原理</a></li><li><a href="https://mp.weixin.qq.com/s/f4FAt-RgraOFXSfZmWjeoQ" target="_blank" rel="noopener noreferrer">Go 每日一库之 go-cache 缓存</a></li><li><a href="https://mp.weixin.qq.com/s/KCj-mCkZpcEu3GXkuRLTuA" target="_blank" rel="noopener noreferrer">「Go工具箱」redis官网推荐的go版本的分布式锁：redsync</a></li><li><a href="https://github.com/samber/lo" target="_blank" rel="noopener noreferrer">https://github.com/samber/lo</a></li><li><a href="https://github.com/nikoksr/notify" target="_blank" rel="noopener noreferrer">https://github.com/nikoksr/notify</a></li><li><a href="https://github.com/go-chi/chi" target="_blank" rel="noopener noreferrer">https://github.com/go-chi/chi</a></li><li><a href="https://github.com/gin-gonic/examples" target="_blank" rel="noopener noreferrer">https://github.com/gin-gonic/examples</a></li><li><a href="https://mp.weixin.qq.com/s/zLNwq32UKaCsaAXn2BaZkw" target="_blank" rel="noopener noreferrer">「Go工具箱」重磅推荐：一个国产的，star高达12k+的操作excel的包：Excelize</a></li><li><a href="https://mp.weixin.qq.com/s/Y3NGQH3hrT85O7aN7IrCIQ" target="_blank" rel="noopener noreferrer">「Go工具箱」一个让终端内容彩色化的工具：Color</a></li></ul></li><li>Golang 相关资源<ul><li>🌟 <a href="https://research.swtch.com/" target="_blank" rel="noopener noreferrer">Russ Cox 的个人博客</a></li><li>🌟 <a href="https://tonybai.com/articles/" target="_blank" rel="noopener noreferrer">Tony Bai 博客</a></li><li>🌟 <a href="https://gopherdaily.tonybai.com/" target="_blank" rel="noopener noreferrer">Gopher Daily</a></li><li>🌟 <a href="https://xargin.com/" target="_blank" rel="noopener noreferrer">ChatGPT 与我合力开发 xargin blog archive 插件：曹大博客的新奇探险</a></li><li>🌟 <a href="https://qcrao.com/" target="_blank" rel="noopener noreferrer">qcrao 的博客</a></li><li>🌟 <a href="https://github.com/golang-design/go-questions" target="_blank" rel="noopener noreferrer">Go 程序员面试笔试宝典</a></li><li>🌟 <a href="https://books.studygolang.com/gopl-zh/" target="_blank" rel="noopener noreferrer">Go语言圣经（中文版）</a></li><li>🌟 <a href="http://books.studygolang.com/The-Golang-Standard-Library-by-Example/" target="_blank" rel="noopener noreferrer">Go语言标准库书籍</a></li><li>🌟 <a href="https://www.topgoer.cn/" target="_blank" rel="noopener noreferrer">地鼠文档</a></li><li>🌟 <a href="https://www.topgoer.cn/docs/golang/golang-1ccjbpfstsfi1" target="_blank" rel="noopener noreferrer">go语言中文文档 - 地鼠文档</a></li><li>🌟 <a href="https://go-proverbs.github.io/" target="_blank" rel="noopener noreferrer">Go 官方谚语 Go Proverbs</a></li><li><a href="https://mp.weixin.qq.com/s/cidtQEAfuFWuYveKFbFvKQ" target="_blank" rel="noopener noreferrer">GoLand 2023.2 发布：有 AI 助手</a></li><li><a href="https://mp.weixin.qq.com/s/SVMj-PvI1l-oSlxI4zaNcw" target="_blank" rel="noopener noreferrer">GoLand 2023.1 正式发布，看有哪些新功能</a></li><li><a href="https://mp.weixin.qq.com/s/IvL24_7iuuRp9Y3dljHaHQ" target="_blank" rel="noopener noreferrer">GoLand 迎来五周年，同时发布 2022.3：有彩蛋</a></li><li>🌟 <a href="https://mp.weixin.qq.com/s/jrua9iSa1Huk3UvMluVe7w" target="_blank" rel="noopener noreferrer">这可能是最权威、最全面的Go语言编码风格规范了！</a></li><li><a href="https://mp.weixin.qq.com/s/2qPeqi3qdk4sqtpqo-3_Uw" target="_blank" rel="noopener noreferrer">成为 Go 高手的 8 个 GitHub 开源项目</a></li><li><a href="https://github.com/Alikhll/golang-developer-roadmap" target="_blank" rel="noopener noreferrer">golang-developer-roadmap: 2020 年成为 Go 开发者的路线图</a></li><li><a href="https://github.com/go-admin-team/go-admin" target="_blank" rel="noopener noreferrer">go-admin: 基于 Gin + Vue + Element UI 的独立前后端权限管理系统的脚手架</a></li><li><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener noreferrer">awesome-go: 精选的 Go 框架、库和软件的列表</a></li><li><a href="https://mp.weixin.qq.com/s/wKxg6IVZCNK3NG2Os9_3jg" target="_blank" rel="noopener noreferrer">Go 13 周年啦！</a></li><li><a href="https://mp.weixin.qq.com/s/rPKO23mHDGofeyzeCIHJxQ" target="_blank" rel="noopener noreferrer">给，你要的Go学习路线图来啦</a><ul><li>🌟 <a href="https://golangbyexample.com/" target="_blank" rel="noopener noreferrer">Golang By Example</a></li><li><a href="https://golangbyexample.com/golang-comprehensive-tutorial/" target="_blank" rel="noopener noreferrer">Golang Advanced Tutorial</a></li><li><a href="https://golangbyexample.com/all-design-patterns-golang/" target="_blank" rel="noopener noreferrer">All Design Patterns in Go (Golang)</a></li><li><a href="https://techbyexample.com/system-design-questions/" target="_blank" rel="noopener noreferrer">System Design Questions</a></li><li><a href="https://blog.gokit.info/post/go-solid-design/" target="_blank" rel="noopener noreferrer">SOLID Go Design - Go语言面向对象设计</a></li><li><a href="https://github.com/mohuishou/go-design-pattern" target="_blank" rel="noopener noreferrer">go design pattern</a></li><li><a href="https://mp.weixin.qq.com/s/XIwfj_AdZqX_vHM4VIq9EA" target="_blank" rel="noopener noreferrer">万字详文阐释程序员修炼之道</a></li><li><a href="https://mp.weixin.qq.com/s/c3RApB8a98tWahgC9mahJg" target="_blank" rel="noopener noreferrer">万字详文告诉你如何做 Code Review</a></li></ul></li><li><a href="https://github.com/talkgo/read" target="_blank" rel="noopener noreferrer">Go 学习之路</a></li><li><a href="https://mp.weixin.qq.com/s/ipbUy3GBRMFat9jUSssMMw" target="_blank" rel="noopener noreferrer">1024，我们的节日，Gopher 该干点啥</a><ul><li>🌟 <a href="https://www.yuque.com/qyuhen/go" target="_blank" rel="noopener noreferrer">Go 语言学习笔记</a></li><li>🌟 <a href="https://books.studygolang.com/GoExpertProgramming/" target="_blank" rel="noopener noreferrer">GO专家编程</a></li><li>🌟 <a href="https://go101.org/article/101.html" target="_blank" rel="noopener noreferrer">Go 语言 101</a></li><li>🌟 <a href="https://go101.org/optimizations/101.html" target="_blank" rel="noopener noreferrer">Go Optimizations 101</a></li><li><a href="https://books.studygolang.com/" target="_blank" rel="noopener noreferrer">开源图书在线阅读 - Go语言中文网</a></li></ul></li><li>🌟 <a href="https://www.yuque.com/go-interview/set/xq5788" target="_blank" rel="noopener noreferrer">Go Interview</a></li><li>🌟 <a href="https://github.com/halfrost/LeetCode-Go" target="_blank" rel="noopener noreferrer">LeetCode Cookbook</a></li><li>🌟 <a href="https://books.halfrost.com/leetcode/" target="_blank" rel="noopener noreferrer">LeetCode Cookbook（在线阅读）</a></li><li>🌟 <a href="https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/" target="_blank" rel="noopener noreferrer">Go 语言设计与实现</a></li><li>🌟 <a href="https://books.studygolang.com/advanced-go-programming-book/" target="_blank" rel="noopener noreferrer">Go语言高级编程(Advanced Go Programming)</a></li><li><a href="https://github.com/geektutu/high-performance-go" target="_blank" rel="noopener noreferrer">Go 语言高性能编程</a></li><li>🌟 <a href="https://github.com/golang-design/under-the-hood" target="_blank" rel="noopener noreferrer">Go 语言原本</a></li><li>🌟 <a href="https://golang.design/under-the-hood/" target="_blank" rel="noopener noreferrer">Go 语言原本（在线阅读）</a></li><li>🌟 <a href="https://time.geekbang.org/column/intro/100093501" target="_blank" rel="noopener noreferrer">Tony Bai · Go 语言第一课</a></li><li>🌟 <a href="https://time.geekbang.org/column/intro/100061801" target="_blank" rel="noopener noreferrer">Go 并发编程实战课</a></li><li>🌟 <a href="https://time.geekbang.org/column/article/408409" target="_blank" rel="noopener noreferrer">Rust 编程第一课</a></li><li>🌟 <a href="https://quickref.me/go" target="_blank" rel="noopener noreferrer">Go cheatsheet</a></li><li>🌟 <a href="https://github.com/miguelmota/golang-for-nodejs-developers" target="_blank" rel="noopener noreferrer">Golang for Node.js Developers</a></li><li>🌟 <a href="https://studygolang.gitbook.io/learn-go-with-tests" target="_blank" rel="noopener noreferrer">Learn Go with tests</a></li><li>🌟 <a href="https://makeoptim.com/golang/standards/project-layout" target="_blank" rel="noopener noreferrer">golang 编程规范 - 项目目录结构</a></li><li><a href="https://github.com/talkgo/night" target="_blank" rel="noopener noreferrer">Go 夜读</a></li><li><a href="https://mp.weixin.qq.com/s/VKPSqS50Un29x30KIgB0tA" target="_blank" rel="noopener noreferrer">已入字节的大佬各厂三年Go面经</a></li></ul></li><li>Golang 算法<ul><li><a href="https://github.com/fangbinwei/algorithm-practice" target="_blank" rel="noopener noreferrer">https://github.com/fangbinwei/algorithm-practice</a></li></ul></li><li>Golang 项目参考<ul><li><a href="https://github.com/wangzhongyang007/goframe-shop-v2" target="_blank" rel="noopener noreferrer">https://github.com/wangzhongyang007/goframe-shop-v2</a></li><li><a href="https://github.com/fangbinwei/aliyun-oss-website-action" target="_blank" rel="noopener noreferrer">https://github.com/fangbinwei/aliyun-oss-website-action</a></li></ul></li><li>Golang 教程<ul><li><a href="https://www.w3cschool.cn/go/" target="_blank" rel="noopener noreferrer">https://www.w3cschool.cn/go/</a></li></ul></li><li>Golang 标准库文档<ul><li><a href="https://pkg.go.dev/std" target="_blank" rel="noopener noreferrer">https://pkg.go.dev/std</a></li></ul></li><li>Golang 单元测试<ul><li><a href="https://blog.csdn.net/ALEX_CYL/article/details/121793330" target="_blank" rel="noopener noreferrer">Golang-单元测试</a></li><li><a href="https://zhuanlan.zhihu.com/p/377834750" target="_blank" rel="noopener noreferrer">手把手教你如何进行 Golang 单元测试</a></li></ul></li><li>⭐️ <a href="https://zhuanlan.zhihu.com/p/471317280" target="_blank" rel="noopener noreferrer">Go 语言与并发编程</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/Xzlt_WcdcfLWhofafY3c6g" target="_blank" rel="noopener noreferrer">Golang 简洁架构实战</a></li><li>⭐️ <a href="https://juejin.cn/post/7065197280223035422" target="_blank" rel="noopener noreferrer">如何使用高阶函数编程提升代码的简洁性</a></li><li>🌛 <a href="https://mp.weixin.qq.com/s/36CqC1U54LUd4-izt4iZ1g" target="_blank" rel="noopener noreferrer">深入理解Go Json.Unmarshal精度丢失之谜</a></li><li><a href="https://mp.weixin.qq.com/s/EvkMQCPwg-B0fZonpwXodg" target="_blank" rel="noopener noreferrer">Go Error 处理最佳实践</a></li><li><a href="https://segmentfault.com/a/1190000013739000" target="_blank" rel="noopener noreferrer">Golang 新手可能会踩的 50 个坑</a></li><li><a href="https://zhuanlan.zhihu.com/p/437626980" target="_blank" rel="noopener noreferrer">Golang设计模式总结</a></li><li><a href="https://zhuanlan.zhihu.com/p/267341653" target="_blank" rel="noopener noreferrer">Golang 单元测试指引</a></li><li>⭐️ <a href="https://juejin.cn/post/7041846339189080101" target="_blank" rel="noopener noreferrer">使用Golang、Gin和React、esbuild开发的Blog</a></li><li>⭐️ <a href="https://github.com/go-gorm/gorm" target="_blank" rel="noopener noreferrer">gorm - Golang 的出色 ORM 库</a></li><li>⭐️ <a href="https://github.com/gofiber/fiber" target="_blank" rel="noopener noreferrer">fiber：受到 Express 启发的 Web 应用框架</a></li><li><a href="https://go.dev/" target="_blank" rel="noopener noreferrer">Golang 官方文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/426368274" target="_blank" rel="noopener noreferrer">Golang 编程思维和工程实战</a></li><li>⭐️ <a href="https://gobyexample.com/" target="_blank" rel="noopener noreferrer">Go by example</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="rust-学习">Rust 学习<a href="#rust-学习" class="hash-link" aria-label="Direct link to Rust 学习" title="Direct link to Rust 学习">​</a></h2><ul><li>⭐️ <a href="https://github.com/vinodotdev/node-to-rust/releases/download/v1/from-javascript-to-rust.pdf" target="_blank" rel="noopener noreferrer">PDF：从 JavaScript 到 Rust：新书免费发布</a></li><li>⭐️ <a href="https://github.com/google/comprehensive-rust" target="_blank" rel="noopener noreferrer">Google 出品的 Rust 教程</a></li><li>⭐️ <a href="https://course.rs/about-book.html" target="_blank" rel="noopener noreferrer">Rust语言圣经(Rust Course)</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/HKkt9cNZsUFdCR4nAlHeBA" target="_blank" rel="noopener noreferrer">揭秘前端眼中的Rust！</a></li><li>🌛 <a href="https://doc.rust-lang.org/book/" target="_blank" rel="noopener noreferrer">Rust 官方文档</a></li><li>🌛 <a href="https://doc.rust-lang.org/std/" target="_blank" rel="noopener noreferrer">Rust 标准库文档</a></li><li>🌛 <a href="https://doc.rust-lang.org/stable/rust-by-example/" target="_blank" rel="noopener noreferrer">Rust by Example</a></li><li>🌛 <a href="https://juejin.cn/post/7143822279992934436" target="_blank" rel="noopener noreferrer">选择 Go 还是 Rust？CloudWeGo-Volo 基于 Rust 语言的探索实践</a></li><li>🌛 <a href="https://zhuanlan.zhihu.com/p/417534662" target="_blank" rel="noopener noreferrer">用Rust锈化Vue Compiler</a></li><li>🌛 <a href="https://github.com/TheAlgorithms/Rust" target="_blank" rel="noopener noreferrer">用 Rust 实现的数据结构与算法合辑</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="网站推荐">网站推荐<a href="#网站推荐" class="hash-link" aria-label="Direct link to 网站推荐" title="Direct link to 网站推荐">​</a></h2><p><strong>文档相关</strong></p><ul><li><a href="https://github.com/search?q=&amp;type=" target="_blank" rel="noopener noreferrer">GitHub 搜索页面</a></li><li><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener noreferrer">MDN 文档</a></li><li><a href="https://caniuse.com/" target="_blank" rel="noopener noreferrer">caniuse：查询 API 兼容性</a></li><li><a href="https://snyk.io/advisor/" target="_blank" rel="noopener noreferrer">snyk：查询 NPM、Go、Docker 安全性</a></li><li><a href="https://bundlephobia.com/" target="_blank" rel="noopener noreferrer">bundlephobia：查询 NPM 包体积</a></li><li><a href="https://oscarotero.com/deno/" target="_blank" rel="noopener noreferrer">Deno cheat sheet</a></li><li><a href="https://beta.reactjs.org/learn" target="_blank" rel="noopener noreferrer">React Docs Beta</a></li><li><a href="https://overreacted.io/" target="_blank" rel="noopener noreferrer">Overreacted</a></li><li><a href="https://tailwindcss.com/docs/configuration" target="_blank" rel="noopener noreferrer">tailwindcss 样式参考</a></li><li><a href="https://explainshell.com/" target="_blank" rel="noopener noreferrer">Explain Shell</a></li><li><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener noreferrer">《阮一峰 ES6 教程》</a></li><li><a href="https://github.com/yeasy/docker_practice" target="_blank" rel="noopener noreferrer">Docker 从入门到实践</a></li><li><a href="https://github.com/koala-coding/goodBlog" target="_blank" rel="noopener noreferrer">【程序员成长指北】node 必知必会系列</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fblog.poetries.top%2Fbrowser-working-principle%2F" target="_blank" rel="noopener noreferrer">《浏览器工作原理与实践》</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.wuhaolin.cn%2F" target="_blank" rel="noopener noreferrer">《深入浅出 webpack》</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fprogrammercarl.com%2F" target="_blank" rel="noopener noreferrer">《代码随想录》</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fyuchengkai.cn%2F" target="_blank" rel="noopener noreferrer">《前端进阶之道》</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Freact.iamkasong.com%2F" target="_blank" rel="noopener noreferrer">《React 技术揭秘》</a></li><li><a href="https://github.com/7kms/react-illustration-series" target="_blank" rel="noopener noreferrer">《图解 React 源码系列》</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fustbhuangyi.github.io%2Fvue-analysis%2Fv2%2Fprepare%2F" target="_blank" rel="noopener noreferrer">《Vue 技术揭秘》</a></li><li><a href="http://caibaojian.com/vue-design/" target="_blank" rel="noopener noreferrer">《Vue技术内幕》</a></li><li><a href="https://i5ting.github.io/How-to-learn-node-correctly/" target="_blank" rel="noopener noreferrer">狼叔：如何正确的学习Node.js</a></li><li><a href="https://q.shanyue.tech/engineering/" target="_blank" rel="noopener noreferrer">大厂面试题每日一题</a></li><li><a href="https://shanyue.tech/op/#%E9%A2%84%E8%A7%88" target="_blank" rel="noopener noreferrer">前端工程化、个人服务器运维指南</a></li><li><a href="https://xiaoflyfish.cn/" target="_blank" rel="noopener noreferrer">MySQL、Linux、服务端架构</a></li><li><a href="https://xcoder.in/" target="_blank" rel="noopener noreferrer">Khaidi Chu 的博客</a></li><li><a href="https://github.com/chenyuntc/pytorch-book" target="_blank" rel="noopener noreferrer">《深度学习框架PyTorch：入门与实践》</a></li><li><a href="https://github.com/datawhalechina/pumpkin-book" target="_blank" rel="noopener noreferrer">《机器学习》（西瓜书）</a></li><li><a href="https://www.bilibili.com/video/BV1Mh411e7VU" target="_blank" rel="noopener noreferrer">《机器学习》配套视频教程</a></li><li>⭐️ <a href="https://abseil.io/blog/04222021-swe-book" target="_blank" rel="noopener noreferrer">Software Engineering at Google</a></li><li>⭐️ <a href="https://github.com/dair-ai/ML-YouTube-Courses" target="_blank" rel="noopener noreferrer">ML YouTube Courses</a></li><li>⭐️ <a href="https://github.com/vasanthk/how-web-works" target="_blank" rel="noopener noreferrer">How Web Works</a></li></ul><p><strong>开源推荐</strong></p><ul><li><a href="https://nextjs.org/docs/getting-started" target="_blank" rel="noopener noreferrer">Next.js</a></li><li><a href="https://tailwindcss.com/docs/configuration" target="_blank" rel="noopener noreferrer">tailwindcss 样式参考</a></li><li><a href="https://pnpm.io/installation" target="_blank" rel="noopener noreferrer">PNPM</a></li><li><a href="https://www.typescriptlang.org/docs/" target="_blank" rel="noopener noreferrer">TypeScript</a></li><li><a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a></li><li><a href="https://storybook.js.org/" target="_blank" rel="noopener noreferrer">Storybook</a></li></ul><p><strong>在线 Plyaground</strong></p><ul><li><a href="https://godbolt.org/" target="_blank" rel="noopener noreferrer">生成各个语言的汇编代码</a></li><li><a href="https://sfc.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue SFC Playground</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodesandbox.io%2Fdashboard%2Fhome" target="_blank" rel="noopener noreferrer">CodeSandBox</a></li><li><a href="https://codepen.io/" target="_blank" rel="noopener noreferrer">CodePen</a></li><li><a href="https://www.astexplorer.net/" target="_blank" rel="noopener noreferrer">AST explorer：可视化 AST</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fjex.im%2Fregulex" target="_blank" rel="noopener noreferrer">正则表达式可视化</a></li></ul><p><strong>编程风格指南</strong></p><ul><li>⭐️ <a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noopener noreferrer">typescript-eslint</a></li><li>⭐️ <a href="https://github.com/AlloyTeam/eslint-config-alloy" target="_blank" rel="noopener noreferrer">eslint-config-alloy</a></li><li>⭐️ <a href="https://github.com/airbnb/javascript" target="_blank" rel="noopener noreferrer">Airbnb JavaScript Style Guide</a></li><li>⭐️ <a href="https://github.com/ryanmcdermott/clean-code-javascript" target="_blank" rel="noopener noreferrer">clean-code-javascript</a></li></ul><p><strong>技术社区</strong></p><ul><li><a href="https://dev.to/" target="_blank" rel="noopener noreferrer">https://dev.to/</a></li><li><a href="https://medium.com/" target="_blank" rel="noopener noreferrer">https://medium.com/</a></li><li><a href="https://linuxhandbook.com/" target="_blank" rel="noopener noreferrer">https://linuxhandbook.com/</a></li></ul><p><strong>工具相关</strong></p><ul><li><a href="https://plantuml.com/" target="_blank" rel="noopener noreferrer">plantuml：用代码画时序图、用例图、类图、思维导图</a></li><li><a href="https://www.npmjs.com/package/njt" target="_blank" rel="noopener noreferrer">njt：快速导航至 npm 包资源</a></li><li><a href="https://www.skypack.dev/" target="_blank" rel="noopener noreferrer">skypack：无需构建工具使用各种经过优化的 npm 包</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcarbon.now.sh%2F" target="_blank" rel="noopener noreferrer">carbon：生成代码片</a></li><li><a href="https://unbug.github.io/codelf/" target="_blank" rel="noopener noreferrer">codelf 变量命名神器</a></li><li><a href="https://openbase.com/" target="_blank" rel="noopener noreferrer">openbase：查询各种第三方库</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="学习资源">学习资源<a href="#学习资源" class="hash-link" aria-label="Direct link to 学习资源" title="Direct link to 学习资源">​</a></h2><ul><li>《Linux Shell 脚本攻略（第2版）》</li><li>《推荐系统——技术、评估及高效算法》</li><li>《Go 语言编程》</li><li>《Go 语言高级编程》</li><li>《操作系统导论》</li><li>《深入理解计算机系统》</li><li>《MySQL技术内幕》</li><li>《Redis设计与实现》</li><li>⭐️ <a href="https://mp.weixin.qq.com/s/xRnG204OW67mKMnbfFHBoA" target="_blank" rel="noopener noreferrer">操作系统常用知识总结！</a></li><li>⭐️ <a href="https://www.bilibili.com/video/BV1EW411u7th" target="_blank" rel="noopener noreferrer">【计算机科学速成课】<!-- -->[<!-- -->40集全/精校<!-- -->]<!-- --> - Crash Course Computer Science</a></li><li>⭐️ <a href="https://www.bilibili.com/video/BV1iW411d7hd" target="_blank" rel="noopener noreferrer">【精校中英字幕】2015 CMU 15-213 CSAPP 深入理解计算机系统 课程视频</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="面试相关">面试相关<a href="#面试相关" class="hash-link" aria-label="Direct link to 面试相关" title="Direct link to 面试相关">​</a></h2><ul><li><a href="https://github.com/ConardLi/awesome-coding-js" target="_blank" rel="noopener noreferrer">JS 数据结构与算法 - awesome-coding-js</a></li><li><a href="https://github.com/trekhleb/javascript-algorithms" target="_blank" rel="noopener noreferrer">JavaScript Algorithms and Data Structures</a></li><li><a href="https://juejin.cn/post/7023208826472005668" target="_blank" rel="noopener noreferrer">JavaScript算法基础及面试总结（1w1字）</a></li><li>⭐️ <a href="https://juejin.cn/post/6844903929705136141" target="_blank" rel="noopener noreferrer">如何写出一个惊艳面试官的深拷贝?</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904118704668685" target="_blank" rel="noopener noreferrer">面了几个说自己精通 Vue 的同学</a></li><li><a href="https://blog.csdn.net/xgangzai/article/details/120375992" target="_blank" rel="noopener noreferrer">高频react面试题20道（附详解）</a></li><li><a href="https://juejin.cn/post/6844903885488783374" target="_blank" rel="noopener noreferrer">【1 月最新】前端 100 问：能搞懂 80% 的请把简历给我</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="-掘金大佬汇总">📒 掘金大佬汇总<a href="#-掘金大佬汇总" class="hash-link" aria-label="Direct link to 📒 掘金大佬汇总" title="Direct link to 📒 掘金大佬汇总">​</a></h2><ul><li>Vue 源码、响应式机制：<a href="https://juejin.cn/user/2330620350708823/posts" target="_blank" rel="noopener noreferrer">ssh</a> 、<a href="https://juejin.cn/user/2137106333044861/posts" target="_blank" rel="noopener noreferrer">黄轶</a></li><li>React 进阶系列：<a href="https://juejin.cn/user/2418581313687390/posts" target="_blank" rel="noopener noreferrer">我不是外星人</a></li><li>Webpack 相关：<a href="https://juejin.cn/user/1820446985555544/posts" target="_blank" rel="noopener noreferrer">Tecvan</a></li><li>设计模式：<a href="https://juejin.cn/user/3544481219495806/posts" target="_blank" rel="noopener noreferrer">DYBOY</a></li><li>手写源码、设计模式：<a href="https://juejin.cn/user/2295436011645655/posts" target="_blank" rel="noopener noreferrer">蒋鹏飞</a> 、<a href="https://juejin.cn/user/1204720476893064/posts" target="_blank" rel="noopener noreferrer">前端阳光</a></li><li>Webpack5、设计模式：<a href="https://juejin.cn/user/4300945218607197" target="_blank" rel="noopener noreferrer">清汤饺子</a></li><li>前端架构设计：<a href="https://juejin.cn/user/703340610597064/posts" target="_blank" rel="noopener noreferrer">寒草</a></li><li>总结大师：<a href="https://juejin.cn/user/2330620350432110/posts" target="_blank" rel="noopener noreferrer">JowayYoung</a></li><li>源码分析：若川</li><li>工程化知识卡片：<a href="https://juejin.cn/user/1556564164489389/posts" target="_blank" rel="noopener noreferrer">shanyue</a></li><li>CSS 各种特效：<a href="https://juejin.cn/user/2330620350437678/posts" target="_blank" rel="noopener noreferrer">chokcoco</a></li><li>Nodejs 相关：<a href="https://www.zhihu.com/people/liuyong25/posts" target="_blank" rel="noopener noreferrer">天猪</a></li><li>Umi 相关：<a href="https://www.yuque.com/mdh/weekly/rhiudh" target="_blank" rel="noopener noreferrer">MDH 前端周刊</a></li><li>Antd、Umi、Node.js：<a href="https://www.yuque.com/antfe/featured/ys58hy" target="_blank" rel="noopener noreferrer">支付宝体验科技精选</a></li><li>前端、全栈技术专刊：<a href="https://www.zhihu.com/column/ali-nanjing" target="_blank" rel="noopener noreferrer">阿里 CCO 体验技术专刊</a></li><li>Golang 相关：<a href="https://zhuanlan.zhihu.com/p/340814811" target="_blank" rel="noopener noreferrer">腾讯技术工程</a></li><li>前端装逼技巧108式：<a href="https://segmentfault.com/u/king_hcj" target="_blank" rel="noopener noreferrer">独钓寒江雪</a></li><li>前端九条 bug 分享：<a href="https://segmentfault.com/u/lulu_up" target="_blank" rel="noopener noreferrer">lulu_up</a></li><li>Vue3 源码共读：<a href="https://www.bilibili.com/video/BV1bS4y1T7ng" target="_blank" rel="noopener noreferrer">前端杨村长</a></li><li>前端工程化、学习 Golang：洛竹</li><li>Node.js 相关：五月君</li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="-待学习内容">📒 待学习内容<a href="#-待学习内容" class="hash-link" aria-label="Direct link to 📒 待学习内容" title="Direct link to 📒 待学习内容">​</a></h2><ul><li><a href="https://juejin.cn/post/7017360824939315207" target="_blank" rel="noopener noreferrer">babel源码详解-v1.7.8</a></li><li><a href="https://juejin.cn/post/6844904094079926286" target="_blank" rel="noopener noreferrer">最简实现Promise，支持异步链式调用（20行）</a></li><li><a href="https://juejin.cn/post/6844904116913700877" target="_blank" rel="noopener noreferrer">手写一个Promise/A+,完美通过官方872个测试用例</a></li><li><a href="https://juejin.cn/post/6889247428797530126" target="_blank" rel="noopener noreferrer">我在工作中写React，学到了什么？性能优化篇</a></li><li><a href="https://juejin.cn/post/6844903783005175815" target="_blank" rel="noopener noreferrer">如何利用lerna管理模块</a></li><li><a href="https://juejin.cn/post/6969544464113074189" target="_blank" rel="noopener noreferrer">基于 lerna 的多包 JavaScript 项目搭建维护</a></li><li><a href="https://juejin.cn/post/6844903896767283207#heading-5" target="_blank" rel="noopener noreferrer">React性能优化小贴士</a></li><li><a href="https://juejin.cn/post/6844903929726107655" target="_blank" rel="noopener noreferrer">神奇的lambda表达式——函数式编程必学</a></li><li><a href="https://juejin.cn/post/6844903954002739213" target="_blank" rel="noopener noreferrer">npm进阶——如何拥有自己的包和流程自动化</a></li><li><a href="https://juejin.cn/post/6844904162124103693" target="_blank" rel="noopener noreferrer">React Hooks的花样玩法</a><ul><li>useDark，useClickOutside，全局状态管理</li></ul></li><li><a href="https://juejin.cn/post/6844903845227659271" target="_blank" rel="noopener noreferrer">正则表达式不要背</a></li><li><a href="https://juejin.cn/post/6844903825145511950" target="_blank" rel="noopener noreferrer">我们或许不需要 classnames 这个库</a></li><li><a href="https://juejin.cn/post/7014431215302213668" target="_blank" rel="noopener noreferrer">国庆爆肝，用vite+vue3+ts实现一个网页版的typora！</a></li><li><a href="https://juejin.cn/post/6982192362583752741" target="_blank" rel="noopener noreferrer">手摸手教你使用最新版husky(v7.0.1)让代码更优雅规范</a></li><li><a href="https://juejin.cn/post/7015476516196712462" target="_blank" rel="noopener noreferrer">快速入手Electron，拥有一个自己的桌面应用</a></li><li><a href="https://juejin.cn/post/6945236994247098381" target="_blank" rel="noopener noreferrer">在大厂是如何高效组织 npm script 的</a></li><li><a href="https://juejin.cn/post/6940042028243746823" target="_blank" rel="noopener noreferrer">前端开发者周刊第三期：各大厂 webpack5 实践</a></li><li><a href="https://juejin.cn/post/6937176680251424775#heading-7" target="_blank" rel="noopener noreferrer">【译】下一代前端构建工具 ViteJS 中英双语字幕 ｜ 技术点评</a></li><li>⭐️ <a href="https://juejin.cn/post/6924258563862822919" target="_blank" rel="noopener noreferrer">Webpack5 新特性业务落地实战</a></li><li>⭐️ <a href="https://webpack.docschina.org/guides/development/#choosing-a-development-tool" target="_blank" rel="noopener noreferrer">Webpack 官方开发指南</a></li><li><a href="https://mp.weixin.qq.com/s/P3foOrcu4StJDGdX9xavng" target="_blank" rel="noopener noreferrer">构建效率大幅提升，webpack5 在企鹅辅导的升级实践</a></li><li><a href="https://mp.weixin.qq.com/s/ZP2IigNVSIZKGuYxNYOYgw" target="_blank" rel="noopener noreferrer">如何利用 monorepo 策略管理代码？</a></li><li><a href="https://juejin.cn/post/6924854598268108807" target="_blank" rel="noopener noreferrer">All in one：项目级 monorepo 策略最佳实践</a></li><li><a href="https://juejin.cn/post/7007252464726458399" target="_blank" rel="noopener noreferrer">一顿操作，我把 Table 组件性能提升了十倍</a></li><li><a href="https://juejin.cn/post/7005019784429469704" target="_blank" rel="noopener noreferrer">MySQL 从入门到实践，万字详解</a></li><li><a href="https://juejin.cn/post/6844904080972709901" target="_blank" rel="noopener noreferrer">半小时搞会 CentOS 入门必备基础知识</a></li><li><a href="https://juejin.cn/post/6844903919995322382" target="_blank" rel="noopener noreferrer">手摸手带你 Docker 从入门到实践</a></li></ul><ul><li><a href="https://mp.weixin.qq.com/s/DswfPb6J1w2B_MWj1TjyOg" target="_blank" rel="noopener noreferrer">从源码中来，到业务中去，React性能优化终极指南</a></li><li><a href="https://juejin.cn/post/7026119446162997261" target="_blank" rel="noopener noreferrer">在 Vue 中为什么不推荐用 index 做 key</a></li><li><a href="https://juejin.cn/post/7077365102743126052" target="_blank" rel="noopener noreferrer">四个真秀React用法，你值得拥有</a></li><li><a href="https://mp.weixin.qq.com/s/0Nx093GdMcYo5Mr5VRFDjw" target="_blank" rel="noopener noreferrer">【第2506期】JavaScript 包管理器简史（npm/yarn/pnpm）</a></li><li><a href="https://mp.weixin.qq.com/s/grb2OlBYiwU3TOkEtNZReA" target="_blank" rel="noopener noreferrer">pnpm 源码结构及调试指南</a></li><li><a href="https://zhuanlan.zhihu.com/p/455809528" target="_blank" rel="noopener noreferrer">深入浅出 tnpm rapid 模式 - 如何比 pnpm 快 10 秒</a></li><li><a href="https://juejin.cn/post/7152898360498716702" target="_blank" rel="noopener noreferrer">Vue组件库文档站点的搭建思路</a></li><li><a href="https://juejin.cn/post/7151653067593613320#heading-18" target="_blank" rel="noopener noreferrer">一文聊完前端项目中的Babel配置</a></li><li><a href="https://juejin.cn/post/7148746931802472485#heading-8" target="_blank" rel="noopener noreferrer">React-router从0到1</a></li><li><a href="https://juejin.cn/post/7118937685653192735#heading-7" target="_blank" rel="noopener noreferrer">「React 进阶」 React 全部 Hooks 使用大全 （包含 React v18 版本 ）</a></li><li><a href="https://juejin.cn/post/7131222991681093639" target="_blank" rel="noopener noreferrer">768. 最多能完成排序的块 II : 常规贪心构造题</a></li><li><a href="https://juejin.cn/post/7128597557634138148" target="_blank" rel="noopener noreferrer">🦊【前端工程化】为什么大厂都要开发自己的脚手架？🦄️</a></li><li><a href="https://juejin.cn/post/7120893568553582622" target="_blank" rel="noopener noreferrer">快上车！从零开始搭建一个属于自己的组件库！</a></li><li><a href="https://juejin.cn/post/6938201650012094495" target="_blank" rel="noopener noreferrer">写给前端的手动内存管理基础入门（一）返璞归真：从引用类型到裸指针</a></li><li><a href="https://juejin.cn/post/7101457212085633054#heading-1" target="_blank" rel="noopener noreferrer">模块联邦浅析</a></li><li><a href="https://mp.weixin.qq.com/s/KHeo5bdY4cjPfA5I1mjXWw" target="_blank" rel="noopener noreferrer">【第2126期】每个开发者都应该知道的 SOLID 原则</a></li><li><a href="https://www.yuque.com/go-interview/set/xq5788" target="_blank" rel="noopener noreferrer">Go Interview</a></li><li><a href="https://books.halfrost.com/leetcode/ChapterFour/0200~0299/0287.Find-the-Duplicate-Number/" target="_blank" rel="noopener noreferrer">LeetCode Cookbook</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzUxMDI4MDc1NA==&amp;mid=2247483807&amp;idx=1&amp;sn=9c7aede4f675f2de49ddc08ab1a95a71&amp;chksm=f90414c2ce739dd4b8711c0043286fba9744b8d9c86c75c7ac7750d28cd2fed43f749eb5de99&amp;scene=178&amp;cur_album_id=1383459655464337409#rd" target="_blank" rel="noopener noreferrer">Go Gin 系列二：初始化项目及公共库</a></li><li><a href="https://orizens.com/blog/500ms-to-1-7ms-in-react-a-journey-and-a%20checklist/" target="_blank" rel="noopener noreferrer">500ms to 1.7ms In React: A Journey And A Checklist</a></li><li><a href="https://juejin.cn/post/7157902763534319624" target="_blank" rel="noopener noreferrer">漫谈构建工具(十):聊一聊常见的构建工具关于插件机制的那些通用套路</a></li><li><a href="https://juejin.cn/post/7170852747749621791" target="_blank" rel="noopener noreferrer">二十张图片彻底讲明白Webpack设计理念，以看懂为目的</a></li><li><a href="https://juejin.cn/post/7085257325165936648" target="_blank" rel="noopener noreferrer">我是如何带领团队从零到一建立前端规范的？🎉🎉🎉</a></li><li><a href="https://mp.weixin.qq.com/s/H3iygMqDTRWv6h2VcgVeUg" target="_blank" rel="noopener noreferrer">Go类型系统：有何与众不同</a></li><li><a href="https://dev.to/aurelievache/learning-go-by-examples-part-7-create-a-cross-platform-gui-desktop-app-in-go-44j1" target="_blank" rel="noopener noreferrer">Learning Go by examples: part 7 - Create a cross-platform GUI/Desktop app in Go</a></li><li><a href="https://dev.to/aurelievache/understanding-docker-part-37-content-trust-18n3" target="_blank" rel="noopener noreferrer">Understanding Docker: part 37 – Content Trust</a></li><li><a href="https://dev.to/aurelievache/understanding-kubernetes-part-47-kubernetes-126-changelog-2404" target="_blank" rel="noopener noreferrer">Understanding Kubernetes: part 47 – Kubernetes 1.26 Changelog</a></li><li><a href="https://juejin.cn/post/7115634967945674765" target="_blank" rel="noopener noreferrer">Umi Core Maintainers，月榜作者，晋升 P8，来听我碎碎念如何｜2022 年中总结</a></li><li><a href="https://juejin.cn/post/7116141318853623839" target="_blank" rel="noopener noreferrer">为什么 React 的 Diff 算法不采用 Vue 的双端对比算法</a></li><li><a href="https://juejin.cn/post/7121378029682556958" target="_blank" rel="noopener noreferrer">「万字总结」🍒动画 + 大白话讲清楚React渲染原理</a></li></ul><ul><li><a href="https://juejin.cn/post/7094984070999834655" target="_blank" rel="noopener noreferrer">面试官：你会看 Vite 源码吗</a></li><li><a href="https://juejin.cn/post/7147939014870302756" target="_blank" rel="noopener noreferrer">给想转Go或者Go进阶同学的一些建议</a></li><li><a href="https://juejin.cn/post/7117512204059934733" target="_blank" rel="noopener noreferrer">react18新特性及实践总结</a></li><li><a href="https://juejin.cn/post/7118937685653192735" target="_blank" rel="noopener noreferrer">「React 进阶」 React 全部 Hooks 使用大全 （包含 React v18 版本 ）</a></li><li><a href="https://juejin.cn/post/6944863057000529933" target="_blank" rel="noopener noreferrer">「react进阶」一文吃透react-hooks原理</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="-小目标">📒 小目标<a href="#-小目标" class="hash-link" aria-label="Direct link to 📒 小目标" title="Direct link to 📒 小目标">​</a></h2><ul><li>Vue 3.x 源码；</li><li>Vuex 4.x 源码；</li><li>Vue-Router 源码；</li><li>搭建脚手架工具（Webpack5 新特性实践）；</li><li>VS Code extension ；</li><li>cocos 游戏开发；</li><li>手写 redux 源码；</li><li>手写 redux-thunk 源码；</li><li>手写 Promise/A+ ；<ul><li><a href="https://juejin.cn/post/6844904116913700877" target="_blank" rel="noopener noreferrer">手写一个Promise/A+,完美通过官方872个测试用例</a></li><li><a href="https://juejin.cn/post/6945319439772434469" target="_blank" rel="noopener noreferrer">从一道让我失眠的 Promise 面试题开始，深入分析 Promise 实现细节</a></li><li><a href="https://juejin.cn/post/7055202073511460895" target="_blank" rel="noopener noreferrer">V8 Promise源码全面解读，其实你对Promise一无所知</a></li><li><a href="https://juejin.cn/post/6844904094079926286" target="_blank" rel="noopener noreferrer">最简实现Promise，支持异步链式调用（20行）</a></li><li><a href="https://juejin.cn/post/7043758954496655397" target="_blank" rel="noopener noreferrer">手把手一行一行代码教你“手写Promise“，完美通过 Promises/A+ 官方872个测试用例</a></li></ul></li><li>排序算法，桶排序、计数排序，时间复杂度 O(n) ；</li><li>每日算法<ul><li><a href="https://labuladong.gitee.io/algo/" target="_blank" rel="noopener noreferrer">https://labuladong.gitee.io/algo/</a>（国内速度快，体验好，推荐）</li><li><a href="https://labuladong.github.io/algo/" target="_blank" rel="noopener noreferrer">https://labuladong.github.io/algo/</a></li><li><a href="https://mp.weixin.qq.com/s/AzQzw-pC8A-0kS0NJn2eWw" target="_blank" rel="noopener noreferrer">手把手刷二叉树系列完结篇</a></li><li><a href="https://mp.weixin.qq.com/s/hGrTUmM1zusPZZ0nA9aaNw" target="_blank" rel="noopener noreferrer">前缀树算法模板秒杀 5 道算法题</a></li><li><a href="https://mp.weixin.qq.com/s/5GO2ZITncVArdm4KITBd9g" target="_blank" rel="noopener noreferrer">集合划分问题：排列组合中的回溯思想（修订版）</a></li><li><a href="https://mp.weixin.qq.com/s/8ZTMhvHJK_He48PpSt_AmQ" target="_blank" rel="noopener noreferrer">快速排序的正确理解方式及运用</a></li><li><a href="https://mp.weixin.qq.com/s/dg4WI2eJzh6b3OAzHN0q3A" target="_blank" rel="noopener noreferrer">十道腾讯算法真题解析！</a></li><li><a href="https://mp.weixin.qq.com/s/njl6nuid0aalZdH5tuDpqQ" target="_blank" rel="noopener noreferrer">一文秒杀 5 道最近公共祖先问题</a></li><li><a href="https://mp.weixin.qq.com/s/OQAzopRncZe5cb9_of4mCQ" target="_blank" rel="noopener noreferrer">算法时空复杂度分析实用指南</a></li><li><a href="https://mp.weixin.qq.com/s/zhaurXhrAiHsfgGAOfAuMw" target="_blank" rel="noopener noreferrer">动态规划答疑篇（修订版）</a></li><li><a href="https://mp.weixin.qq.com/s/6vwNBr48D36n6E3EawFUqg" target="_blank" rel="noopener noreferrer">论动态规划穷举的两种视角</a></li><li><a href="https://mp.weixin.qq.com/s/iL7tCl6pqw0fTatGSemY-g" target="_blank" rel="noopener noreferrer">高频面试系列：单词拆分问题</a></li><li><a href="https://mp.weixin.qq.com/s/HiEft8sW5QzHcM5mb5_V6g" target="_blank" rel="noopener noreferrer">别用 KMP 了， Rabin-Karp 算法了解下</a></li><li><a href="https://mp.weixin.qq.com/s/XXsWwDml_zHiTEFPZtbe3g" target="_blank" rel="noopener noreferrer">微软面试题解析：丑数系列算法</a></li><li><a href="https://mp.weixin.qq.com/s/vxQDGfshcSVjs9EYmV8q3Q" target="_blank" rel="noopener noreferrer">说透游戏中常用的两种随机算法</a></li><li><a href="https://mp.weixin.qq.com/s/kI0HUTFVr4YEBpLRZWLEDg" target="_blank" rel="noopener noreferrer">我用消息队列做了一款联机小游戏</a></li><li><a href="https://mp.weixin.qq.com/s/mFLCL_Dyz5-CtZMZJmOXKw" target="_blank" rel="noopener noreferrer">Union Find 并查集算法原理及应用</a></li><li><a href="https://mp.weixin.qq.com/s/4vHfaNnn1OpWQJcsssWWdQ" target="_blank" rel="noopener noreferrer">必知必会位运算技巧手册</a></li><li><a href="https://juejin.cn/post/7152708637817831432" target="_blank" rel="noopener noreferrer">【面试高频题】难度 1.5/5，多解法经典面试题</a></li><li><a href="https://mp.weixin.qq.com/s/9Q4JAuSATq3WgN7krdGTWg" target="_blank" rel="noopener noreferrer">DFS/回溯/动态规划算法的融会贯通</a></li><li><a href="https://mp.weixin.qq.com/s/ir1Hk06HcT8W_qz0MtyONA" target="_blank" rel="noopener noreferrer">2021 公众号精选文章目录</a></li></ul></li><li>看下面的文章，手写一个 Webpack<ul><li><a href="https://juejin.cn/post/6930877602840182791" target="_blank" rel="noopener noreferrer">手写一个webpack，看看AST怎么用｜牛气冲天新年征文</a></li><li><a href="https://juejin.cn/post/6987036612035084296" target="_blank" rel="noopener noreferrer">今天，我们来实现一个基础版的webpack</a></li><li><a href="https://juejin.cn/post/6854573217336541192" target="_blank" rel="noopener noreferrer">手写webpack核心原理，再也不怕面试官问我webpack原理</a></li></ul></li><li>Webapck 编译流程<ul><li>⭐️ <a href="https://juejin.cn/book/7115598540721618944" target="_blank" rel="noopener noreferrer">Webpack5 核心原理与应用实践</a></li><li><a href="https://juejin.cn/post/7031546400034947108" target="_blank" rel="noopener noreferrer">Webapck5核心打包原理全流程解析</a></li><li><a href="https://juejin.cn/post/7026658230365323301" target="_blank" rel="noopener noreferrer">跟着源码了解Webpack编译流程</a></li><li><a href="https://juejin.cn/post/6859538537830858759" target="_blank" rel="noopener noreferrer">面试官：webpack原理都不会？</a></li><li><a href="https://juejin.cn/post/7077484559893266439" target="_blank" rel="noopener noreferrer">100行代码实现一个组件引用次数统计插件</a></li><li><a href="https://github.com/ronami/minipack" target="_blank" rel="noopener noreferrer">https://github.com/ronami/minipack</a></li></ul></li><li>手把手实现一个 babel 插件<ul><li>Babel 插件常用 API、配合 TS 开发、如何测试插件等等<ul><li>⭐️ <a href="https://juejin.cn/post/7143921535445631012" target="_blank" rel="noopener noreferrer">Babel 插件：30分钟从入门到实战</a></li></ul></li><li>这篇做的 demo 是一个简单的 babel-plugin-import<ul><li><a href="https://juejin.cn/post/6844903746804137991" target="_blank" rel="noopener noreferrer">深入Babel，这一篇就够了</a></li></ul></li><li>这篇做的 demo 类似 Java 中的 lambok<ul><li><a href="https://juejin.cn/post/7012424646247055390" target="_blank" rel="noopener noreferrer">保姆级教学！这次一定学会babel插件开发！</a></li></ul></li><li><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md" target="_blank" rel="noopener noreferrer">babel-handbook - 各种 ast 操作指南</a></li><li><a href="https://mp.weixin.qq.com/s/R6Xr8SoJicZB8-P4H2SSPA" target="_blank" rel="noopener noreferrer">你还在手动部署埋点吗？从0到1开发Babel埋点自动植入插件</a></li><li><a href="https://juejin.cn/post/7061808830274863118" target="_blank" rel="noopener noreferrer">操作 JavaScript 的 AST</a></li><li><a href="https://juejin.cn/post/6953963506693570573" target="_blank" rel="noopener noreferrer">前端也要懂编译：AST 从入门到上手指南</a></li><li><a href="https://juejin.cn/post/7026671646555504676" target="_blank" rel="noopener noreferrer">让 AST 操作像呼吸一样自然</a></li></ul></li><li>diff 算法相关<ul><li><a href="https://github.com/snabbdom/snabbdom" target="_blank" rel="noopener noreferrer">https://github.com/snabbdom/snabbdom</a></li><li><a href="https://github.com/snabbdom/snabbdom/blob/master/src/init.ts" target="_blank" rel="noopener noreferrer">https://github.com/snabbdom/snabbdom/blob/master/src/init.ts</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/8M-pJdKjF6bx5ijtSFKIcw" target="_blank" rel="noopener noreferrer">图解Diff算法——Vue篇</a></li><li>⭐️ <a href="https://juejin.cn/post/7067693810918096903" target="_blank" rel="noopener noreferrer">浅析 Snabbdom 中 vnode 和 diff 算法</a></li><li><a href="https://juejin.cn/post/7161063643105198093" target="_blank" rel="noopener noreferrer">一文吃透 React 和 Vue 的多节点 diff 原理</a></li><li><a href="https://juejin.cn/post/6997965021401579556" target="_blank" rel="noopener noreferrer">diff 算法深入一下？</a></li><li><a href="https://juejin.cn/post/7000266544181674014" target="_blank" rel="noopener noreferrer">DIff算法看不懂就一起来砍我(带图)</a></li><li><a href="https://juejin.cn/post/6966215704634720287" target="_blank" rel="noopener noreferrer">关于Virtual DOM理解和Snabbdom源码浅析</a></li><li><a href="https://github.com/shfshanyue/mini-code/blob/master/code/vdom/index.js" target="_blank" rel="noopener noreferrer">shanyue mini-code vdom</a></li><li><a href="https://juejin.cn/post/6976232466059100197" target="_blank" rel="noopener noreferrer">Virtual DOM到底有什么迷人之处？如何搭建一款迷你版Virtual DOM库？</a></li><li><a href="https://juejin.cn/post/6919376064833667080" target="_blank" rel="noopener noreferrer">React、Vue2、Vue3的三种Diff算法</a></li><li><a href="https://www.zhihu.com/question/31809713/answer/53544875" target="_blank" rel="noopener noreferrer">网上都说操作真实 DOM 慢，但测试结果却比 React 更快，为什么？- 知乎</a></li></ul></li><li>webpack 热模块替换看下源码<ul><li><a href="https://juejin.cn/post/7049608872553611301" target="_blank" rel="noopener noreferrer">webpack模块热更新原理</a></li><li><a href="https://juejin.cn/post/7021729340945596424" target="_blank" rel="noopener noreferrer">Webpack 原理系列十：HMR 原理全解析</a></li><li><a href="https://juejin.cn/post/7031546400034947108" target="_blank" rel="noopener noreferrer">Webapck5核心打包原理全流程解析</a></li></ul></li><li>Docker 相关总结一下<ul><li><a href="https://juejin.cn/post/7064906701941506061" target="_blank" rel="noopener noreferrer">GitLab CI 从入门到实践</a></li><li><a href="https://mp.weixin.qq.com/s/5LLX__x-yamgR83e0NKAtA" target="_blank" rel="noopener noreferrer">写给前端的 Docker 上手指南</a></li><li><a href="https://mp.weixin.qq.com/s/0Il5o9CRgZI3LbuR0LjAtQ" target="_blank" rel="noopener noreferrer">写给前端的 K8S 上手指南</a></li><li><a href="https://juejin.cn/post/7069609959985512484" target="_blank" rel="noopener noreferrer">前端抢饭碗系列之初识Docker容器化部署</a></li><li><a href="https://juejin.cn/post/7083009375387779085" target="_blank" rel="noopener noreferrer">前端抢饭碗系列之Docker进阶部署</a></li><li><a href="https://juejin.cn/post/7113712658850775048" target="_blank" rel="noopener noreferrer">前端抢饭碗系列之Docker容器编排</a></li><li><a href="https://mp.weixin.qq.com/s/f581rfvKWE3KGgWfZDJ2cA" target="_blank" rel="noopener noreferrer">云计算时代，你还不会 Docker ？ 一万字总结（建议收藏）</a></li></ul></li><li>前端框架源码<ul><li>⭐️ ⭐️ <a href="https://juejin.cn/book/6945998773818490884" target="_blank" rel="noopener noreferrer">React 进阶实践指南</a></li><li>⭐️ <a href="https://juejin.cn/post/7117512204059934733" target="_blank" rel="noopener noreferrer">react18新特性及实践总结</a></li><li>⭐️ <a href="https://juejin.cn/post/7122617883837857806" target="_blank" rel="noopener noreferrer">「React进阶」React中没有keepalive？没事！手把手教你从零到一设计并实现一个！</a></li><li>⭐️ <a href="https://juejin.cn/post/7118937685653192735" target="_blank" rel="noopener noreferrer">「React 进阶」 React 全部 Hooks 使用大全 （包含 React v18 版本 ）</a></li><li>⭐️ <a href="https://juejin.cn/post/7069555976717729805" target="_blank" rel="noopener noreferrer">「React进阶」react-router v6 通关指南</a></li><li>⭐️ <a href="https://juejin.cn/post/6944863057000529933" target="_blank" rel="noopener noreferrer">「react进阶」一文吃透react-hooks原理</a></li><li>⭐️ <a href="https://juejin.cn/post/7085542534943883301" target="_blank" rel="noopener noreferrer">2022 年的 React 生态</a></li><li>⭐️ <a href="https://juejin.cn/post/7010539227284766751" target="_blank" rel="noopener noreferrer">React 运行时优化方案的演进</a></li><li>🌛 <a href="https://overreacted.io/before-you-memo/" target="_blank" rel="noopener noreferrer">Before You memo()</a></li><li>🌛 <a href="https://7kms.github.io/react-illustration-series/main/fibertree-update/#bailout%E9%80%BB%E8%BE%91-bailout" target="_blank" rel="noopener noreferrer">图解 React - bailout逻辑</a></li><li>🌛 <a href="https://www.zhihu.com/question/434791954/answer/2453356416" target="_blank" rel="noopener noreferrer">React 的 Concurrent Mode 是否有过度设计的成分</a></li><li>🌛 <a href="https://www.bilibili.com/video/BV1Yr4y1J7oc" target="_blank" rel="noopener noreferrer">「上集」React性能优化，你需要知道的一切</a></li><li>🌛 <a href="https://www.bilibili.com/video/BV1j44y1g74m" target="_blank" rel="noopener noreferrer">「下集」React性能优化，你需要知道的一切</a></li><li>🌛 <a href="https://pomb.us/build-your-own-react/" target="_blank" rel="noopener noreferrer">Build your own React</a></li><li><a href="https://juejin.cn/post/6844903913410314247" target="_blank" rel="noopener noreferrer">Vue 项目性能优化 — 实践指南（网上最全 / 详细）</a></li><li><a href="https://juejin.cn/post/7121378029682556958" target="_blank" rel="noopener noreferrer">「万字总结」🍒动画 + 大白话讲清楚React渲染原理</a></li><li><a href="https://juejin.cn/post/7154175507280429070" target="_blank" rel="noopener noreferrer">React 渲染的未来</a></li><li><a href="https://mp.weixin.qq.com/s/METf8Ng6Qnsu1uWGTzan8g" target="_blank" rel="noopener noreferrer">React 中常见的 8 个错误，如何避免</a></li><li><a href="https://juejin.cn/post/7104460511869141006" target="_blank" rel="noopener noreferrer">20个GitHub仓库助你成为React大师</a></li><li><a href="https://juejin.cn/post/7094424941541457933" target="_blank" rel="noopener noreferrer">React官方团队出手，补齐原生Hook短板</a></li><li><a href="https://juejin.cn/post/7075701341997236261" target="_blank" rel="noopener noreferrer">React Hooks 的原理，有的简单有的不简单</a></li><li><a href="https://juejin.cn/post/6844904193044512782" target="_blank" rel="noopener noreferrer">从react hooks“闭包陷阱”切入，浅谈react hooks</a></li><li><a href="https://mp.weixin.qq.com/s/7LXeQomcHK4zcuRqB32JDg" target="_blank" rel="noopener noreferrer">React+Ts，这样学起来确实简单！！！</a></li><li><a href="https://mp.weixin.qq.com/s/byD6xm3O6MzX8kksjBmqpA" target="_blank" rel="noopener noreferrer">React 18 超全升级指南</a></li><li><a href="https://juejin.cn/post/7077545184807878692" target="_blank" rel="noopener noreferrer">阿里三面：灵魂拷问——有react fiber，为什么不需要vue fiber呢</a></li><li><a href="https://juejin.cn/post/6982004709145968677" target="_blank" rel="noopener noreferrer">[<!-- -->建议收藏<!-- -->]<!-- --> 你想知道的Vue3核心源码这里都有</a></li><li><a href="https://juejin.cn/post/6978654109893132318" target="_blank" rel="noopener noreferrer">手写系列-实现一个铂金段位的 React</a></li><li><a href="https://juejin.cn/post/6844904197008130062" target="_blank" rel="noopener noreferrer">手写React的Fiber架构，深入理解其原理</a></li><li><a href="https://juejin.cn/post/6859528127010471949" target="_blank" rel="noopener noreferrer">React Fiber 源码解析</a></li><li><a href="https://juejin.cn/post/6943896410987659277" target="_blank" rel="noopener noreferrer">走进React Fiber的世界</a></li><li><a href="https://juejin.cn/post/6911681589558640654" target="_blank" rel="noopener noreferrer">前端工程师的自我修养：React Fiber 是如何实现更新过程可控的</a></li><li><a href="https://juejin.cn/post/6984949525928476703" target="_blank" rel="noopener noreferrer">React Fiber很难？六个问题助你理解 React Fiber</a></li></ul></li><li>Vite 源码<ul><li>⭐️ <a href="https://juejin.cn/book/7050063811973218341" target="_blank" rel="noopener noreferrer">深入浅出 Vite</a></li><li><a href="https://mp.weixin.qq.com/s/UD0-7rWtOAxMuDpOR77gug" target="_blank" rel="noopener noreferrer">详解 Vite 依赖预构建流程</a></li><li><a href="https://mp.weixin.qq.com/s/bf11t1rH6NllKDA0IKR9Lw" target="_blank" rel="noopener noreferrer">授人予渔，VSCode 如何调试 Vite 代码</a></li><li><a href="https://mp.weixin.qq.com/s/3dfbu7lZJLd6cJSp9XLcVQ" target="_blank" rel="noopener noreferrer">敲下 vite 命令后，server 做了哪些事</a></li></ul></li><li>包管理方案、PNPM</li><li>Arch Linux<ul><li><a href="https://linuxhandbook.com/grep-command-examples/" target="_blank" rel="noopener noreferrer">10 Practical Grep Command Examples for Developers</a></li><li><a href="https://www.freecodecamp.org/news/the-linux-commands-handbook/#the-linux-grep-command" target="_blank" rel="noopener noreferrer">The Linux Command Handbook – Learn Linux Commands for Beginners</a></li></ul></li><li>如何搭建个人博客<ul><li>使用 Next.js，开箱即用文件系统路由、静态站点生成（SSG）</li><li><a href="https://nextjs.org/learn/basics/create-nextjs-app" target="_blank" rel="noopener noreferrer">https://nextjs.org/learn/basics/create-nextjs-app</a></li></ul></li><li>工程化方案总结下<ul><li><a href="https://zhuanlan.zhihu.com/p/403970666" target="_blank" rel="noopener noreferrer">2021 年 TypeScript + React 工程化指南</a></li><li><a href="https://juejin.cn/post/7017710911443959839" target="_blank" rel="noopener noreferrer">2021 年当我们聊前端部署时，我们在聊什么</a></li><li><a href="https://juejin.cn/post/7023242274876162084" target="_blank" rel="noopener noreferrer">🔥【万字】透过分析 webpack 面试题，构建 webpack5.x 知识体系</a></li><li><a href="https://github.com/vercel/next.js/blob/canary/packages/next/build/webpack-config.ts" target="_blank" rel="noopener noreferrer">Next.js webpack 配置</a></li></ul></li><li>静态页面部署方案<ul><li>上传阿里云 OSS
<a href="https://github.com/Menci/upload-to-oss" target="_blank" rel="noopener noreferrer">https://github.com/Menci/upload-to-oss</a></li></ul></li><li><a href="https://juejin.cn/post/6992172458748936222" target="_blank" rel="noopener noreferrer">面向未来的前端开发模式 - 写于2021年</a></li><li><a href="https://juejin.cn/post/6990538424545443854" target="_blank" rel="noopener noreferrer">从零搭建Webpack5-react脚手架(附源码)</a></li><li><a href="https://github.com/JinJieTan/Peter-" target="_blank" rel="noopener noreferrer">手写各种源码</a></li></ul><h2 class="anchor anchorWithStickyNavbar_B0by" id="-推荐阅读">📒 推荐阅读<a href="#-推荐阅读" class="hash-link" aria-label="Direct link to 📒 推荐阅读" title="Direct link to 📒 推荐阅读">​</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/403970666" target="_blank" rel="noopener noreferrer">2021 年 TypeScript + React 工程化指南</a></li><li><a href="https://juejin.cn/post/6996816316875161637#heading-15" target="_blank" rel="noopener noreferrer">学习 Webpack5 之路（优化篇）- 近 7k 字</a></li><li><a href="https://github.com/webpack/webpack-dev-middleware" target="_blank" rel="noopener noreferrer">https://github.com/webpack/webpack-dev-middleware</a></li><li><a href="https://segmentfault.com/a/1190000011761306" target="_blank" rel="noopener noreferrer">webpack-dev-middleware 插件的使用</a></li><li><a href="https://juejin.cn/post/6844904099985489927" target="_blank" rel="noopener noreferrer">webpack-dev-middleware 源码解读</a></li><li><a href="https://juejin.cn/post/6949040393165996040#heading-2" target="_blank" rel="noopener noreferrer">[<!-- -->万字总结<!-- -->]<!-- --> 一文吃透 Webpack 核心原理</a></li><li><a href="https://juejin.cn/post/7020678344219820068" target="_blank" rel="noopener noreferrer">跟村长老师做【Vue DevUI 开源指南】直播一个月的感受</a></li><li><a href="https://juejin.cn/post/7021167384484380709" target="_blank" rel="noopener noreferrer">工程化知识卡片 008: webpack HMR 实现的核心原理</a></li><li><a href="https://juejin.cn/post/7030207667457130527" target="_blank" rel="noopener noreferrer">基于 Lerna 实现 Monorepo 项目管理</a></li><li><a href="https://juejin.cn/post/6959115798841393160" target="_blank" rel="noopener noreferrer">手摸手教你用Vue3+Typescript+Rollup+Tailwinds打造插拔式的业务组件库</a></li><li><a href="https://juejin.cn/post/6869551115420041229" target="_blank" rel="noopener noreferrer">一文带你快速上手Rollup</a></li><li>🌛 <a href="https://juejin.cn/post/7029525775321661470" target="_blank" rel="noopener noreferrer">手摸手学会搭建一个 TS+Rollup 的初始开发环境</a></li><li><a href="https://juejin.cn/post/7029292539479867429" target="_blank" rel="noopener noreferrer">【我要做开源】Vue DevUI开源指南08：如何实现组件的按需打包📦</a></li><li><a href="https://juejin.cn/post/7029262501833359368" target="_blank" rel="noopener noreferrer">【我要做开源】Vue DevUI开源指南08：Monorepo改造</a></li><li><a href="https://juejin.cn/post/6974377246140301342" target="_blank" rel="noopener noreferrer">coding优雅指南：函数式编程</a></li><li><a href="https://juejin.cn/post/6892886272377880583" target="_blank" rel="noopener noreferrer">这些高阶的函数技术，你掌握了么</a></li><li>🌛 <a href="https://juejin.cn/post/7028222480326066213" target="_blank" rel="noopener noreferrer">使用Docker Compose、Nginx、SSH和Github Actions实现前端自动化部署测试机</a></li><li><a href="https://juejin.cn/post/6844904093434019853" target="_blank" rel="noopener noreferrer">如何推动前端团队的基础设施建设</a></li><li>⭐️ <a href="https://juejin.cn/post/6966491047257964575" target="_blank" rel="noopener noreferrer">Element UI源码中学到的技巧</a></li><li><a href="https://juejin.cn/post/7026658230365323301" target="_blank" rel="noopener noreferrer">跟着源码了解Webpack编译流程</a></li><li><a href="https://juejin.cn/post/6859538537830858759" target="_blank" rel="noopener noreferrer">面试官：webpack原理都不会？</a></li><li><a href="https://juejin.cn/post/7026671646555504676" target="_blank" rel="noopener noreferrer">让 AST 操作像呼吸一样自然</a></li><li><a href="https://juejin.cn/post/6920044884594425864" target="_blank" rel="noopener noreferrer">从零撸一个CLI命令行脚手架工具</a></li><li><a href="https://juejin.cn/post/6844904197863964685" target="_blank" rel="noopener noreferrer">从 Element UI 源码的构建流程来看前端 UI 库设计</a></li><li><a href="https://juejin.cn/post/6943430853972852750" target="_blank" rel="noopener noreferrer">那些年错过的React组件单元测试（上）</a></li><li><a href="https://juejin.cn/post/6946008649026240519" target="_blank" rel="noopener noreferrer">那些年错过的React组件单元测试（下）</a></li><li><a href="https://juejin.cn/post/7026274816734789663" target="_blank" rel="noopener noreferrer">git hooks 的库 husky 源码这么简单，你也可以实现一个！</a></li><li><a href="https://juejin.cn/post/7026210002042011655" target="_blank" rel="noopener noreferrer">「React18新特性」深度解读之useMutableSource</a></li><li><a href="https://juejin.cn/post/6953452438300917790" target="_blank" rel="noopener noreferrer">【V8源码补充篇】从一道让我失眠的 Promise 面试题开始，深入分析 Promise 实现细节</a></li><li><a href="https://juejin.cn/post/6966422095274180639" target="_blank" rel="noopener noreferrer">[<!-- -->探索<!-- -->]<!-- -->Webpack DevServer和HMR原理</a></li><li><a href="https://juejin.cn/post/7023242274876162084" target="_blank" rel="noopener noreferrer">【万字】透过分析 webpack 面试题，构建 webpack5.x 知识体系</a></li><li><a href="https://juejin.cn/post/6844903881390964744" target="_blank" rel="noopener noreferrer">从头开始，彻底理解服务端渲染原理(8千字汇总长文)</a></li><li><a href="https://juejin.cn/post/6982157120594509837" target="_blank" rel="noopener noreferrer">剖析 Webpack SplitChunksPlugin 源码: 学完你也能写一个</a></li><li><a href="https://juejin.cn/post/7025164660751990798" target="_blank" rel="noopener noreferrer">一点关于服务端渲染的分享</a></li><li><a href="https://juejin.cn/post/6966119324478079007" target="_blank" rel="noopener noreferrer">从 0 构建自己的脚手架/CLI知识体系（万字） 🛠</a></li><li><a href="https://juejin.cn/post/6984939221681176607" target="_blank" rel="noopener noreferrer">手写一个虚拟DOM库，彻底让你理解diff算法</a></li><li><a href="https://juejin.cn/post/6854573215969181703" target="_blank" rel="noopener noreferrer">10个简单的技巧让你的 vue.js 代码更优雅🍊</a></li><li><a href="https://juejin.cn/post/7026119446162997261" target="_blank" rel="noopener noreferrer">在 Vue 中为什么不推荐用 index 做 key</a></li><li><a href="https://www.zhihu.com/question/384048633/answer/1134746899" target="_blank" rel="noopener noreferrer">做了两年前端开发，平时就是拿 Vue 写写页面和组件，简历的项目经历应该怎么写得好看？</a></li><li><a href="https://juejin.cn/post/7017710911443959839" target="_blank" rel="noopener noreferrer">2021 年当我们聊前端部署时，我们在聊什么</a></li><li><a href="https://juejin.cn/post/7016534471734198279" target="_blank" rel="noopener noreferrer">分享一年以来的Electron开发经验</a></li><li><a href="https://juejin.cn/post/6844903938894872589" target="_blank" rel="noopener noreferrer">「前端进阶」高性能渲染十万条数据(时间分片)</a></li><li>⭐️ <a href="https://juejin.cn/post/6978654109893132318" target="_blank" rel="noopener noreferrer">手写系列-实现一个铂金段位的 React</a></li><li><a href="https://juejin.cn/post/6973155726302642206" target="_blank" rel="noopener noreferrer">手写系列-这一次，彻底搞懂 Promise</a></li><li><a href="https://juejin.cn/post/7005375860509245471" target="_blank" rel="noopener noreferrer">50行代码串行Promise，koa洋葱模型原来是这么实现？</a></li><li><a href="https://juejin.cn/post/6882290865763680264" target="_blank" rel="noopener noreferrer">玩转 node 子进程 — child_process</a></li><li><a href="https://juejin.cn/post/6844903895467032589" target="_blank" rel="noopener noreferrer">深入剖析：Vue核心之虚拟DOM</a></li><li>⭐️ <a href="https://juejin.cn/post/6844904055618158600" target="_blank" rel="noopener noreferrer">从零开始配置 react + typescript（一）：dotfiles</a></li><li><a href="https://juejin.cn/post/6937125495439900685" target="_blank" rel="noopener noreferrer">Webpack 案例 —— vue-loader 原理分析</a></li><li><a href="https://juejin.cn/post/7025213391618703367" target="_blank" rel="noopener noreferrer">TypeScript 实现斐波那契数列</a></li><li><a href="https://juejin.cn/post/6965320374451961886" target="_blank" rel="noopener noreferrer">用ts类型系统实现斐波那契数列</a></li><li><a href="https://juejin.cn/post/7059400669916037133" target="_blank" rel="noopener noreferrer">初步尝试 tauri，并且与 electron.js 对比</a></li><li><a href="https://juejin.cn/post/7057178581897740319" target="_blank" rel="noopener noreferrer">和大多数的前端开发者相比，我并没有选择node.js做cli而投靠了golang</a></li><li><a href="https://github.com/acdlite/react-fiber-architecture" target="_blank" rel="noopener noreferrer">React Fiber Architecture</a></li><li><a href="https://www.cnblogs.com/ginvip/p/6367939.html" target="_blank" rel="noopener noreferrer">linux命令总结之lsof命令</a></li><li><a href="https://www.smashingmagazine.com/2019/09/machine-learning-front-end-developers-tensorflowjs/" target="_blank" rel="noopener noreferrer">Machine Learning For Front-End Developers With Tensorflow.js</a></li><li><a href="https://mp.weixin.qq.com/s/hP5YMgJTgaVIlaK-XJ3Bcw" target="_blank" rel="noopener noreferrer">javascript的23种设计模式</a></li><li><a href="https://zhuanlan.zhihu.com/p/476712416" target="_blank" rel="noopener noreferrer">我的第一次webpack优化，首屏渲染从9s到1s</a></li><li><a href="https://juejin.cn/post/7071518211392405541" target="_blank" rel="noopener noreferrer">在项目中用ts封装axios，一次封装整个团队受益😁</a></li><li><a href="https://mp.weixin.qq.com/s/usMxG3cAowUtO3Lvn9VjsQ" target="_blank" rel="noopener noreferrer">晋升，如何减少 50%+ 的答辩材料准备时间、调整心态（个人经验总结）</a></li><li><a href="https://mp.weixin.qq.com/s/mz5S1iiRWkk-KKJg5lOOJQ" target="_blank" rel="noopener noreferrer">基于 TypeScript 理解程序设计的 SOLID 原则</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/dg4WI2eJzh6b3OAzHN0q3A" target="_blank" rel="noopener noreferrer">十道腾讯算法真题解析！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/aMYJODhtWsBt9CTJxySQEQ" target="_blank" rel="noopener noreferrer">腾讯云后端15连问！</a></li><li>⭐️ <a href="https://mp.weixin.qq.com/s/0kUf1ujPUuieyOSMsBIzaw" target="_blank" rel="noopener noreferrer">字节国际支付十连问</a></li><li><a href="https://juejin.cn/post/7080032725477883917" target="_blank" rel="noopener noreferrer">如何成为一个优秀的复制粘贴工程师</a></li><li><a href="https://blog.csdn.net/zhydream77/article/details/81909706" target="_blank" rel="noopener noreferrer">docker文件夹映射的两种方式---主机卷映射和共享文件夹映射</a></li><li><a href="https://studygolang.com/articles/25997?fr=sidebar" target="_blank" rel="noopener noreferrer">为什么golang没有min/max以及三元操作符</a></li><li><a href="https://juejin.cn/post/7084882650233569317" target="_blank" rel="noopener noreferrer">编译 ts 代码用 tsc 还是 babel</a></li><li><a href="https://juejin.cn/post/7031122959637217310" target="_blank" rel="noopener noreferrer">如果没有 package-lock.json，那将如何</a></li><li><a href="https://juejin.cn/post/7030084290989948935" target="_blank" rel="noopener noreferrer">工程化知识卡片 023：node_modules 版本重复的困境</a></li><li><a href="https://juejin.cn/post/7083468345579667493" target="_blank" rel="noopener noreferrer">【混淆系列】三问：npx、npm、cnpm、pnpm区别你搞清楚了吗？</a></li><li><a href="https://juejin.cn/post/7082738107237433375" target="_blank" rel="noopener noreferrer">Webpack组件库打包超详细指南</a></li><li><a href="https://mp.weixin.qq.com/s/XWZsKQECcsHAlE9cyqi9Eg" target="_blank" rel="noopener noreferrer">写好 JavaScript 异步代码的几个推荐做法</a></li><li><a href="https://mp.weixin.qq.com/s/WisEGFz2yn_ZeekViofMnA" target="_blank" rel="noopener noreferrer">Node.js 进阶 - 多文件 Stream 合并，串行和并发两种模式实现</a></li><li><a href="https://juejin.cn/post/7046898330000949285" target="_blank" rel="noopener noreferrer">服务端渲染SSR及实现原理</a></li><li><a href="https://mp.weixin.qq.com/s/lyff2svfHh4rdsWRL4H5uA" target="_blank" rel="noopener noreferrer">手摸手服务端渲染-react</a></li><li><a href="https://juejin.cn/post/7058868160706904078" target="_blank" rel="noopener noreferrer">如何在项目中用好 TypeScript</a></li><li><a href="https://mp.weixin.qq.com/s/kGMsNmIXlT25NfRrifjnTQ" target="_blank" rel="noopener noreferrer">选择第三方 NPM 包时的 5 条最佳实践</a></li><li><a href="https://juejin.cn/post/7071066976830881823" target="_blank" rel="noopener noreferrer">用 Redux 做状态管理，真的很简单🦆</a></li><li><a href="https://mp.weixin.qq.com/s/t3dYc3Md1dpiv1vaFa5plA" target="_blank" rel="noopener noreferrer">React 18 全览</a></li><li><a href="https://mp.weixin.qq.com/s/fgT7Kxs_0feRx4TkBe6G5Q" target="_blank" rel="noopener noreferrer">React 18 对 Hooks 的影响</a></li><li><a href="https://mp.weixin.qq.com/s/GatHpP3BRLV_I48MfpzR4A" target="_blank" rel="noopener noreferrer">React 的心智模型</a></li><li><a href="https://mp.weixin.qq.com/s/qyr6MnPtvnELDSbPJ2VtIw" target="_blank" rel="noopener noreferrer">你不知道的 React v18 的任务调度机制</a></li><li><a href="https://segmentfault.com/a/1190000041683300" target="_blank" rel="noopener noreferrer">一些关于react的keep-alive功能相关知识在这里(上)</a></li><li><a href="https://segmentfault.com/a/1190000041683421" target="_blank" rel="noopener noreferrer">一些关于react的keep-alive功能相关知识在这里(下)</a></li><li><a href="https://zhuanlan.zhihu.com/p/502951532" target="_blank" rel="noopener noreferrer">Node.js 18 新特性解读</a></li><li><a href="https://zhuanlan.zhihu.com/p/415361629" target="_blank" rel="noopener noreferrer">那些你应该说再见的 npm 祖传老库</a></li><li><a href="https://mp.weixin.qq.com/s/tWbeOTx0JpiZOD0YaC1P2A" target="_blank" rel="noopener noreferrer">前端算法系统练习: 栈和队列篇</a></li><li><a href="https://mp.weixin.qq.com/s/MYLi4mSgoi5KXj4-_OgT3A" target="_blank" rel="noopener noreferrer">【第2602期】设置 NPM Registry 的 4 种姿势</a></li><li><a href="https://juejin.cn/post/6844903919995322382" target="_blank" rel="noopener noreferrer">「手摸手设计模式系列」 享元模式与资源池</a></li><li><a href="https://juejin.cn/post/6889247428797530126" target="_blank" rel="noopener noreferrer">我在工作中写React，学到了什么？性能优化篇</a></li><li><a href="https://juejin.cn/post/6844904165500518414" target="_blank" rel="noopener noreferrer">React Hooks 最佳实践</a></li><li><a href="https://mp.weixin.qq.com/s/3xhNcfI4pTm0n-naSsOBwg" target="_blank" rel="noopener noreferrer">手写 CSS-modules 来深入理解它的原理</a></li><li><a href="https://www.bilibili.com/video/BV1j44y1g74m" target="_blank" rel="noopener noreferrer">下集」React性能优化，你需要知道的一切</a></li><li><a href="https://mp.weixin.qq.com/s/-B5M7pjIWZzFNvq-hyr1Mw" target="_blank" rel="noopener noreferrer">Umi 4 特性合集，比 Vite 还要快？</a></li><li><a href="https://juejin.cn/post/7094296981001994277" target="_blank" rel="noopener noreferrer">你可能并没有理解的 babel 配置的原理</a></li><li><a href="https://juejin.cn/post/7052307032971411463" target="_blank" rel="noopener noreferrer">从零开始发布自己的NPM包</a></li><li><a href="https://juejin.cn/post/7069609959985512484" target="_blank" rel="noopener noreferrer">前端抢饭碗系列之初识Docker容器化部署</a></li><li><a href="https://juejin.cn/post/7083009375387779085" target="_blank" rel="noopener noreferrer">前端抢饭碗系列之Docker进阶部署</a></li><li><a href="https://mp.weixin.qq.com/s/zt7x2KjMT_cWvLVVa2-Hww" target="_blank" rel="noopener noreferrer">【工程化】探索webpack5中的Module Federation</a></li><li><a href="https://juejin.cn/post/7095354780079357966" target="_blank" rel="noopener noreferrer">NodeJs进阶开发、性能优化指南</a></li><li><a href="https://mp.weixin.qq.com/s/P3mzw_vmOR6K_Mj-963o3g" target="_blank" rel="noopener noreferrer">Tree shaking问题排查指南来啦</a></li><li><a href="https://mp.weixin.qq.com/s/FPupefVg4zphOfIERZOvHQ" target="_blank" rel="noopener noreferrer">如何设计更优雅的 React 组件</a></li><li><a href="https://mp.weixin.qq.com/s/01sTK6w4BFUzoRc2NKCs1w" target="_blank" rel="noopener noreferrer">React 并发渲染的前世今生</a></li><li><a href="https://www.freecodecamp.org/news/how-to-build-your-own-blog-with-next-js-and-mdx/" target="_blank" rel="noopener noreferrer">使用 Next.js 和 MDX 构建你自己的博客</a></li><li><a href="https://mp.weixin.qq.com/s/toQUgqJHeUbFZMtxfzFCxw" target="_blank" rel="noopener noreferrer">TCP 重传、滑动窗口、流量控制、拥塞控好难？看完图解就不愁了</a></li><li><a href="https://mp.weixin.qq.com/s/9kHoRk6QIYOFUR_PCmHY6g" target="_blank" rel="noopener noreferrer">TCP 就没什么缺陷吗？</a></li><li><a href="https://mp.weixin.qq.com/s/ovwjufnPmCoYNLMkv5xv2g" target="_blank" rel="noopener noreferrer">【第2618期】手把手教你定制一套适合团队的微前端体系</a></li><li><a href="https://juejin.cn/post/7099402445989609479" target="_blank" rel="noopener noreferrer">前端必学的动画实现思路，高逼格的效果老板看了都会大声称赞</a></li><li><a href="https://mp.weixin.qq.com/s/LSlgpazCwtceQWjHsMPCAg" target="_blank" rel="noopener noreferrer">【第2617期】React 组件库 CSS 样式方案分析</a></li><li><a href="https://mp.weixin.qq.com/s/X4ni2i9bvolHGfCdf3SzIA" target="_blank" rel="noopener noreferrer">【第2616期】解释JavaScript的内存管理</a></li><li><a href="https://mp.weixin.qq.com/s/OrekHmMrn8UlisTrvt3MNA" target="_blank" rel="noopener noreferrer">从 Turborepo 看 Monorepo 工具的任务编排能力</a></li><li><a href="https://mp.weixin.qq.com/s/GryL1QVARtMB8-WIzd7xQQ" target="_blank" rel="noopener noreferrer">解决前端常见问题：竞态条件</a></li><li><a href="https://mp.weixin.qq.com/s/3v54arsDRRw6agyr3MtPRg" target="_blank" rel="noopener noreferrer">Google 最新的性能优化方案，LCP 提升30%！</a></li><li><a href="https://mp.weixin.qq.com/s/-6bQKIjH6WPcfuiCFtsjng" target="_blank" rel="noopener noreferrer">React useEvent：砖家说的没问题</a></li><li><a href="https://juejin.cn/post/7102328973820067877" target="_blank" rel="noopener noreferrer">被diss性能差，Dan连夜优化React新文档</a></li><li><a href="https://juejin.cn/post/7102233142567632933" target="_blank" rel="noopener noreferrer">Node.js 调试一路走来经历了什么</a></li><li><a href="https://mp.weixin.qq.com/s/g1fr1fnGspi7SETyP9B6rA" target="_blank" rel="noopener noreferrer">推荐一个前端技术选型神器</a></li><li><a href="https://mp.weixin.qq.com/s/2OXIGB5qQFc2isIxhm33bg" target="_blank" rel="noopener noreferrer">最高性能的包管理器-pnpm</a></li><li><a href="https://mp.weixin.qq.com/s/3yy9V5HMDWPFwEf1cyL-lw" target="_blank" rel="noopener noreferrer">并发渲染优化：让文件树的渲染又快又稳</a></li><li><a href="https://juejin.cn/post/7092766235380678687" target="_blank" rel="noopener noreferrer">看了9个开源的 Vue3 组件库，发现了这些前端的流行趋势</a></li><li><a href="https://mp.weixin.qq.com/s/jU0awhez7QzN_nKrm4BNwg" target="_blank" rel="noopener noreferrer">肝了一个月的 DDD，一文带你掌握</a></li><li><a href="https://mp.weixin.qq.com/s/KwmNzTdjMB-ljQ0ysEGalg" target="_blank" rel="noopener noreferrer">深入理解 Linux CPU 上下文切换</a></li><li><a href="https://mp.weixin.qq.com/s/hVh5PIVaOeLyErZDPXx6mg" target="_blank" rel="noopener noreferrer">面试必备！TCP协议经典十五连问</a></li><li><a href="https://github.com/ashok-khanna/react-snippets/blob/main/Router.js" target="_blank" rel="noopener noreferrer">100 行代码实现 React 路由</a></li><li><a href="https://juejin.cn/post/7100736564979826695" target="_blank" rel="noopener noreferrer">精读《react-snippets - Router 源码》</a></li><li><a href="https://mp.weixin.qq.com/s/QWwb8PXtdJJUKyicHRmBkw" target="_blank" rel="noopener noreferrer">干货 | 携程机票前端Svelte生产实践</a></li><li><a href="https://juejin.cn/post/7069772395610898462" target="_blank" rel="noopener noreferrer">从arco-design的collapse组件分析如何吸收开源项目的知识</a></li><li><a href="https://juejin.cn/post/7101457212085633054" target="_blank" rel="noopener noreferrer">模块联邦浅析</a></li><li><a href="https://mp.weixin.qq.com/s/yu1tKtwneoTI9eSGS4us-g" target="_blank" rel="noopener noreferrer">我们是怎么在项目中落地qiankun的</a></li><li><a href="https://mp.weixin.qq.com/s/ULY-_Vq-Jgb8aCbhyfqYHw" target="_blank" rel="noopener noreferrer">【零基础】充分理解WebGL（三）</a></li><li><a href="https://mp.weixin.qq.com/s/ROwTG6AC2pK5UN1dzY5x8w" target="_blank" rel="noopener noreferrer">Web3.0开发入门</a></li><li><a href="https://mp.weixin.qq.com/s/DswfPb6J1w2B_MWj1TjyOg" target="_blank" rel="noopener noreferrer">从源码中来，到业务中去，React性能优化终极指南</a></li><li><a href="https://mp.weixin.qq.com/s/l19wbHNIrhjyD0HwJwuvmQ" target="_blank" rel="noopener noreferrer">剖析React核心设计原理—Virtual Dom</a></li><li><a href="https://mp.weixin.qq.com/s/b15cyyg53lVKQ_TtR8hugQ" target="_blank" rel="noopener noreferrer">【第2630期】javascript中的依赖注入</a></li><li><a href="https://mp.weixin.qq.com/s/sEvP3nLUOBwbSHP9mmT__A" target="_blank" rel="noopener noreferrer">【前端部署附录一】写给前端的 docker 使用指南</a></li><li><a href="https://mp.weixin.qq.com/s/f8mYoozpLrnSfWcRHTMa7A" target="_blank" rel="noopener noreferrer">UMI3源码解析系列之核心service类初始化</a></li><li><a href="https://mp.weixin.qq.com/s/y-6Uf1hNBF19MabHEtqnJA" target="_blank" rel="noopener noreferrer">UMI3源码解析系列之插件化架构核心</a></li><li><a href="https://mp.weixin.qq.com/s/4cZ3rJz4P5bSRSeXDbFoMQ" target="_blank" rel="noopener noreferrer">UMI3源码解析系列之运行时插件机制</a></li><li><a href="https://mp.weixin.qq.com/s/2MsgPh9AZtUoJpsLLdOynQ" target="_blank" rel="noopener noreferrer">UMI3源码解析系列之构建原理</a></li><li><a href="https://mp.weixin.qq.com/s/Sz8u6lzkL1nnpRxGrdbYJg" target="_blank" rel="noopener noreferrer">如何华丽的实现一套脚手架 - 以umicli和转转zzcli为例</a></li><li><a href="https://www.yuque.com/antfe/featured/uf1bok" target="_blank" rel="noopener noreferrer">Umi 4 特性 05：稳定白盒性能好的 ESLint</a></li><li><a href="https://mp.weixin.qq.com/s/ZTI-8RI0l314Ki9oBxqRWw" target="_blank" rel="noopener noreferrer">深入浅出 npm &amp; yarn &amp; pnpm 包管理机制</a></li><li><a href="https://mp.weixin.qq.com/s/LL6VZj36PKftbwaybBFmXg" target="_blank" rel="noopener noreferrer">一文带你进入微前端世界</a></li><li><a href="https://www.youtube.com/watch?v=VozPNrt-LfE" target="_blank" rel="noopener noreferrer">一个三小时的 React Native 速成课</a></li><li><a href="https://juejin.cn/post/7098211898990002207" target="_blank" rel="noopener noreferrer">前端配置化真香～上班又多了60%的摸🐟时间</a></li><li><a href="https://juejin.cn/post/7104460511869141006" target="_blank" rel="noopener noreferrer">20个GitHub仓库助你成为React大师</a></li><li><a href="https://juejin.cn/post/7116296421816418311" target="_blank" rel="noopener noreferrer">Vue 编译三部曲：如何将 template 编译成 AST</a></li><li><a href="https://juejin.cn/post/7117085295798911012" target="_blank" rel="noopener noreferrer">Vue 编译三部曲：模型树优化</a></li><li><a href="https://juejin.cn/post/7121504219588198413" target="_blank" rel="noopener noreferrer">Vue 编译三部曲：最后一曲，render code 生成</a></li><li><a href="https://juejin.cn/post/7124890499478978597" target="_blank" rel="noopener noreferrer">初探 Vue3 编译之美</a></li><li><a href="https://juejin.cn/post/7126712173014810661" target="_blank" rel="noopener noreferrer">Vue3 编译之美，抽象语法树的生成</a></li><li><a href="https://juejin.cn/post/7127074001897127943" target="_blank" rel="noopener noreferrer">Vue3 编译之美，空白字符的处理</a></li><li><a href="https://mp.weixin.qq.com/s/5AnRvwmA-U76T52FR47w8Q" target="_blank" rel="noopener noreferrer">在撸 Vue 的 ⌘+K 唤起菜单库时，我学到了很多</a></li><li><a href="https://turborepo.org/docs/handbook/what-is-a-monorepo" target="_blank" rel="noopener noreferrer">Monorepo Handbook 新鲜出炉</a></li><li><a href="https://juejin.cn/post/7152045316294836260" target="_blank" rel="noopener noreferrer">Vue3组件库打包指南，一次生成esm、esm-bundle、commonjs、umd四种格式</a></li><li><a href="https://juejin.cn/post/6844904039608500237" target="_blank" rel="noopener noreferrer">Koa的洋葱中间件，Redux的中间件，Axios的拦截器让你迷惑吗？实现一个精简版的就彻底搞懂了</a></li><li><a href="https://mp.weixin.qq.com/s/khS0wkBzQe4Lxn7jHK_0vA" target="_blank" rel="noopener noreferrer">学习 Babel 插件，把 Vue2 语法自动转成 Vue3！</a></li><li><a href="https://mp.weixin.qq.com/s/QgOslh1TwpU2cJubnNxYNw" target="_blank" rel="noopener noreferrer">如何编写神奇的「插件机制」，优化基于 Antd Table 封装表格的混乱代码</a></li><li><a href="https://juejin.cn/post/7121378029682556958" target="_blank" rel="noopener noreferrer">「万字总结」🍒动画 + 大白话讲清楚React渲染原理</a></li><li><a href="https://juejin.cn/post/7123969545387114509" target="_blank" rel="noopener noreferrer">耽误你十分钟！🎃你可能用得上这些webpack5新特性</a></li><li><a href="https://juejin.cn/post/7118782372220567566" target="_blank" rel="noopener noreferrer">分包王！🧨优化项目体积减少20%！</a></li><li><a href="https://juejin.cn/post/7148969678642102286" target="_blank" rel="noopener noreferrer">Three.js 进阶之旅：模型光源结合生成明暗变化的创意页面-光与影之诗 💡</a></li><li><a href="https://juejin.cn/post/7146383940931026958" target="_blank" rel="noopener noreferrer">Three.js 进阶之旅：基础入门（下）</a></li><li><a href="https://juejin.cn/post/7145064095178293285" target="_blank" rel="noopener noreferrer">Three.js 进阶之旅：基础入门（上）</a></li><li><a href="https://supercodepower.com/the-cost-of-javascript" target="_blank" rel="noopener noreferrer">⚡️ The Cost Of JavaScript (2017 - 2023)</a></li><li><a href="https://supercodepower.com/fontend-target" target="_blank" rel="noopener noreferrer">🗂 前端版本兼容问题的探索</a></li><li><a href="https://supercodepower.com/web-dev-blog" target="_blank" rel="noopener noreferrer">🗂 对 web.dev 所有 blog 的整理与归档</a></li><li><a href="https://supercodepower.com/react-native-tweet" target="_blank" rel="noopener noreferrer">🤯 没 2 年 React Native 开发经验，你都遇不到这些坑</a></li><li><a href="https://juejin.cn/post/7146183222425518093" target="_blank" rel="noopener noreferrer">Element Plus 组件库相关技术揭秘：2. 组件库工程化实战之 Monorepo 架构搭建</a></li><li><a href="https://juejin.cn/post/7146973901166215176" target="_blank" rel="noopener noreferrer">「历时8个月」10万字前端知识体系总结（基础知识篇）🔥</a></li><li><a href="https://juejin.cn/post/7146975493278367752" target="_blank" rel="noopener noreferrer">「历时8个月」10万字前端知识体系总结（算法篇）🔥</a></li><li><a href="https://juejin.cn/post/7146976516692410376" target="_blank" rel="noopener noreferrer">「历时8个月」10万字前端知识体系总结（工程化篇）🔥</a></li><li><a href="https://juejin.cn/post/7146996646394462239" target="_blank" rel="noopener noreferrer">「历时8个月」10万字前端知识体系总结（前端框架+浏览器原理篇）🔥</a></li><li><a href="https://juejin.cn/post/7158730050718662687" target="_blank" rel="noopener noreferrer">20个常见的前端算法题，你全都会吗</a></li><li><a href="https://juejin.cn/post/7151653067593613320" target="_blank" rel="noopener noreferrer">一文聊完前端项目中的Babel配置</a></li><li><a href="https://juejin.cn/post/7126394898445500423" target="_blank" rel="noopener noreferrer">从 package.json 来聊聊如何管理一款优秀的 Npm 包</a></li><li><a href="https://juejin.cn/post/7157902763534319624" target="_blank" rel="noopener noreferrer">聊一聊常见的构建工具关于插件机制的那些通用套路</a></li><li><a href="https://mp.weixin.qq.com/s/bb7C6VNbq7REP9u8PsreSg" target="_blank" rel="noopener noreferrer">看一遍就理解：IO模型详解</a></li><li><a href="https://mp.weixin.qq.com/s/qaUZ3AMA_dJkx2ZpyhJN2g" target="_blank" rel="noopener noreferrer">面试必备：零拷贝详解</a></li><li><a href="https://mp.weixin.qq.com/s/DGP1frbIlirZ_C8Vd0OmEA" target="_blank" rel="noopener noreferrer">实战总结！18种接口优化方案的总结</a></li><li><a href="https://juejin.cn/post/7172001951784108040" target="_blank" rel="noopener noreferrer">傻瓜方式分析前端应用的体积</a></li><li><a href="https://juejin.cn/book/7050063811973218341/section/7070419010021490702" target="_blank" rel="noopener noreferrer">手写 Bundler: 实现代码打包、 Tree Shaking</a></li><li><a href="https://juejin.cn/book/7050063811973218341/section/7066614663533821983" target="_blank" rel="noopener noreferrer">手写 Bundler: 实现 JavaScript AST 解析器——词法分析、语义分析</a></li><li><a href="https://mp.weixin.qq.com/s/1xY0hfcwJci1hr4TKUZMqg" target="_blank" rel="noopener noreferrer">【第2795期】雪球跨端架构建设之三端同构篇</a></li><li><a href="https://mp.weixin.qq.com/s/7WU1DDoMYQzXnlstz16QJA" target="_blank" rel="noopener noreferrer">【第2785期】雪球跨端架构建设之跨端容器篇</a></li><li><a href="https://mp.weixin.qq.com/s/19Ai1rbRoQxOBA5SXSNCAQ" target="_blank" rel="noopener noreferrer">Vite 特性和部分源码解析</a></li><li><a href="https://juejin.cn/post/7021115814870810660" target="_blank" rel="noopener noreferrer">Rollup源码：模块打包与Tree-Shaking</a></li><li><a href="https://juejin.cn/post/7169004126469914654" target="_blank" rel="noopener noreferrer">Rollup 与 Webpack 的 Tree-shaking</a></li><li><a href="https://juejin.cn/post/7157902763534319624" target="_blank" rel="noopener noreferrer">聊一聊常见的构建工具关于插件机制的那些通用套路</a></li><li><a href="https://juejin.cn/post/7160467329334607908" target="_blank" rel="noopener noreferrer">【Webpack Plugin】写了个插件跟喜欢的女生表白，结果......😭😭😭</a></li><li><a href="https://segmentfault.com/a/1190000012081469" target="_blank" rel="noopener noreferrer">玩转webpack（一）上篇：webpack的基本架构和构建流程</a></li><li><a href="https://segmentfault.com/a/1190000012099163" target="_blank" rel="noopener noreferrer">玩转webpack（一）下篇：webpack的基本架构和构建流程</a></li><li><a href="https://juejin.cn/post/7164175171358556173" target="_blank" rel="noopener noreferrer">【中级/高级前端】为什么我建议你一定要读一读 Tapable 源码</a></li><li><a href="https://juejin.cn/post/7170852747749621791" target="_blank" rel="noopener noreferrer">二十张图片彻底讲明白Webpack设计理念，以看懂为目的</a></li><li><a href="https://juejin.cn/post/7176963906844246074" target="_blank" rel="noopener noreferrer">Webpack深度进阶：两张图彻底讲明白热更新原理！</a></li><li><a href="https://mp.weixin.qq.com/s/_MJq-88MNFyvDTxUw_lFiA" target="_blank" rel="noopener noreferrer">Webpack4的压缩阶段的性能优化和踩坑</a></li><li><a href="https://juejin.cn/post/7093880734246502414" target="_blank" rel="noopener noreferrer">Vue3生命周期Hooks的原理及其与调度器(Scheduler)的关系</a></li><li><a href="https://juejin.cn/post/7064740689178787871" target="_blank" rel="noopener noreferrer">【🐯初/中级前端面经】中小型公司面试时都会问些什么</a></li><li><a href="https://juejin.cn/post/7177216308843380797" target="_blank" rel="noopener noreferrer">谈谈复杂应用的状态管理（上）：为什么是 Zustand</a></li><li><a href="https://juejin.cn/post/7182462103297458236" target="_blank" rel="noopener noreferrer">谈谈复杂应用的状态管理（下）：基于 Zustand 的渐进式状态管理实践</a></li><li><a href="https://mp.weixin.qq.com/s/Bf5JNQjki9xLVzioYPy5qg" target="_blank" rel="noopener noreferrer">【好文分享】基于Jira的运维发布平台的设计与实现</a></li><li><a href="https://mp.weixin.qq.com/s/pDXhIMFkyMuiVHB0l9gphw" target="_blank" rel="noopener noreferrer">如何使用jenkins搭建一个中小企业前端项目部署环境</a></li><li><a href="https://juejin.cn/post/7129298214959710244" target="_blank" rel="noopener noreferrer">一文教你搞定所有前端鉴权与后端鉴权方案，让你不再迷惘</a></li><li><a href="https://juejin.cn/post/6991640600533532679" target="_blank" rel="noopener noreferrer">跟着来，你也可以手写VueRouter</a></li><li><a href="https://juejin.cn/post/6997968693414084644" target="_blank" rel="noopener noreferrer">「硬核JS」图解Promise迷惑行为｜运行机制补充</a></li><li><a href="https://juejin.cn/post/7007946894605287432" target="_blank" rel="noopener noreferrer">「前端工程四部曲」模块化的前世今生（上）</a></li><li><a href="https://juejin.cn/post/7012774158371127326" target="_blank" rel="noopener noreferrer">「前端工程四部曲」模块化的前世今生（下）</a></li><li><a href="https://mp.weixin.qq.com/s/aLQVpglTRA0bJGyCpXOD8Q" target="_blank" rel="noopener noreferrer">你可能不知道的 async、await 细节</a></li><li><a href="https://juejin.cn/post/7200039970575941693" target="_blank" rel="noopener noreferrer">Three.js 进阶之旅：物理效果-碰撞和声音 💥</a></li><li><a href="https://juejin.cn/post/7191415427350659129" target="_blank" rel="noopener noreferrer">Three.js 进阶之旅：新春特典-Rabbit craft go 🐇</a></li><li><a href="https://juejin.cn/post/7212235580104917053" target="_blank" rel="noopener noreferrer">「从0实现React18系列」自己动手实现一个JSX转换</a></li><li><a href="https://juejin.cn/post/7212603037667786813" target="_blank" rel="noopener noreferrer">「从0实现React18系列」Fiber架构的实现原理</a></li><li><a href="https://juejin.cn/post/7213362704781852730" target="_blank" rel="noopener noreferrer">「从0实现React18系列」Reconciler架构的双缓存树实现原理</a></li><li><a href="https://mp.weixin.qq.com/s/QcQlOscF9R0aF2x3Oe6doQ" target="_blank" rel="noopener noreferrer">【webpack核心库】耗时7个小时，用近50张图来学习enhance-resolve中的数据流动和插件调度机制</a></li><li><a href="https://juejin.cn/post/7199832444836593725" target="_blank" rel="noopener noreferrer">聊聊 Ant Design V5 的主题（上）：CSSinJS 动态主题的花活</a></li><li><a href="https://mp.weixin.qq.com/s/sTBFnSLS-WBjMWDokH2o9A" target="_blank" rel="noopener noreferrer">写给开发同学AI强化学习入门指南</a></li><li><a href="https://mp.weixin.qq.com/s/d0zbdhTctR7L_62SaY_VJA" target="_blank" rel="noopener noreferrer">一起来看看一个体系完善的前端React组件库是如何搭建出来的！</a></li><li><a href="https://mp.weixin.qq.com/s/z4GhUr5eA-4WbxVye4hmAQ" target="_blank" rel="noopener noreferrer">干货 | 耗时缩短2/3，Taro编译打包优化实践</a></li><li><a href="https://mp.weixin.qq.com/s/g1XhCtfIL6yy-37Y_grtEw" target="_blank" rel="noopener noreferrer">干货 | 30+条业务线，携程微信小程序如何协同开发</a></li><li><a href="https://mp.weixin.qq.com/s/PT4y8OMWTpIto50qnT8gmg" target="_blank" rel="noopener noreferrer">干货 | 秒开率70%+，携程金融SSR应用性能监测与优化</a></li><li><a href="https://mp.weixin.qq.com/s/293Lbr81oUWHeJ3TGfPRdw" target="_blank" rel="noopener noreferrer">干货 | 携程微信小程序如何进行Size治理</a></li><li><a href="https://mp.weixin.qq.com/s/iT05ZXPVYFuCQgZZF9Zu5w" target="_blank" rel="noopener noreferrer">干货 | 携程小程序生态之Taro跨端解决方案</a></li><li><a href="https://mp.weixin.qq.com/s/rpHb5ZhUTOTfbVPEZJFklg" target="_blank" rel="noopener noreferrer">干货 | 瘦身50%-70%，携程 Taro 小程序样式 Size 缩减方案</a></li><li><a href="https://mp.weixin.qq.com/s/HUJTU5Du6318LJ7RfQNN2g" target="_blank" rel="noopener noreferrer">干货 | 携程商旅大前端 React Streaming 的探索之路</a></li><li><a href="https://mp.weixin.qq.com/s/JiJhA6AfNiGXl7p0uQ8mGA" target="_blank" rel="noopener noreferrer">干货 | 携程度假基于 RPC 和 TypeScript 的 BFF 设计与实践</a></li><li><a href="https://mp.weixin.qq.com/s/OHbzuqUl3tL1YlpLOgEkvA" target="_blank" rel="noopener noreferrer">INP 即将代替 FID 成为新的核心 Web 指标</a></li><li><a href="https://mp.weixin.qq.com/s/2Dy5RsviZlo7SPA648Mj3g" target="_blank" rel="noopener noreferrer">【第2973期】携程Web组件在跨端场景的实践</a></li><li><a href="https://mp.weixin.qq.com/s/yPRPakU1UM5iVY-1bwiHJQ" target="_blank" rel="noopener noreferrer">这些年在阿里学到的方法论</a></li><li><a href="https://mp.weixin.qq.com/s/ganW_F5GhQV-8s9N2y7jaw" target="_blank" rel="noopener noreferrer">/[通明境 · React架构/]通俗地讲React，优雅地理解React</a></li><li><a href="https://mp.weixin.qq.com/s/daHYuCfstHYqAtscn5T4WQ" target="_blank" rel="noopener noreferrer">React-Router 6.10+KeepAlive的约定式路由最佳实践</a></li><li><a href="https://mp.weixin.qq.com/s/MWf07S5avWzK7vdzhpFsoA" target="_blank" rel="noopener noreferrer">干货！我是如何在一线大厂实践webpack优化的</a></li><li><a href="https://mp.weixin.qq.com/s/WV3oztPYZyGiv4hW0--Jkw" target="_blank" rel="noopener noreferrer">浅谈领域驱动在前端的应⽤</a></li><li><a href="https://mp.weixin.qq.com/s/Z-8lsdLeTqCeFZ4w2oNBjg" target="_blank" rel="noopener noreferrer">Chrome 117 发布：新 Web 开发调试技巧都在这了！</a></li></ul>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
        <category label="TypeScript" term="TypeScript"/>
        <category label="前端框架" term="前端框架"/>
        <category label="Webpack" term="Webpack"/>
        <category label="源码系列" term="源码系列"/>
        <category label="业务成长" term="业务成长"/>
        <category label="性能优化" term="性能优化"/>
        <category label="组件库实战" term="组件库实战"/>
        <category label="网络相关" term="网络相关"/>
        <category label="机器学习" term="机器学习"/>
        <category label="Java" term="Java"/>
        <category label="Golang" term="Golang"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[6月16日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月16日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月16日内容汇总"/>
        <updated>2024-06-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/tW6lQPugUeUR1ye3LUgtzw" target="_blank" rel="noopener noreferrer">《LLaMA Factory 实战——单卡 3 小时训练专属大模型 Agent》</a>。本文作者介绍了如何使用LLaMA Factory的Agent Tuning功能，在单张GPU上仅用3小时训练出一个定制的LLM Agent。通过任务分解、工具调用、多智能体协作等，LLM Agent可以突破传统语言模型的局限，从外部工具获取实时知识，减少生成幻觉现象。文章详细讲解了训练过程，包括环境准备、数据集选择、模型微调和部署步骤。微调后的Yi-6B模型展示了出色的工具使用能力，显著提升了任务解决能力，并可部署为本地API服务。</p><p><a href="https://mp.weixin.qq.com/s/TOXkGpfhBx6Xv-5LZS5IaA" target="_blank" rel="noopener noreferrer">《关键点检测——HRNet源码解析篇》</a>。本文作者小苏详细解析了HRNet（High-Resolution Network）在关键点检测任务中的实现细节。文章通过源码解析，分多个部分深入讲解了HRNet的构建，包括数据集的预处理、数据增强、模型架构、训练流程和预测步骤。文中重点介绍了关键点数据集构建方法，在线数据增强技术（如HalfBody、仿射变换、水平翻转及热力图生成）以及仿射变换和高斯核的具体实现。同时，文章也对网络的训练策略和预测方法进行了详尽的说明，帮助读者更好地理解和应用HRNet进行关键点检测。</p><p><a href="https://mp.weixin.qq.com/s/09awsKgaF9T1AMFzLzSIGA" target="_blank" rel="noopener noreferrer">《ToolBench指标提升8.25%!魔搭社区让Qwen2 成为你的智能体好帮手》</a>。本文介绍了Qwen2模型经过魔搭社区的优化后，在ToolBench所有评测指标上平均提升了8.25个百分点，证明了在垂直场景中针对LLM的特定调优有较大提升。文章详尽介绍了数据集准备、训练、评测和部署的全链路能力。通过使用MSAgent-Pro数据集及引入loss_scale技术，进一步提升了训练效果。文中还演示了如何基于模型生态进行评测，以及使用ModelScope-Agent框架进行部署和应用。该文章为开发者提供了实际操作指南，帮助其在特定场景下实现智能体的高效部署。</p><p><a href="https://mp.weixin.qq.com/s/7LKfamTnCyFih6_grf9m3A" target="_blank" rel="noopener noreferrer">《万字综述大模型高效推理:无问芯穹与清华、上交最新联合研究全面解析大模型推理优化》</a>。这篇由周紫轩撰写的文章介绍了大语言模型（LLM）高效推理的最新研究进展。通过分析Transformer 架构、KV缓存技术等，文章系统总结了影响LLM推理效率的瓶颈，并对数据层、模型层和系统层的优化技术进行了全面综述。文章还探讨了自动化推理技术、模型压缩和全新替代架构的设计与应用，重点分析了提示词压缩、并行输出、注意力机制优化等技术。未来研究方向包括长文本处理、边缘部署和智能体协同优化，以期为高效推理领域提供新的思路和改进途径。</p><p><a href="https://mp.weixin.qq.com/s/g9r2MsPri67ylWVPE2zejQ" target="_blank" rel="noopener noreferrer">《ACL 2024 | 构建超关系知识图谱(KG)，增强大模型多跳/Multi-hop QA问答能力!》</a>。本文作者详细介绍了如何通过构建一个上下文感知的超关系知识图谱（KG）来增强大模型在多跳问答（Multi-hop QA）中的表现。该方法称为HOLMES，通过从查询中识别实体并生成增强的知识图谱，然后精简为最相关的信息作为模型输入，有效减少了无关信息的干扰。实验表明，与传统方法相比，HOLMES在Token消耗上节约了67%，并在多个测试集上取得了一致性提升，显著提高了复杂问题的回答性能。</p><p><a href="https://mp.weixin.qq.com/s/WyVqI1drIpmPmkg1r4WmNQ" target="_blank" rel="noopener noreferrer">《LLM推理后端性能大比拼，来自BentoML团队的深度评估!》</a>。这篇文章翻译自BentoML工程团队，全面评估了多个大型语言模型（LLM）推理后端的性能，包括vLLM、LMDeploy、MLC-LLM、TensorRT-LLM和Hugging Face TGI。文章对比了各后端在首token延时（TTFT）和token生成率两个关键指标上的表现，尤其是在不同并发用户负载下的性能。LMDeploy在多个用户负载下都展示了最低的TTFT和最高的token生成速率，适合高吞吐量应用。此外，还探讨了开发者体验，包括文档质量、模型编译和部署难度，提供了对选择合适推理后端的建议。</p><p>[<a href="https://mp.weixin.qq.com/s/BI8EdDyTEk8meL_FhX-ftw" target="_blank" rel="noopener noreferrer">《Karpathy最新四小时视频教程:从零复现GPT-2，通宵运行即搞定》</a>。本文介绍了AI专家Andrej Karpathy的一段长达四小时的视频教程，该视频详细讲解了如何从零开始复现GPT-2模型（1.24亿参数）。教程内容包括网络构建、优化训练、超参数设置和模型评估等多个关键步骤。Karpathy在视频中展示了如何通过wiki和GPT-3论文优化配置，实现快速训练并最终生成高质量的模型。教程分四大部分，涵盖了从基本实现到高级优化的全过程，最后还提供了相关的GitHub存储库“build-nanogpt”，以方便大家参考和学习。</p><p><a href="https://mp.weixin.qq.com/s/gdT0q5HJ9Fw5QrbBihI1vA" target="_blank" rel="noopener noreferrer">《视觉语言模型导论:这篇论文能成为你进军VLM的第一步》</a>。本文翻译自Meta和蒙特利尔大学等多所研究机构的论文，全面介绍了视觉语言模型（VLM）的发展和现状。文章详细说明了不同VLM的训练方法，包括对比训练、掩码策略、生成模型及预训练骨干网络等。同时，文章还介绍了VLM的训练指南、评估方法以及提升定基和对齐能力的技巧。对于刚入门VLM的学生或AI领域从业者，这篇导论是一份非常实用的参考资料。</p><p><a href="https://mp.weixin.qq.com/s/-UAKKKxA7I_qkNm5ck5R0Q" target="_blank" rel="noopener noreferrer">《详解LLM参数高效微调:从Adpter、PrefixTuning到LoRA》</a>。这篇文章详细介绍了多种大型语言模型（LLM）参数高效微调的方法，包括Adapter Tuning、Prompt Tuning、Prefix Tuning和LoRA。文章首先概述了Transformer的结构和指令微调的背景，接着总结了多种参数高效微调（PEFT）方法，如仅微调偏置项的BitFit、使用低秩矩阵分解的LoRA等。重点介绍了LoRA方法，其通过对增量参数矩阵进行低秩近似，大幅减少了微调过程中需要训练的参数数量，为LLM的微调提供了一种高效的解决方案。文章最后也描述了这些微调方法在实际中的适用范围和性能。</p><p><a href="https://mp.weixin.qq.com/s/T5-z6J6nDNdTETmEQHtlug" target="_blank" rel="noopener noreferrer">《干货|解锁产品迭代新速度:A/B测试在AI大模型时代的应用》</a>。这篇文章介绍了火山引擎数智平台VeDI旗下DataTester如何在AI大模型时代应用A/B测试，帮助企业在业务增长、用户转化、产品迭代等环节科学决策。通过A/B测试，企业能够快速上线、快速体验和回滚产品，在真实用户环境中验证产品效果。文章还讲述了如何利用A/B测试优化高效调优模型参数，提升产品质量和用户体验。这种数据驱动的精细化运营方法使得产品在激烈竞争中保持领先，提高产品竞争力。</p><p><a href="https://mp.weixin.qq.com/s/-FTbJYMbCyiQXyTZ6BHjaA" target="_blank" rel="noopener noreferrer">《港大&amp;腾讯 | 提出SELF-TUNING学习框架，让LLM自学获取新知识，表现出色!》</a>。本文介绍了由香港大学和腾讯共同提出的SELF-TUNING学习框架，这个框架旨在通过自学方式让大型语言模型（LLM）获取最新的知识。SELF-TUNING包括记忆、理解和自我反思三个关键方面，通过自我教学策略提高模型的知识获取和记忆能力。文中详细说明了框架的三个学习阶段及其如何使用Wiki-Newpages-2023-QA数据集测试和评估模型性能，结果显示框架在知识记忆、提取和推理方面效果显著，可避免灾难性遗忘并有效内化新知识。</p><p><a href="https://mp.weixin.qq.com/s/Jj5dclm7qqzp6pR4YM3lsw" target="_blank" rel="noopener noreferrer">《Multi-Agent实践第8期:轻松拖拽搭建多智能体应用》</a>。这篇文章介绍了如何使用AgentScope Workstation，一个基于拖拽式构建多智能体应用的零代码开发平台。用户无需编程经验，只需从工具栏选择并拖拽组件，就能自由组合出创意独特的多智能体应用。文章详细描述了操作步骤，包括选择大模型和智能体、设置配置以及运行应用等。此外，还介绍了AgentScope的高级功能，使用户能够创建复杂工作流并实现包括代码运行、文件读写和网络搜索在内的多种任务。文章鼓励读者探索更多可能，支持AgentScope社区的发展。</p><p><a href="https://mp.weixin.qq.com/s/Iqr7UMVk9vW6tMuRK6AIOg" target="_blank" rel="noopener noreferrer">《用 KV 缓存量化解锁长文本生成》</a>。这篇文章由Raushan Turganbay介绍了Hugging Face的新功能——KV缓存量化。本文详细解释了键值缓存（KV Cache）和量化的工作原理，以及它们如何在大语言模型（LLM）生成长文本时提高速度和内存效率。通过量化KV缓存，模型能在几乎不损失生成质量的前提下显著减少内存占用，从而支持更长文本的生成。研究表明，这一方法在多种基准测试数据集上的效果良好。文中还提供了KV缓存量化在具体操作步骤和代码示例，展示了如何实现这一优化。</p><p><a href="https://juejin.cn/post/7320082701212844044" target="_blank" rel="noopener noreferrer">《图解 Transformer [译]》</a>。这篇文章由The Random Transformer编写并在掘金上翻译和发布，重点介绍了Transformer模型。Transformer利用自注意力机制显著提升了模型训练速度，适合并行处理，并在某些任务上超过传统的神经机器翻译模型。文章深入解释了Transformer的工作原理，包括编码器和解码器组件、自注意机制、多头注意力机制以及位置编码等重要概念。通过图解和简单的描述，使读者能够更轻松地理解复杂的技术细节。</p><p><a href="https://mp.weixin.qq.com/s/zT4CwkZJkExuvivgG_h_EQ" target="_blank" rel="noopener noreferrer">《LlamaFactory 一键式LLM训练、微调工具介绍与实践》</a>。本文介绍了LlamaFactory工具，一个封装完善的LLM微调工具。作者详细描述了LlamaFactory的架构和主要特性，强调其通过Trainer类实现训练流程，支持各种模型和多种训练方法，包括全参数微调、LoRA微调和QLoRA微调等。LlamaFactory结合先进算法如GaLore和Unsloth，大幅降低了显存占用。文章还探讨了数据准备和使用自定义数据集的步骤，并分享了工具的安装依赖和WEB-UI训练界面。LlamaFactory凭借集成化设计，提供便捷且高效的LLM微调解决方案，适合快速上手和复杂训练任务，但需用户详细了解配置参数以优化使用。</p><p><a href="https://mp.weixin.qq.com/s/gI7qXG7qzIFsfgFjD82yDA" target="_blank" rel="noopener noreferrer">《分享几个有趣的大模型(LLMs)应用场景，涉及金融分析、物联网、招聘、战术分析等》</a>。本文作者盘点了一些大模型（LLMs）在不同领域的应用案例。具体包括：利用MockLLM进行在线招聘面试，通过模拟面试过程提升人职匹配质量；ResearchAgent系统生成论文idea，优化科研思路；TacicAI在足球战术分析中的应用，高效提升角球战术效果；代码精细化，通过迭代改进源代码；CibyGPT处理物联网时空数据；finRobot进行高级金融分析；FactAgent用于假新闻检测和信息核查；以及基于信息检索系统的QA问答。这些案例展示了大模型在不同场景中的创新应用和潜在影响。</p><p><a href="https://mp.weixin.qq.com/s/sCD2DKx9-rroCoTh1bSvBQ" target="_blank" rel="noopener noreferrer">《苹果智能炸裂登场:直接GPT-4o加持，全家桶都上生成式AI，Siri脱胎换骨》</a>。这篇文章介绍了苹果在WWDC 2024发布的一系列生成式AI功能，由Apple Intelligence系统驱动，集成了GPT-4o和本地大模型加云端的混合策略。Siri更新与大模型结合，增强自然语言理解。Apple Intelligence系统应用广泛，覆盖语言和图像生成，以及系统级整合功能，如文档生成和图像处理。苹果还首次引入了iPhone通话录音和iPad计算器功能。这标志着苹果在AI技术领域迈出的重要一步。</p><p><a href="https://mp.weixin.qq.com/s/kpdkS1BeOwmnUiOcXxvfwA" target="_blank" rel="noopener noreferrer">《效果远超LoRA和QLoRA!PiSSA微调LLaMA-3》</a>。本文作者孟繁续详细介绍了如何使用PiSSA微调LLaMA-3模型。PiSSA通过不同的初始化方式，仍保持与LoRA和QLoRA相同的结构，但显著减少量化误差，提升了模型收敛速度和最终效果，并且适用于4bit量化场景。文中提供了具体的代码示例和步骤指南，展示了PiSSA的快速收敛和高效性能。作者还强调未来将在Huggingface平台上逐步共享更多模型和配置，方便用户使用和定制。PiSSA微调LLaMA-3使训练更高效，效果更优。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://dev.to/alvaronaschez/creating-a-chesscomlichess-clone-using-go-and-vue-1om" target="_blank" rel="noopener noreferrer">Creating a chess.com/lichess clone using Go and Vue</a></p><p><a href="https://mp.weixin.qq.com/s/e5as8u4aklbm9Aukw66KwA" target="_blank" rel="noopener noreferrer">Secure Randomness in Go 1.22</a></p><p><a href="https://mp.weixin.qq.com/s/RRigOLC_bQjOLh47gEVd-A" target="_blank" rel="noopener noreferrer">使用一键脚本搭建自己的镜像加速仓库</a></p><p><a href="https://mp.weixin.qq.com/s/EW1OUZSgtGSff5R8eg9fhg" target="_blank" rel="noopener noreferrer">Rust项目中使用 Lettre 进行发送邮件</a></p><p><a href="https://mp.weixin.qq.com/s/QqgwkNQ-qRo4Aa3HPZ9uhw" target="_blank" rel="noopener noreferrer">使用 Gin 快速开发高性能的 Web 应用</a></p><p><a href="https://mp.weixin.qq.com/s/cSs_4xP6aIztSoZIfvVnsw" target="_blank" rel="noopener noreferrer">在 Go 中如何优雅的使用 wire 依赖注入工具提高开发效率？上篇</a></p><p><a href="https://mp.weixin.qq.com/s/UAdVpZ_UvfdGdDMWmGRp2w" target="_blank" rel="noopener noreferrer">探索Rust在AI领域的应用</a></p><p><a href="https://mp.weixin.qq.com/s/aJ2ywxRvEIzKU9gUlG0NOw" target="_blank" rel="noopener noreferrer">Gopher的Rust第一课：Rust代码组织</a></p><p><a href="https://mp.weixin.qq.com/s/G1gXrl9C4knrXN93a-M4vw" target="_blank" rel="noopener noreferrer">Go必知必会：数组和切片详解</a></p><p><a href="https://mp.weixin.qq.com/s/wUn2TyI66GbzfMLCYHB6yg" target="_blank" rel="noopener noreferrer">分享最近学到的 5 个 Golang 小技巧</a></p><p><a href="https://mp.weixin.qq.com/s/eHoZI-VUDCxJq6wc3zNZSA" target="_blank" rel="noopener noreferrer">Docker镜像加速器被毙了？试下这种免费的方式吧！</a></p><p><a href="https://mp.weixin.qq.com/s/LxFntxCigGlUa1bcipKhZg" target="_blank" rel="noopener noreferrer">Go 面试中的隐藏陷阱：SliceHeader 问题解析</a></p><p><a href="https://mp.weixin.qq.com/s/mCZ9Fn3twf6dLzqyXxRpGA" target="_blank" rel="noopener noreferrer">Golang sql 标准库源码解析</a></p><p><a href="https://mp.weixin.qq.com/s/YY6Y-rpYASL6s6OMJCm20g" target="_blank" rel="noopener noreferrer">Go-Zero实战之docker开发环境部署（六）</a></p><p><a href="https://mp.weixin.qq.com/s/IM4yRYjZmQ2AGWhv87h2gA" target="_blank" rel="noopener noreferrer">使用 Nginx Ingress 实现金丝雀发布</a></p><p><a href="https://mp.weixin.qq.com/s/XEZADreCOhWCizJeUInl1A" target="_blank" rel="noopener noreferrer">Go即时通信：Goim 源码</a></p><p><a href="https://mp.weixin.qq.com/s/85CIMowIm9oon3m9Lzr8wg" target="_blank" rel="noopener noreferrer">Go 朝着错误的方向发展</a></p><p><a href="https://mp.weixin.qq.com/s/qrobTHebMnxsaQUuljxAMw" target="_blank" rel="noopener noreferrer">大厂开始选择使用 Rust 做微服务应用开发了</a></p><p><a href="https://mp.weixin.qq.com/s/WdLEIXnwmxpU25D7Yknpmg" target="_blank" rel="noopener noreferrer">Go 夜读第 155 期：带你从零到一实现 TCC 分布式事务框架</a></p><p><a href="https://mp.weixin.qq.com/s/pnMkTwons7Tsg19HBhCsTg" target="_blank" rel="noopener noreferrer">Go与神经网络：线性回归</a></p><p><a href="https://mp.weixin.qq.com/s/v9_9PGqsmqnQjT7f9soO6A" target="_blank" rel="noopener noreferrer">Rob Pike的编程哲学</a></p><p><a href="https://mp.weixin.qq.com/s/3MFTD5_FG80fSyHSeZhMuw" target="_blank" rel="noopener noreferrer">快速吃透 Golang Channels 使用技巧</a></p><p><a href="https://mp.weixin.qq.com/s/o3-yPO-OfdVlXvEtVPIzRw" target="_blank" rel="noopener noreferrer">Go 中空结构体的用法，我帮你总结全了！</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/aXaYZQdhbnWV6q3oiTs6Zw" target="_blank" rel="noopener noreferrer">网关系统就该这么设计（万能通用），稳的一批！</a></p><p><a href="https://mp.weixin.qq.com/s/kZGJR3e9BbsTRJUCD8FMMQ" target="_blank" rel="noopener noreferrer">领导撒事不干，凭什么工资比我高</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/cFzOOqknRyvwGxMLw5DNLw" target="_blank" rel="noopener noreferrer">VSCode无限画布模式（可能会惊艳到你的一个小功能）</a></p><p><a href="https://juejin.cn/post/7375858343179255862" target="_blank" rel="noopener noreferrer">Next.js v15 要来了，有哪些更新？附升级指南</a></p><p><a href="https://mp.weixin.qq.com/s/bdjBt0GcoS1jwqqBE3Lvkw" target="_blank" rel="noopener noreferrer">Next.js 项目接入 AI 的利器 —— Vercel AI SDK</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6月9日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月9日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月9日内容汇总"/>
        <updated>2024-06-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-812b7464c8a84a0f4a2cdce8a8e2b97b.png" width="900" height="520" class="img_astN"></p><p>封面图：Go 1.22.4 is Released!</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/Jgf9akHdgxEokrlMPmGgQQ" target="_blank" rel="noopener noreferrer">《开源百B大语言模型哪家强?》</a>。本文作者爱因总结了截至2024年5月开源社区的百B大模型，包括Mixtral、Llama 3、Qwen1.5-110B 和 DeepSeek-V2。每个模型都有其特点，例如Mixtral 8x22B 采用稀疏的专家混合（SMoE）结构，性能强劲且成本效益高；Llama 3 400B 在多模态和多语言能力上有显著提升；Qwen1.5-110B 支持长达32K token的上下文长度，并在多语言理解方面表现优秀；而DeepSeek-V2 通过多头潜在注意力（MLA）和DeepSeekMoE的创新架构，实现了更高的性能和效率。文章详细对比了这些模型的架构、训练数据和性能表现，为读者提供了深入的参考。</p><p><a href="https://mp.weixin.qq.com/s/s5vChAY6B2s_ZVK-ALYP2w" target="_blank" rel="noopener noreferrer">《你好，Qwen2!》</a>。本文介绍了全新的Qwen2系列模型，这是通义千问团队对Qwen1.5的重大升级，包括从0.5B到72B的五个尺寸的预训练和微调模型。Qwen2不仅增加了27种语言的高质量数据，还在多项基准测试中表现出色，特别是在自然语言理解、代码、数学和多语言能力方面。Qwen2模型还支持最长128K tokens的上下文长度。文章详细阐述了Qwen2的架构、训练数据和优化方法，以及微调、推理和部署的详细过程。此外，Qwen2采用了更加开放的Apache 2.0许可（除72B模型外），以推动其在全球各地的应用。</p><p><a href="https://mp.weixin.qq.com/s/EXFIMUaSJfG_WhRCBzgmKA" target="_blank" rel="noopener noreferrer">《Mobile-Agent-v2: GPT4v + 多Agent提高40%准确率》</a>。本文介绍了由一支团队开发的Mobile-Agent-v2，这是一个通过多代理协作优化移动设备操作的助手系统，包含规划、决策和反思三个代理。与单一代理架构相比，Mobile-Agent-v2在复杂的移动设备任务中提高了30%以上的任务完成效率，并在一些高级操作中达到了55%的成功率。通过整合视觉感知和记忆模块，该系统大大改善了对屏幕内容的识别和任务执行的精度。反思代理的引入帮助纠正错误操作，进一步提升了系统的可靠性和灵活性。相关代码已在GitHub开源。</p><p><a href="https://mp.weixin.qq.com/s/luZGMG1RRUT4X_ckt8hsCQ" target="_blank" rel="noopener noreferrer">《Karpathy点赞，这份报告教你如何用 LLaMa 3创建高质量网络数据集》</a>。本文作者总结了一份名为FineWeb-Edu的工作，该工作受到AI大牛Andrej Karpathy的推荐。FineWeb-Edu通过使用LLaMa 3 70B评判，将原始的15万亿个FineWeb token过滤为1.3万亿个高质量教育内容token。FineWeb数据集来自96个CommonCrawl快照，经过多步数据过滤和重复数据删除，形成一个高达15万亿token的预训练数据集。FineWeb-Edu进一步利用LLaMa 3进行精细化的教育内容筛选，在教育基准测试中表现优越。文章深入探讨了大规模数据过滤、教育内容筛选器的设计和评估方法，非常适合研究如何创建用于大语言模型预训练的高质量网络数据集。</p><p><a href="https://mp.weixin.qq.com/s/duayAuvVfSoMlpRJQbDjrA" target="_blank" rel="noopener noreferrer">《RLHF替代方案:在SFT以外，我们还能拿SFT数据做什么?》</a>。本文提出了一种名为Alignment from Demonstrations (AfD)的RLHF替代方案。通过Inverse RL trajectory matching方法，文章探讨了何时应该使用SFT数据，何时应该进行Reward Modeling，并提出了利用SFT数据进行Reward Modeling的策略。具体内容涵盖MDP的定义、RLHF的局限、逆向强化学习的优缺点，并提供了相关的实验验证结果，展示了AfD方案在多种任务中的有效性。研究中使用的原模型和强化模型效果接近RLHF，具有更高的成本效益。</p><p><a href="https://mp.weixin.qq.com/s/w_MFh_-W5wpV2FwMCP5Yfg" target="_blank" rel="noopener noreferrer">《大模型对齐到底是与谁的价值对齐?KAIST-AI | 提出大模型多价值对齐方法!》</a>。本文介绍了KAIST-AI团队提出的一种大模型多价值对齐方法。传统的模型对齐方法假设与公众整体价值对齐是最佳选择，但人类价值观多样，需个性化对齐来满足用户多样化的需求。为此，作者创建了一个包含192k种价值观组合和65k条用户指令的偏好数据集，并训练了名为JANUS7B的大模型。实验结果表明用户可通过系统消息表明其价值偏好，使模型生成符合个体价值观的内容，提高了大模型在适应不同用户偏好方面的灵活性和有效性。</p><p><a href="https://mp.weixin.qq.com/s/7tPKmp-Z_unsjl7n7lV89Q" target="_blank" rel="noopener noreferrer">《深入理解AWQ量化技术》</a>。本文由Coder.AN撰写，介绍了AWQ（Activation-aware Weight Quantization）量化技术，这是一种基于激活值分布挑选显著权重进行量化的方法。AWQ量化不依赖反向传播或重建，可以保持大型语言模型在多领域的泛化能力。AWQ技术已被集成至多个推理框架，并被许多大厂采用，获得Mlsys 2024最佳论文提名。文章详细解释了AWQ的核心观点及其具体实现步骤，包括显著权重的识别和缩放算法的使用，有助于大幅降低模型内存占用并提高推理速度。</p><p><a href="https://mp.weixin.qq.com/s/o6shuvsz8UFJxbsknKf0tQ" target="_blank" rel="noopener noreferrer">《单卡训练 LLaMA-3-70B?PiSSA 参数微调方法实践》</a>。本文作者孟繁续博士介绍了来自北京大学人工智能研究院的一种名为PiSSA的参数微调方法。PiSSA通过对预训练模型的权重进行奇异值分解，初始化了一个适配器，能够在不完全训练模型的情况下达到近似效果。PiSSA与LoRA架构相似，但具有更快的收敛速度和更小的量化误差，允许在单卡GPU上完成大模型的微调训练。PiSSA已被合并到huggingface/peft项目中，并展示了在LLaMA-3等多种大模型上的优异表现。</p><p><a href="https://mp.weixin.qq.com/s/Y-3ZMvn_gZK1u5I6_woq_g" target="_blank" rel="noopener noreferrer">《借着triton inference server聊一下各种batching方法》</a>。本文作者介绍了在实际模型部署中如何使用多种batching方法优化模型性能。通过讨论单batch、静态batch、动态batch、连续batch、ragged batching以及自定义batching策略，文章详细说明了每种方法的适用场景和优势。例如，静态batch适合固定的输入shape，而连续batch则在高吞吐量场景中表现优异。文中提及的triton inference server和TensorRT-LLM等技术，展示了如何通过批处理策略提升模型服务的整体性能。</p><p><a href="https://mp.weixin.qq.com/s/OfA333WDUkNIprfMBJ9FjQ" target="_blank" rel="noopener noreferrer">《多模态LLM!谷歌 | 提出创新架构Zipper:分开训练再「压缩」》</a>。本文作者介绍了Google DeepMind提出的新型多模态架构Zipper。Zipper由多个单模态预训练解码器组成，通过交叉注意力将这些解码器压缩在一起，利用有限的跨模态数据微调，实现多模态生成能力。该方法利用无监督单模态数据进行强大的单模态预训练，然后通过融合这些预训练解码器来生成多模态内容。实验表明，Zipper模型在语音到文本和文本到语音任务上表现出色，并且相比传统方法更高效地利用了对齐数据。</p><p><a href="https://mp.weixin.qq.com/s/4kwCqxu6e2uFZ53UGbtDuw" target="_blank" rel="noopener noreferrer">《2024 人工智能最前沿:分享几个大模型(LLMs)的热门研究方向》</a>。本文作者介绍了当前人工智能领域中几个热门的大模型（LLMs）研究方向，包括检索增强生成（RAG）、大模型Agent、Mamba、MoE和LoRA等。每个方向都有其独特的应用场景和技术创新，例如RAG结合信息检索和文本生成以提高内容的准确性和鲁棒性，大模型Agent通过多任务学习和常识推理来增强AI的适应性，并且LoRA通过参数高效微调技术在减少资源消耗的同时维持模型性能。文章详细介绍了这些方向的研究重点和面临的挑战，旨在帮助寻找研究方向的学者了解前沿动态。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/XjEra9vuOBj1Y3b-jM3Oxw" target="_blank" rel="noopener noreferrer">Rust Tips #81 ~ #90</a></p><p><a href="https://mp.weixin.qq.com/s/02P6kZogyzOYm6QkKweDAg" target="_blank" rel="noopener noreferrer">Rust Tips #61 ~ #80</a></p><p><a href="https://mp.weixin.qq.com/s/i2qEvESgy2YueL1kjUCUzA" target="_blank" rel="noopener noreferrer">[<!-- -->Golang 1.23 前瞻<!-- -->]<!-- --> unique package 介绍</a></p><p><a href="https://mp.weixin.qq.com/s/UsoheOJsnkUkIpwK-PdmhA" target="_blank" rel="noopener noreferrer">Golang GC 基础: 三色标记清除和 STW</a></p><p><a href="https://mp.weixin.qq.com/s/92jjgtbPJ0W6pcgudfkq2A" target="_blank" rel="noopener noreferrer">Rust tips #41 ~ #60</a></p><p><a href="https://mp.weixin.qq.com/s/7bma0aoB2ZLX5F_LmvG19w" target="_blank" rel="noopener noreferrer">全球最大开源项目之一——Kubernetes诞生十周年</a></p><p><a href="https://mp.weixin.qq.com/s/buOZUGUF6bKoN3J3dOcZ4A" target="_blank" rel="noopener noreferrer">Rust Tips #21 ~ #40</a></p><p><a href="https://mp.weixin.qq.com/s/kDxIJEy9kfvvRXEZCzVI7Q" target="_blank" rel="noopener noreferrer">聊一聊使用Rust进行Web开发的细节</a></p><p><a href="https://mp.weixin.qq.com/s/RM6AzkFPBMUxWPe2Z3Ot3w" target="_blank" rel="noopener noreferrer">Rust 中使用 Serde 和 Serde_json 库实现 JSON 操作</a></p><p><a href="https://mp.weixin.qq.com/s/sJazQAYon7dgYRYIaLhj5g" target="_blank" rel="noopener noreferrer">使用 Rust Actix 快速开发高性能的Web应用</a></p><p><a href="https://mp.weixin.qq.com/s/sJUpIAxBMxbxXFmZu673ZA" target="_blank" rel="noopener noreferrer">Rust Actix-Web 高性能HTTP服务器的实现与配置</a></p><p><a href="https://mp.weixin.qq.com/s/4MwfLHqxFXkSxT6ytWr_lw" target="_blank" rel="noopener noreferrer">在 Rust Actix-Web 项目中实现 SSE 实时推送功能</a></p><p><a href="https://mp.weixin.qq.com/s/FqkbhsN93hDgsUvDrhKniA" target="_blank" rel="noopener noreferrer">Rust Actix-web 错误处理的最佳实践</a></p><p><a href="https://mp.weixin.qq.com/s/si0VzcyZRIp9cX-22ukLUA" target="_blank" rel="noopener noreferrer">快速上手Rust Actix-Web中的单元测试和集成测试</a></p><p><a href="https://mp.weixin.qq.com/s/sFCkv1f6qtfsHEbc-wD5pg" target="_blank" rel="noopener noreferrer">Rust 开发到底用 RustRover 与还是 VS Code Rust 插件</a></p><p><a href="https://mp.weixin.qq.com/s/FiO0c0CDJ4LR2GsRdh8CxQ" target="_blank" rel="noopener noreferrer">深入理解Rust的线程安全机制</a></p><p><a href="https://mp.weixin.qq.com/s/3z9lbJXKsKmYOUNZLFnCtw" target="_blank" rel="noopener noreferrer">跟着 Google 团队快速入门 Rust 编程</a></p><p><a href="https://mp.weixin.qq.com/s/3Xo6meiZa_AitddFpgUSZw" target="_blank" rel="noopener noreferrer">Gopher的Rust第一课：Rust代码组织</a></p><p><a href="https://mp.weixin.qq.com/s/ai54GIM-e3hWNj1MMUbntA" target="_blank" rel="noopener noreferrer">Go 项目文件命名规范是什么</a></p><p><a href="https://mp.weixin.qq.com/s/8r_8k6mN54obPSs1lUkz6Q" target="_blank" rel="noopener noreferrer">Rust Tips #1 ~#20</a></p><p><a href="https://mp.weixin.qq.com/s/tzUzoyAaNq-59PbwBlvqdg" target="_blank" rel="noopener noreferrer">如何优雅地处理 Goroutines 中的错误</a></p><p><a href="https://mp.weixin.qq.com/s/4VwlsxZ17kcZjOgPl-Ahtw" target="_blank" rel="noopener noreferrer">Go 1.22.4 is Released!</a></p><p><a href="https://mp.weixin.qq.com/s/Y7Cl_vKTN4CUcemmE5a17A" target="_blank" rel="noopener noreferrer">Go 语言 mongox 库：简化操作、安全、高效、可扩展、BSON 构建</a></p><p><a href="https://mp.weixin.qq.com/s/4pO7yMSiwXhTTU7IM1TusQ" target="_blank" rel="noopener noreferrer">Golang：使用bcrypt实现密码加密和和校验</a></p><p><a href="https://mp.weixin.qq.com/s/7dD18BazBSRdkaGXNF-toA" target="_blank" rel="noopener noreferrer">Go 夜读第 154 期：木鸟带你建立理解分布式系统的框架</a></p><p><a href="https://mp.weixin.qq.com/s/ShzYKGkOAqJFE1qRQXjSxw" target="_blank" rel="noopener noreferrer">K8s集群稳定性提升手段</a></p><p><a href="https://mp.weixin.qq.com/s/O5M5RFq2pgEutYncFYsFNA" target="_blank" rel="noopener noreferrer">Crossplane 实战：构建统一的云原生控制平面</a></p><p><a href="https://mp.weixin.qq.com/s/h8qaz1LF7HdwRy6ottW8cg" target="_blank" rel="noopener noreferrer">如何用 golang 从 OpenAI, Ollama 和 Claude 获取可靠的结构化输出</a></p><p><a href="https://mp.weixin.qq.com/s/gMro9EomjDnflLKldzZuag" target="_blank" rel="noopener noreferrer">Go 还缺少什么，能更完美</a></p><p><a href="https://mp.weixin.qq.com/s/3E2UvCIx9_XpLbmBmu-yUg" target="_blank" rel="noopener noreferrer">命令分发模式</a></p><p><a href="https://mp.weixin.qq.com/s/raFDnbkWU4G8Mvng1yo_8g" target="_blank" rel="noopener noreferrer">Enhancing Kubernetes API with k8s.io/apiserver - 自定义APIServer篇</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/HIsTtf7QC_n82fV6JuYv7g" target="_blank" rel="noopener noreferrer">“鸭子数据库”DuckDB正式发布1.0稳定版：C++引擎代码超30万行、百万级月下载量</a></p><p><a href="https://mp.weixin.qq.com/s/7TxBtoz4wMCjYjFe3qfKxg" target="_blank" rel="noopener noreferrer">干货 | 携程数据基础平台2.0建设，多机房架构下的演进</a></p><p><a href="https://mp.weixin.qq.com/s/yQLKQE5EB7fDBPAXzLPpEw" target="_blank" rel="noopener noreferrer">封装优雅的缓存组件库（Redis 缓存与内存缓存）</a></p><p><a href="https://mp.weixin.qq.com/s/UYS5ALDC0nOdookJGijkrg" target="_blank" rel="noopener noreferrer">MySQL 深潜 - Semijoin 丛林小道全览</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/YxPxpds9OJl0CWXTCYfxWg" target="_blank" rel="noopener noreferrer">61儿童节，我给儿子做了两款coze小应用，让他见识一下程序员爸爸的厉害</a></p><p><a href="https://mp.weixin.qq.com/s/0oZaNQguFHHL3OiXoiGbvA" target="_blank" rel="noopener noreferrer">忆童年：用 Coze 搭一只「AI 电子宠物」</a></p><p><a href="https://mp.weixin.qq.com/s/b7VpQ5LNKYYKf40Rq5youg" target="_blank" rel="noopener noreferrer">聊下 Mako 的 Benchmark</a></p><p><a href="https://mp.weixin.qq.com/s/8T9pfdKQ5A9N5e87Y92h5g" target="_blank" rel="noopener noreferrer">MDH Weekly 127 – 《六一快乐》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6月2日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月2日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/6月2日内容汇总"/>
        <updated>2024-06-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://arxiv.org/pdf/2405.19893" target="_blank" rel="noopener noreferrer">《Similarity is Not All You Need: Endowing Retrieval Augmented Generation with Multi Layered Thoughts》</a>。本文由Chunjing Gan等撰写，讨论了大型语言模型（LLMs）在知识密集型任务中遇到的知识更新不及时和幻觉问题，传统的基于相似性的检索增强生成（RAG）方法在这些任务中的局限性。作者提出了一种名为MetRAG的多层次思维增强RAG框架，该框架超越了现有的相似性导向模型，结合了效用导向思维和紧凑性导向思维，通过LLM进行任务自适应总结，并最终实现知识增强生成。实验结果显示，MetRAG在知识密集型任务中具备优越表现。</p><p><a href="https://arxiv.org/pdf/2405.00208" target="_blank" rel="noopener noreferrer">《A Primer on the Inner Workings of Transformer-based Language Models》</a>。本文由Javier Ferrando、Gabriele Sarti、Arianna Bisazza和Marta R. Costa-jussà撰写，主要介绍了解释基于Transformer的语言模型内部工作原理的当前技术。文章深入探讨了生成式解码器结构，综述了这些模型中已知的内部机制及其实现方法。通过总结多年研究的成果，文章为读者提供了关于这些技术的简明技术介绍，并揭示了流行方法与当前研究方向之间的联系，是理解和研究先进语言模型的宝贵资源。</p><p><a href="https://mp.weixin.qq.com/s/JxB6JU6MxO3709mkg7penw" target="_blank" rel="noopener noreferrer">《解决Transformer根本缺陷，CoPE论文爆火:所有大模型都能获得巨大改进》</a>。本文由Meta的FAIR团队撰写，介绍了新提出的上下文位置编码方法（CoPE），旨在解决传统Transformer在处理计数和复制任务中的缺陷。CoPE结合了内容和上下文的因素来编码位置，使模型更加灵活、高效地理解输入数据结构和语义内容。实验结果显示，CoPE在处理分布外数据以及需要高泛化能力的任务上表现出色，为大型语言模型在自然语言处理领域提供了更强的能力。这篇论文已成为AI领域的热门话题，具有重要的意义。</p><p><a href="https://mp.weixin.qq.com/s/O6a5LdjH-2LGR5tep3uUeg" target="_blank" rel="noopener noreferrer">《爆火ChatTTS突破开源语音天花板，3天斩获9k的Star量》</a>。本文介绍了ChatTTS项目的火爆现象。ChatTTS是一种新的文本转语音技术，能够生成自然流畅的语音合成，支持中英文混合语音和多样细粒度的控制，例如笑声、停顿等。该项目在GitHub上发布仅三天就获得了超过9,000个Star，展示了其巨大的关注度和影响力。尽管开源的只是底层模型，但ChatTTS已显现其在语音韵律控制和细节处理上的优势。未来的发展和完善或将进一步提升其在文本到语音转换领域的应用价值。</p><p><a href="https://mp.weixin.qq.com/s/iC5w0Ox-xk5KLnyEgb1Qew" target="_blank" rel="noopener noreferrer">《利用大模型构造数据集，并微调大模型》</a>。本文由稀土掘金技术社区首发，详细介绍了如何利用大语言模型（LLM）构造定制化的数据集，并使用其微调大模型。文章分为四部分：前言、构造数据集、微调模型和推理。首先，介绍了利用LLM生成自定义问答对数据集的方法，包括设计Prompt和处理文本数据的步骤。接着，讨论了如何使用LoRA（低秩适配器）技术在消费级硬件上微调模型，详细说明了数据加载、模型配置及训练参数设置的全过程。最后，提供了推理代码，展示了如何在微调后的模型上进行问答生成。这篇文章为AI开发者提供了实用的工具和方法，有助于高效地实现模型的个性化定制。</p><p><a href="https://mp.weixin.qq.com/s/xUJXxP6DQGqb6xrmTKKlgQ" target="_blank" rel="noopener noreferrer">《Meta| 提出上下文位置编码:CoPE，解决当前模型「普遍存在的问题」，含GPT-4o!》</a>。本文作者Meta团队提出了一种新的位置编码方法——上下文位置编码（CoPE），旨在解决传统Transformer模型中使用Token计数作为位置编码的局限性。CoPE通过结合上下文信息来定位，能够提高大模型在处理语言数据时的泛化能力和性能。实验表明，CoPE在处理计数、选择性复制等任务，以及在维基百科文本的语言建模上表现出色，显示了其在提升模型效果上的潜力。这项研究为进一步改进自然语言处理模型提供了新方向。</p><p><a href="https://mp.weixin.qq.com/s/sPeA9Vfip0Hv_8xDpb8zVw" target="_blank" rel="noopener noreferrer">《综述：大语言模型在信息抽取上的应用》</a>。本文综述了大语言模型(LLMs)在信息抽取(IE)领域的应用，特别是生成型大模型在命名实体识别(NER)、关系抽取(RE)和事件抽取(EE)方面的表现。LLMs展现出强大的跨领域泛化能力，通过生成范式为信息抽取任务提供了创新的解决方案。作者详细分类了相关工作并分析了前沿技术，指出LLMs结合IE的新趋势。文章还探讨了监督式微调、少样本学习、零样本学习和数据增强等不同学习范式，并展示了在不同数据集上的性能比较。这篇综述为研究人员提供了技术洞见和未来研究方向的参考。</p><p><a href="https://mp.weixin.qq.com/s/Tp9W0RR_rfeuv24ma67k0w" target="_blank" rel="noopener noreferrer">《AutoCoder:性能超越GPT-4o的模型，居然只有33B，还是开源!》</a>。本文介绍了由Meta团队推出的AutoCoder模型，这款只有33B参数的大模型在HumanEval基准测试中以90.9%的Pass@1成绩超越了GPT-4 Turbo。AutoCoder的灵活性得益于AIEV-Instruct技术，该技术通过智能体交互模拟和执行验证提升代码数据的质量。AutoCoder不仅在多种编程语言如Java、C++、Rust中表现优异，还支持安装外部包，进一步提升了解决复杂任务的能力。文章详细描述了AutoCoder的训练方法、数据集构建以及性能对比，并提供了模型的开源代码和实验示范。</p><p><a href="https://mp.weixin.qq.com/s/aJP-MgZ_8ZJeu3zxEuSGAA" target="_blank" rel="noopener noreferrer">《开源金融领域AI Agent平台:FinRobot，利用多源LLMs进行高级金融分析、市场预测》</a>。本文介绍了由Meta提出的开源AI Agent平台——FinRobot，该平台利用多源大语言模型(LLMs)，为金融领域提供高级分析和市场预测。FinRobot通过多层架构结合了金融思维链提示、市场预测Agent、文档分析Agent和交易策略Agent，以实现复杂的财务分析和决策支持。其创新的多源集成策略和实时数据处理能力确保了对全球市场的精准适应。文章详细描述了FinRobot的技术架构、应用场景及其在提升金融分析准确性和透明度方面的优势。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://juejin.cn/post/7343915092100431906" target="_blank" rel="noopener noreferrer">【一分钟快学】掌握Go语言并发编程：深入理解与精巧运用 sync.Map</a></p><p><a href="https://juejin.cn/post/7343814405442502694" target="_blank" rel="noopener noreferrer">挑战自我极限，用最简方式介绍从零开始构建 Kubernetes Operator</a></p><p><a href="https://juejin.cn/post/7351584333613727798" target="_blank" rel="noopener noreferrer">【一分钟快学】掌握Go语言：深入解析Context包与精妙的取消机制</a></p><p><a href="https://juejin.cn/post/7344916114204196901" target="_blank" rel="noopener noreferrer">【一分钟快学】并发编程的艺术：解锁如何在 Go 语言中的批量并发</a></p><p><a href="https://mp.weixin.qq.com/s/kT_yBR4l1kToawVzey7syA" target="_blank" rel="noopener noreferrer">[<!-- -->Golang 1.23 前瞻<!-- -->]<!-- -->使用 Go 实现可组合的函数迭代器</a></p><p><a href="https://mp.weixin.qq.com/s/raFDnbkWU4G8Mvng1yo_8g" target="_blank" rel="noopener noreferrer">Enhancing Kubernetes API with k8s.io/apiserver - 自定义APIServer篇</a></p><p><a href="https://mp.weixin.qq.com/s/nSUQgY9Rx47ZywhJQyh4Ew" target="_blank" rel="noopener noreferrer">[<!-- -->Golang 1.23 前瞻<!-- -->]<!-- -->对 //go:linkname 的修改及其对开发人员的影响</a></p><p><a href="https://mp.weixin.qq.com/s/3aw5sMsMW8MA_pJxlhMFbQ" target="_blank" rel="noopener noreferrer">使用 gpt-4o 分析火焰图</a></p><p><a href="https://mp.weixin.qq.com/s/0JS7XWcpRauj14xWGWopFw" target="_blank" rel="noopener noreferrer">Go 如何优雅实现业务并发</a></p><p><a href="https://mp.weixin.qq.com/s/c7UuQetStkA7Tw2DLfMjvA" target="_blank" rel="noopener noreferrer">Go 1.23新特性前瞻</a></p><p><a href="https://mp.weixin.qq.com/s/Wf49LyLs-avTLb5k4DHD0w" target="_blank" rel="noopener noreferrer">Enhancing Kubernetes API with k8s.io/apiserver - 网关篇</a></p><p><a href="https://mp.weixin.qq.com/s/4B82xP0uMLoK8Q_ETcQfFg" target="_blank" rel="noopener noreferrer">Flame Graph AI: Grafana新推出智能火焰图分析AI专家</a></p><p><a href="https://mp.weixin.qq.com/s/C0b-VqlKtrwApVHtVGy6yA" target="_blank" rel="noopener noreferrer">Go 通过 ETCD 实现应用选主</a></p><p><a href="https://mp.weixin.qq.com/s/S5YqeiFb4T9q-9DRpBtlRw" target="_blank" rel="noopener noreferrer">Go 命令模式实战</a></p><p><a href="https://mp.weixin.qq.com/s/OHb8ODD8x43pCBZVTfmA1Q" target="_blank" rel="noopener noreferrer">看了Kuberentes源码后，得到的 Golang 工程化实践</a></p><p><a href="https://mp.weixin.qq.com/s/cPLozuxxGOZbwsGUxFdoFw" target="_blank" rel="noopener noreferrer">Go 实现双buffer id生成器</a></p><p><a href="https://mp.weixin.qq.com/s/maaE3R7S-pfPgEHk3-BlyA" target="_blank" rel="noopener noreferrer">Go夜读第 153 期：chDB: In-Process ClickHouse引擎</a></p><p><a href="https://mp.weixin.qq.com/s/Y6XBCh6dhKvnbN03B5QB0Q" target="_blank" rel="noopener noreferrer">Gopher的Rust第一课：第一个Rust程序</a></p><p><a href="https://mp.weixin.qq.com/s/mRLIGYqq_R9G4G-FGdvWlg" target="_blank" rel="noopener noreferrer">还在为 Go 中繁琐 if-else 逻辑的烦恼? 那就用 vowlink 来解决</a></p><p><a href="https://mp.weixin.qq.com/s/_IpkHrU0w4ATtMat68Rknw" target="_blank" rel="noopener noreferrer">把Redis当作队列来用，真的合适吗</a></p><p><a href="https://mp.weixin.qq.com/s/mtyaQLiaf8Lhye18QSBwIg" target="_blank" rel="noopener noreferrer">容器网络原理</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/aYwBOnC2Q3DRLtngiMzSTA" target="_blank" rel="noopener noreferrer">SpringBoot+Redis+定时任务模拟手机短信验证</a></p><p><a href="https://mp.weixin.qq.com/s/Kt-m7nvWdtLAUV-lMnu95A" target="_blank" rel="noopener noreferrer">专栏：通过node-exporter源码掌握机器监控指标</a></p><p><a href="https://mp.weixin.qq.com/s/EQeRqt9kP33V0AYRPhk0_A" target="_blank" rel="noopener noreferrer">SpringBoot+Spring WebFlux响应式开发，实现打字效果</a></p><p><a href="https://mp.weixin.qq.com/s/XoyXeVZs66udzhxakXVTjw" target="_blank" rel="noopener noreferrer">向上管理：给我惊喜，而不是问题！</a></p><p><a href="https://mp.weixin.qq.com/s/8i3D-ppX5lYxpLO34L2eVw" target="_blank" rel="noopener noreferrer">这些年背过的面试题——领域模型落地篇</a></p><p><a href="https://mp.weixin.qq.com/s/RkGnDwjvLiBVFUXsu89U5g" target="_blank" rel="noopener noreferrer">SRE 排障利器，接口请求超时试试 httpstat</a></p><p><a href="https://mp.weixin.qq.com/s/06eND-fUGQ7Y6gwJxmvwQQ" target="_blank" rel="noopener noreferrer">不来看一看HTML请求后端性能优化的实战总结吗</a></p><p><a href="https://mp.weixin.qq.com/s/4APCJVcxyiKj5Xe4ns2PVw" target="_blank" rel="noopener noreferrer">管理者的进阶之路：正确的评价</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/AF-G4ZcfKO6stiZil5lS0A" target="_blank" rel="noopener noreferrer">一网打尽 Rust 语法</a></p><p><a href="https://mp.weixin.qq.com/s/_bcZOmLVgH9Ea4Iu0tcorw" target="_blank" rel="noopener noreferrer">Vite 热更新(HMR)原理了解一下</a></p><p><a href="https://mp.weixin.qq.com/s/X6ZMokNSAsBpqdiE17BFrA" target="_blank" rel="noopener noreferrer">老师又来活了，用coze快速搭建一个读书机器人</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5月26日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月26日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月26日内容汇总"/>
        <updated>2024-05-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/8UG_NKD4F7xW6QeU76x4sA" target="_blank" rel="noopener noreferrer">《训练你自己的多模态大模型》</a>。作者介绍了如何根据官方教程训练LLaVA v1.5多模态模型。文章首先说明训练包括特征对齐阶段和视觉指令微调阶段。特征对齐阶段训练MLP连接器，使用LAION-CC-SBU数据集的558K子集；视觉指令微调阶段则通过GPT-4生成的150K条数据及515K条VQA数据进行训练。作者详细描述了数据准备和下载过程，并提供了各阶段训练脚本以及所需资源。文章为研究者和开发者提供了完整的操作指南，帮助实现多模态模型的自主训练。</p><p><a href="https://mp.weixin.qq.com/s/f-_GOiwbXOvsE-UzSh0lSg" target="_blank" rel="noopener noreferrer">《Anthropic | 数百万个特征，带你深入理解大模型的「思维」!》</a>。本文作者介绍了Anthropic在理解大模型内部运作机制方面的最新进展。团队通过在Claude Sonnet模型中提取数百万个特征，揭示了GPT等AI模型的内部表征。这些特征涉及人物、地点、科学概念和情感等，展示了模型的复杂思维过程。研究还发现了特定欺诈和偏见特征，提出了可能的安全性改进方法。这项工作为AI可解释性和安全性研究提供了重要见解和前景。</p><p><a href="https://mp.weixin.qq.com/s/pfSc3Rr8BBo0Lwa2Kb_rzw" target="_blank" rel="noopener noreferrer">《麻省理工(MIT) | 提出跨层Attention，减少Transformer大模型键值(KV)缓存，加快LLM推理!》</a>。本文作者介绍了一种新的Attention设计方法——跨层注意力（Cross-Layer Attention, CLA），用于减少Transformer大模型的键值（KV）缓存。CLA通过在不同层之间共享KV头，显著削减KV缓存大小，与现有方法相比在保证准确性的同时将KV缓存大小缩小了2倍。作者详细分析了CLA与多头注意力（MHA）、多查询注意力（MQA）和分组查询注意力（GQA）的对比，展示了实验结果和在关键指标上的影响，证明了CLA在降低内存占用和解码延迟方面的有效性。文章为优化大模型推理性能提供了新思路。</p><p><a href="https://mp.weixin.qq.com/s/4RH6C-M7zzd_6-34lhMwfQ" target="_blank" rel="noopener noreferrer">《用 Coze(扣子) 打造 "最强" 浏览器书签助手(上)》</a>。作者细讲解了如何利用Coze平台构建一个功能强大的浏览器书签助手。文章首先介绍了Coze新功能的速览，包括多Agents模式、记忆-变量、记忆-长期记忆等。接着，作者逐步展示了文件上传、书签提取、数据清洗、简单分类、生成书签文件以及AI书签检索的具体操作步骤，并结合实际代码示例进行说明。整篇文章为开发者提供了一个完整的实现路径，帮助实现书签管理自动化。</p><p><a href="https://mp.weixin.qq.com/s/PADxs5gW5AQU8dAsHXJhQw" target="_blank" rel="noopener noreferrer">《手把手拆解:从零实现Llama3大模型(Python)》</a>。本文参考Meta发布的开源LLama3系列模型，由开发者Nishant Aklecha详细介绍如何从零开始实现Llama3模型，包括跨多个头的注意力矩阵乘法、位置编码和每个层的细节解析。教程包括特征对齐（使用Andrej Karpathy的分词器实现）和神经网络训练、注意力机制实现、嵌入归一化步骤，并提供了训练脚本和所需资源下载链接。作者逐步拆解了从模型加载到生成Token的过程，为开发者们提供了具体实现路径和参考。项目在GitHub上开源并获得了大量关注，有助于提高对大模型的理解和应用。</p><p><a href="https://mp.weixin.qq.com/s/95CUl1bGN-fSvmAbH0O-DA" target="_blank" rel="noopener noreferrer">《大模型精度(FP16，FP32，BF16)详解与实践》</a>。本文作者王明对三种浮点数精度类型——FP16、FP32和BF16进行了详细介绍，解释了其表示方法及计算过程。文章通过对比这三种精度在机器学习模型训练中的表现，分析各自的优劣，FP16具备较高计算效率，FP32精度更高，BF16在兼顾精度和计算效率方面表现出色。文中还提供了具体的实践代码，帮助读者更好地理解不同精度浮点数的实际应用。</p><p><a href="https://mp.weixin.qq.com/s/T5efQNYfd0807mBcO9lgEg" target="_blank" rel="noopener noreferrer">《模型调优(RLHF/DPO/ORPO)终极指南》</a>。本文由张伟撰写，详细解读了三种模型调优方法：RLHF（基于人类反馈的强化学习），DPO（直接偏好优化）和ORPO（优势比偏好优化）。文章全面剖析了各方法的优缺点及其在训练效率和计算性能上的差异，RLHF复杂且资源密集，DPO通过解析映射提高效率，而ORPO则通过调整损失函数直接优化偏好，减少计算负担，适合资源有限的情况。</p><p><a href="https://mp.weixin.qq.com/s/3C4OuqPLUp7_psReAMhIOQ" target="_blank" rel="noopener noreferrer">《今日arXiv最热大模型论文: Agent也疯狂! FoA方法对智能体做树结构搜索，超越ToT》</a>。这篇文章介绍了由最新论文提出的“Fleet of Agents”（FoA）框架，通过将遗传粒子过滤概念应用于动态树搜索，有效解决了传统树搜索算法在不确定环境中的局限性。FoA通过独立agents的多步探索和重采样优化，实现了对24点游戏和小型填字游戏的显著性能提升和成本降低，较Tree of Thoughts (ToT)更具优势。</p><p><a href="https://mp.weixin.qq.com/s/srdS8qltf8r9pAEgqKPoVg" target="_blank" rel="noopener noreferrer">《GPT模型的前世今生》</a>。李媛媛撰写的这篇文章详细介绍了GPT模型的概念、架构及进化历程。文章逐步讲解了GPT-1至GPT-4各版本的改进优化，并讨论了其在自然语言处理中的应用，尤其是多模态处理能力的提升。此外，文章探讨了GPT模型的核心技术，包括Transformer架构、自注意力机制和残差连接等，以及未来可能发布的GPT-5的特性展望。总结了GPT系列在人工智能领域的重大影响及其应用前景。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://juejin.cn/post/7371239685701730342" target="_blank" rel="noopener noreferrer">Rust 大项目结构如何组织？参考官方标准，给你最清晰的回答</a></p><p><a href="https://juejin.cn/post/7281601361985241088" target="_blank" rel="noopener noreferrer">基于go语言gin框架的web项目骨架</a></p><p><a href="https://juejin.cn/post/7334103408196927529" target="_blank" rel="noopener noreferrer">Rust中打印语句为什么使用宏实现</a></p><p><a href="https://mp.weixin.qq.com/s/bAQg0pZXrG9gEcmT7JGZ9Q" target="_blank" rel="noopener noreferrer">从源码搞懂 kube-scheduler Pod绑定Node全流程</a></p><p><a href="https://mp.weixin.qq.com/s/BrkVDKXGYstQrCyeYG__Rw" target="_blank" rel="noopener noreferrer">Go Goroutine 究竟可以开多少</a></p><p><a href="https://mp.weixin.qq.com/s/NhfrDsk-54Se8ts6JMIWSw" target="_blank" rel="noopener noreferrer">Rust 练手项目—实现 MVCC 多版本并发控制</a></p><p><a href="https://mp.weixin.qq.com/s/AhD4t9DT_ecdG1MVJJMtwg" target="_blank" rel="noopener noreferrer">使用Rust捕获和解析网络包</a></p><p><a href="https://mp.weixin.qq.com/s/S23_NsOuGsDCfTJL_wniKw" target="_blank" rel="noopener noreferrer">xgo: 一款新鲜出炉的 Go 代码测试利器</a></p><p><a href="https://mp.weixin.qq.com/s/PBJAS-vbuYZfQuRrn3Roxw" target="_blank" rel="noopener noreferrer">Go 语言中 database/sql 是如何设计的</a></p><p><a href="https://mp.weixin.qq.com/s/SkVwege0EcLAegQFUw-81g" target="_blank" rel="noopener noreferrer">如何使用 database/sql 来操作数据库</a></p><p><a href="https://mp.weixin.qq.com/s/ZrYYMsuqrzWubh0zpIp17g" target="_blank" rel="noopener noreferrer">万字长文：Go 语言流行 ORM 框架 GORM 使用详解</a></p><p><a href="https://mp.weixin.qq.com/s/bztqsCEXGaiNiaEjz2lWoA" target="_blank" rel="noopener noreferrer">Skywalking通关指南</a></p><p><a href="https://mp.weixin.qq.com/s/Cy01y5Xs04OdyzeBOHnaRQ" target="_blank" rel="noopener noreferrer">弹性容器实例：基于 Argo Workflows 和 Serverless Kubernetes 搭建精细化用云工作流</a></p><p><a href="https://mp.weixin.qq.com/s/05IQZjcUKXM1i51p98oI0A" target="_blank" rel="noopener noreferrer">这30道K8S面试题你能答出来几个</a></p><p><a href="https://mp.weixin.qq.com/s/lE50bcosCyi-5P98QMwRVw" target="_blank" rel="noopener noreferrer">使用Go语言实现 pping</a></p><p><a href="https://mp.weixin.qq.com/s/2t1ABjI-2IL8DMaVinikGw" target="_blank" rel="noopener noreferrer">一文搞懂Kubernetes Service 网络</a></p><p><a href="https://www.bilibili.com/video/BV14U411o7ZU" target="_blank" rel="noopener noreferrer">Go 夜读第 152 期：从汇编角度理解 Go 语言</a></p><p><a href="https://mp.weixin.qq.com/s/dxBnBLbUKC9GTyi6NPDdTQ" target="_blank" rel="noopener noreferrer">Go团队：Go是什么</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/JchVvLMz2a0eQnzJs1oK-g" target="_blank" rel="noopener noreferrer">什么是MySQL锁？有哪些锁类型</a></p><p><a href="https://mp.weixin.qq.com/s/_DIWInIddfcsdggDCGOCyA" target="_blank" rel="noopener noreferrer">Jenkins Pipeline用户权限管理新技巧：打造安全高效的流水线！</a></p><p><a href="https://mp.weixin.qq.com/s/Wp6ErsgUKOYOjry7eRczEQ" target="_blank" rel="noopener noreferrer">这些年背过的面试题——架构设计篇</a></p><p><a href="https://mp.weixin.qq.com/s/oje7PLWHz_7bKWn8M72LUw" target="_blank" rel="noopener noreferrer">RocketMQ 是什么？它的架构是怎么样的？和 Kafka 又有什么区别</a></p><p><a href="https://mp.weixin.qq.com/s/Eluy6hc3jUHdZfdjEEJWpA" target="_blank" rel="noopener noreferrer">揭开管理的秘密：耗时半年精心打磨，一线管理者不可不读的终极指南！</a></p><p><a href="https://mp.weixin.qq.com/s/hC3TFKLFFEfC7Ietobkypw" target="_blank" rel="noopener noreferrer">10 亿级短 URL 生成方案，拿去可以直接重写短 URL 系统了</a></p><p><a href="https://mp.weixin.qq.com/s/xGYM0pXAHfaLMpTxBJvLBg" target="_blank" rel="noopener noreferrer">字节面试：百亿级存储，怎么设计？只是分库分表</a></p><p><a href="https://mp.weixin.qq.com/s/1puGCULSwfJdLD7onhrDtw" target="_blank" rel="noopener noreferrer">一个淘宝服务端工程师的年度总结</a></p><p><a href="https://mp.weixin.qq.com/s/gnjTj1Kw53iF_4Gr5RUxLQ" target="_blank" rel="noopener noreferrer">【视觉笔记】｜领导力21法则</a></p><p><a href="https://mp.weixin.qq.com/s/CFJWv0NLL97jhHvvveS5KQ" target="_blank" rel="noopener noreferrer">【消息队列】 一文搞懂 Kafka</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/7H6J9aH3pRHXD4nxEUwJaQ" target="_blank" rel="noopener noreferrer">node.js+AIGC：对输入的评论进行情感分析</a></p><p><a href="https://mp.weixin.qq.com/s/4MZhKf_p4JIHOmRqAf3AuQ" target="_blank" rel="noopener noreferrer">我使用coze做了一个云顶之弈助手，帮助我上分</a></p><p><a href="https://mp.weixin.qq.com/s/uP-n-AknzWSOZ95LGOdVfQ" target="_blank" rel="noopener noreferrer">autolog.js：一个小而美的toast插件</a></p><p><a href="https://mp.weixin.qq.com/s/o-h3JU7NRvgKGowaPpyK_A" target="_blank" rel="noopener noreferrer">VSCode深度配置 - settings.json</a></p><p><a href="https://mp.weixin.qq.com/s/VKtrNihMFGgo6RhlVgURXg" target="_blank" rel="noopener noreferrer">苦等三年，React Compiler 终于能用了</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5月19日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月19日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月19日内容汇总"/>
        <updated>2024-05-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/MZHYqwfFR0aA-hOdTSuyzQ" target="_blank" rel="noopener noreferrer">GPT-4o团队引发OpenAI组织创新热议！应届生领衔Sora，本科生带队GPT-1，经验职级都是浮云</a></p><p><a href="https://mp.weixin.qq.com/s/G5NXAr9-BOjUAY4nrfKROA" target="_blank" rel="noopener noreferrer">生成式AI原理技术详解（二）——高级神经网络</a></p><p><a href="https://mp.weixin.qq.com/s/Gi9Vme6khmy3UMhWnDjMrg" target="_blank" rel="noopener noreferrer">他们卷大模型，小模型交给我：千元实现多终端设备的视觉分类</a></p><p><a href="https://mp.weixin.qq.com/s/BV6afLLJNwtQeRd_9ZRWYw" target="_blank" rel="noopener noreferrer">达到1k stars后🥂，我对大模型开源教程的反思！</a></p><p><a href="https://mp.weixin.qq.com/s/VNWnf4tB7D0DF1GcP2mHGg" target="_blank" rel="noopener noreferrer">以 LLM 为基础的 Multi-Agent 系统解析</a></p><p><a href="https://mp.weixin.qq.com/s/YlYGXEFRIrVbs2yyT5lZZg" target="_blank" rel="noopener noreferrer">GPT-4o炸裂玩法大赏！选股效率爆炸、创造新物种、暴打广告设计、金牌作业辅导...</a></p><p><a href="https://mp.weixin.qq.com/s/cAeLgg46Wq81rhgsJp0l4Q" target="_blank" rel="noopener noreferrer">GPT-4o深夜炸场！AI实时视频通话丝滑如人类，Plus功能免费可用，奥特曼：《她》来了</a></p><p><a href="https://mp.weixin.qq.com/s/PfWnlhXh3n3VDfZaMI-ifQ" target="_blank" rel="noopener noreferrer">OpenAI颠覆世界：GPT-4o完全免费，实时语音视频交互震撼全场，直接进入科幻时代</a></p><p><a href="https://mp.weixin.qq.com/s/NPcCHlLjBZeUiAhQOHX5qA" target="_blank" rel="noopener noreferrer">快速提升性能，如何更好地使用GPU（下）</a></p><p><a href="https://mp.weixin.qq.com/s/h8z4eXsemPMeL2oI_8VnvQ" target="_blank" rel="noopener noreferrer">一文看懂RAG的各种套路 | 综述：当RAG遇到大语言模型</a></p><p><a href="https://mp.weixin.qq.com/s/3wD-0dCgXB646r720o8JAg" target="_blank" rel="noopener noreferrer">零一万物Yi-1.5系列模型发布并开源！ 34B/9B/6B 多尺寸，魔搭社区推理微调最佳实践教程来啦！</a></p><p><a href="https://mp.weixin.qq.com/s/ew7z9zgYHEngTwtYohPUkg" target="_blank" rel="noopener noreferrer">从头预训练一只超迷你 LLaMA 3——复现 Tiny Stories</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/d4n_8MpDi6azlIditkRmkQ" target="_blank" rel="noopener noreferrer">看了Kubernetes源码后，我更喜欢写Golang的单元测试了</a></p><p><a href="https://mp.weixin.qq.com/s/CsrEA7Mkw4B7m8Hhgb-wfQ" target="_blank" rel="noopener noreferrer">Go实战 | 《微服务实战gin+grpc：项目管理/协同系统》</a></p><p><a href="https://mp.weixin.qq.com/s/gUignWHIUy--8Ap0VC_5Iw" target="_blank" rel="noopener noreferrer">如果有 AI 加持，go 的这个问题会避免吗</a></p><p><a href="https://mp.weixin.qq.com/s/8nOFjKJ9lnZDQh3zc-N0AA" target="_blank" rel="noopener noreferrer">Golang 中的 Base64 编解码</a></p><p><a href="https://mp.weixin.qq.com/s/WRCvHETs_eWZcNek0GMrPA" target="_blank" rel="noopener noreferrer">让研发规范管得住 - 我们为什么在流水线之上又做了研发流程</a></p><p><a href="https://mp.weixin.qq.com/s/V32txuNHraazDlD1F9w9Jg" target="_blank" rel="noopener noreferrer">Go module 目录为什么带 ! 感叹号？</a></p><p><a href="https://mp.weixin.qq.com/s/oUpHl74zkMha_Syw9-uZBw" target="_blank" rel="noopener noreferrer">使用 OpenTelemetry 实现 Golang 服务的可观测系统</a></p><p><a href="https://mp.weixin.qq.com/s/2Wq4Kb2fw1RLhUIAfByWaA" target="_blank" rel="noopener noreferrer">Go-Zero定义API实战：探索API语法规范与最佳实践（五）</a></p><p><a href="https://mp.weixin.qq.com/s/XpnPzbCQ7gdwWzvT9lAj9g" target="_blank" rel="noopener noreferrer">KubeBlocks - 云原生数据库基础设施（值得拥有）</a></p><p><a href="https://mp.weixin.qq.com/s/sOjUSvIM5IO-n0wL5KuIrQ" target="_blank" rel="noopener noreferrer">pping: 被动式ping，计算网络时延</a></p><p><a href="https://mp.weixin.qq.com/s/z0aJ2-1fbaxpOjqAySQmMQ" target="_blank" rel="noopener noreferrer">Go 夜读第 151 期：xgo: 基于编译期代码重写实现 Mock 和 Trace</a></p><p><a href="https://mp.weixin.qq.com/s/2NxC4oO_4KpsMAf9dpayFg" target="_blank" rel="noopener noreferrer">基于Pingora实现k8s的网关，代码实战（一）</a></p><p><a href="https://mp.weixin.qq.com/s/7LgEB79u6orPmW-44KSBpg" target="_blank" rel="noopener noreferrer">Go 事件驱动编程：实现一个简单的事件总线</a></p><p><a href="https://mp.weixin.qq.com/s/LlXnachkw8H9I_SAYA23gg" target="_blank" rel="noopener noreferrer">Kubernetes 最佳实践之解决容器内时区不一致问题</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/S-oAZ4qaN8qLbLBndpiK-w" target="_blank" rel="noopener noreferrer">Spring Boot+Groovy 魔法轻松实现动态编程！</a></p><p><a href="https://mp.weixin.qq.com/s/zVvRfhJVOzhgalNADq7GFw" target="_blank" rel="noopener noreferrer">Kafka 消息堆积四连击：一些优化技巧</a></p><p><a href="https://mp.weixin.qq.com/s/ZALPGbsvYpKv66POZ4V6dw" target="_blank" rel="noopener noreferrer">这些年背过的面试题——个人项目篇</a></p><p><a href="https://mp.weixin.qq.com/s/OT6LuwX1XyQ0n8P_FMzS-g" target="_blank" rel="noopener noreferrer">DDD面试题：什么是领域驱动设计？什么是贫血模型？什么是充血模型？（大厂面烂了）</a></p><p><a href="https://mp.weixin.qq.com/s/AkxNqWFUoLEpJ5BDXIyxSw" target="_blank" rel="noopener noreferrer">高并发架构的三板斧，你也可以成为架构师</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/ll6KS9fW9O_PZYmRHwuDnA" target="_blank" rel="noopener noreferrer">作为前端开发，感受下 nginx 带来的魅力！</a></p><p><a href="https://mp.weixin.qq.com/s/waFMJHdqlaYbZtBEJvafMQ" target="_blank" rel="noopener noreferrer">卡顿减少 95% — 记一次React性能优化实践（性能篇）</a></p><p><a href="https://juejin.cn/book/7347579913702293567" target="_blank" rel="noopener noreferrer">从前端到 AI：LangChain.js 入门和实战</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5月12日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月12日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月12日内容汇总"/>
        <updated>2024-05-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-2f72d482aa6c34ad128343ed7c112a1b.png" width="900" height="520" class="img_astN"></p><p>封面图：Google 发布 Go 1.22.3</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/LWK1wYBYzg0ZzWknN8Ho7ws" target="_blank" rel="noopener noreferrer">LLM2Vec介绍和将Llama 3转换为嵌入模型代码示例</a></p><p><a href="https://mp.weixin.qq.com/s/Ei7Izcbea0Rb7rlBYHsErQ" target="_blank" rel="noopener noreferrer">NPU推理&amp;微调大模型实战</a></p><p><a href="https://mp.weixin.qq.com/s/eIo58zomUsYCHh_9iNDXRA" target="_blank" rel="noopener noreferrer">幻方开源第二代MoE模型 DeepSeek-V2，魔搭社区推理、微调最佳实践教程</a></p><p><a href="https://mp.weixin.qq.com/s/PsYH9VTJz8Csms9u3APXXw" target="_blank" rel="noopener noreferrer">FactAgent：利用大语言模型 + Agent 自动化检测假新闻</a></p><p><a href="https://mp.weixin.qq.com/s/Zx8AmXXPGpAsiBhWhcBOSw" target="_blank" rel="noopener noreferrer">大模型训练中优化策略（数据并行、模型并行、ZeRO等）</a></p><p><a href="https://mp.weixin.qq.com/s/JnXU8wuyGyWgf7jjMtnFuw" target="_blank" rel="noopener noreferrer">HuggingFace烧钱做了一大批实验，揭示多模态大模型哪些trick真正有效</a></p><p><a href="https://mp.weixin.qq.com/s/x1ErPQq6TghL77uTG8YjvA" target="_blank" rel="noopener noreferrer">原作者带队，LSTM真杀回来了！</a></p><p><a href="https://mp.weixin.qq.com/s/flYoCOpiUOtTvnuWKAR_1g" target="_blank" rel="noopener noreferrer">单节点8xA800跑起来HuggingFace DeepSeek V2踩坑</a></p><p><a href="https://mp.weixin.qq.com/s/nzlI_wtRR2gUv5Dw-gN0sA" target="_blank" rel="noopener noreferrer">LSTM依然能打！最新xLSTM架构：怒超先进Transformer和状态空间模型（SSM）</a></p><p><a href="https://mp.weixin.qq.com/s/IaifBCxztQsVOgHK6q9CBA" target="_blank" rel="noopener noreferrer">Transformer要变Kansformer？用了几十年的MLP迎来挑战者KAN</a></p><p><a href="https://mp.weixin.qq.com/s/PR4fCky5a6geBdCbxsOURg" target="_blank" rel="noopener noreferrer">仅用250美元，Hugging Face技术主管手把手教你微调Llama 3</a></p><p><a href="https://mp.weixin.qq.com/s/ODzNQd0-qr5f6AK2m7MDFg" target="_blank" rel="noopener noreferrer">解析 RLHF 微调三阶段</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/niddplVZmUrWP7d6iM2TgQ" target="_blank" rel="noopener noreferrer">sqlx: 一个优秀的rust异步SQL库</a></p><p><a href="https://mp.weixin.qq.com/s/M0zmNScbnRy0o_Ix8LIqzA" target="_blank" rel="noopener noreferrer">Gopher的Rust第一课：建立Rust开发环境</a></p><p><a href="https://mp.weixin.qq.com/s/DE2DVH2E9WyQpyJSuUePJg" target="_blank" rel="noopener noreferrer">Golang 实现枚举的多种方式及最佳实践</a></p><p><a href="https://mp.weixin.qq.com/s/YPPh4OB2_ZBkLylWXhn9cg" target="_blank" rel="noopener noreferrer">Go1.0 到 1.22 的性能表现，提高了多少倍</a></p><p><a href="https://mp.weixin.qq.com/s/EV-c6Ytuo9dJo0b_TAxt2Q" target="_blank" rel="noopener noreferrer">sqlx: 功能强大的数据库访问库</a></p><p><a href="https://mp.weixin.qq.com/s/unGVUk-02RiQfoNnytBveA" target="_blank" rel="noopener noreferrer">测试 Rust 的 IO性能</a></p><p><a href="https://mp.weixin.qq.com/s/6F8Q47wX27IfOBSfH0r9aA" target="_blank" rel="noopener noreferrer">Go 未来方向：标准库 v2 改进的指导原则</a></p><p><a href="https://mp.weixin.qq.com/s/wXXnnRrKA2b3FQuWtr7MMA" target="_blank" rel="noopener noreferrer">使用Ollama和Go基于文本嵌入模型实现文本向量化</a></p><p><a href="https://mp.weixin.qq.com/s/3zacqN5bjNIccLNuWJN-UA" target="_blank" rel="noopener noreferrer">重复了很多次，我终于不再忍了...</a></p><p><a href="https://mp.weixin.qq.com/s/He70jVP-7bBH27jIPaXCfw" target="_blank" rel="noopener noreferrer">同一时间：Apple 发布 M4，Google 发布 Go 1.22.3</a></p><p><a href="https://mp.weixin.qq.com/s/YwEEhdD5mlprS84c46Fyxw" target="_blank" rel="noopener noreferrer">5种容器内指定特定域名解析结果的方式</a></p><p><a href="https://mp.weixin.qq.com/s/1EDZWwrH9CmNCvCq0GnuEg" target="_blank" rel="noopener noreferrer">从零到一实现有趣的时间轮算法，你会了吗!</a></p><p><a href="https://mp.weixin.qq.com/s/EjWQpzNHyS6ChZJis68YwQ" target="_blank" rel="noopener noreferrer">Go 中间件的优雅实现：处理请求的艺术</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/52iS3RxIO_to29IG_JoOpw" target="_blank" rel="noopener noreferrer">大白话聊聊Netty</a></p><p><a href="https://mp.weixin.qq.com/s/IEzcsHn6SaoS96F1gTKcJQ" target="_blank" rel="noopener noreferrer">这些年背过的面试题——实战算法篇</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/lQxpjuYlpjjMmKFr9x4ebw" target="_blank" rel="noopener noreferrer">我可以写代码写到退休吗？记录我的10年前端技术之旅</a></p><p><a href="https://mp.weixin.qq.com/s/r7OnzRGAzZ07i4xdWng0zA" target="_blank" rel="noopener noreferrer">【Milvus&amp;向量搜索】在长文本搜索场景下的探索</a></p><p><a href="https://mp.weixin.qq.com/s/WAkPVXI-Q0GgoZokMPz6jA" target="_blank" rel="noopener noreferrer">云音乐桌面端 3.0 改版前端性能优化之旅</a></p><p><a href="https://mp.weixin.qq.com/s/8KxnyN6IIcGd-8c28oclug" target="_blank" rel="noopener noreferrer">写了一个妖 hook 也许解决了 React 状态控制的一个痛点</a></p><p><a href="https://mp.weixin.qq.com/s/1gAY94h4QpS5WLrMzLvAkw" target="_blank" rel="noopener noreferrer">深入浅出 Vite5 中依赖预构建</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5月5日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月5日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/5月5日内容汇总"/>
        <updated>2024-05-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/IRgQC21hx80cSD_B1DXo6Q" target="_blank" rel="noopener noreferrer">《人工智能机器学习算法总结--3.神经网络算法(前向及反向传播)》</a>。本文深入解析了神经网络算法的基础概念、核心原理及其在各领域的应用意义。文章首先介绍了神经网络的定义、意义及优缺点，详细说明了其模拟人类大脑神经元连接方式的原理和神经网络处理复杂数据的能力。随后，以一个识别手写数字的实例详细介绍了神经网络算法的实施过程，包括数据准备、模型架构选择、参数初始化、前向传播、损失函数计算、反向传播、参数优化、模型评估和调参优化等步骤。此外，还探讨了神经网络的训练过程中的某些关键技术，如正则化、激活函数、梯度下降以及梯度检查，旨在提供一份全面而深入的神经网络算法指南。</p><p><a href="https://juejin.cn/post/7361253974051602441" target="_blank" rel="noopener noreferrer">《LLM 安全 | 大语言模型应用安全入门》</a>。本文由无恒实验室撰写，系统地介绍了大型语言模型（LLM）的基础知识、工作原理、训练过程以及面临的挑战和安全问题。文章首先概述了 LLM 的兴起背景和应用领域，随后深入解释了模型如何通过词向量和 Transformer 架构处理和生成文本数据。文章还详细讨论了 GPT 模型的预训练和微调过程，解析了模型在训练数据、生成可靠输出方面的挑战，并探讨了模型幻觉、逆转诅咒和遗忘中间等已知缺陷。此外，还对 LLM 的应用安全风险进行了分析，包括提示词注入和越狱行为，以及如何通过监管和技术手段降低这些风险。文章的核心在于强调了对于 LLM 安全性的关注，以及在技术进步与安全防护之间寻求平衡的重要性。</p><p><a href="https://mp.weixin.qq.com/s/UFMxQB9sUC5I0y86nfzKjw" target="_blank" rel="noopener noreferrer">《谈谈我对 AIGC 趋势下软件工程重塑的理解》</a>。本文探讨了 AIGC 趋势对软件工程领域产生的影响以及软件研发智能化的实践策略。文章首先指出，AI 已成为软件研发的必选项，特别是在代码生成和逻辑推理方面的应用，如 GitHub Copilot 等工具已极大提高了开发效率。随后，文章分析了软件研发面临的挑战和智能化带来的机遇，重点讨论了企业落地智能化研发的策略与路径，包括初步引入、长期效率提升及全链路智能化升级三个阶段。最后，提出了落地软件研发智能化工具的具体实例和建议，强调在大模型时代，软件研发流程和范式将发生颠覆性变化，AI将在提高个体效率、优化协作、改善开发体验和提升数字资产管理等方面扮演关键角色。</p><p><a href="https://mp.weixin.qq.com/s/zwigN1hXa6SeXCdLjXwwYQ" target="_blank" rel="noopener noreferrer">《神秘模型gpt2-chatbot实力被赞超越GPT-4: sam亲自确认，或是OpenAI全新模型》</a>。本文讨论了一个名为gpt2-chatbot的新型AI模型，它在特定能力上展现出了超越GPT-4的潜力。模型在ASCII图像处理能力上尤为突出，有猜测它可能是OpenAI即将发布的GPT-4.5或全新AI系统。OpenAI的sam altman已经确认了对GPT2的支持，但模型的具体定位尚不清楚。一些推测认为gpt2-chatbot可能是四年前GPT-2模型的进阶版，这表明GPT-2的预训练质量至今仍然领先。尽管有些用户报告相似的弱点，但gpt2-chatbot的独特之处在于它的长处和改进潜力，引发了关于其身份和OpenAI未来产品的广泛讨论和期待。</p><p><a href="https://mp.weixin.qq.com/s/lmEtzutVawQ1EB4BWsVcag" target="_blank" rel="noopener noreferrer">《白话NLP技术的演进发展》</a>。本文详尽介绍了自然语言处理（NLP）技术的发展历程和核心技术，从最初的one-hot encoding到word2vec等词嵌入技术的提出，以及深度学习技术如RNN、LSTM、Transformer等序列模型的应用。文中还讨论了预训练语言模型如BERT、GPT系列的革命性影响，以及大模型如GPT-3和LLaMA带来的NLP技术和应用的飞跃。这些模型不仅极大地提高了机器理解和生成自然语言的能力，而且推动了人机交互、知识获取、内容创作、编程辅助等多个领域的创新。同时，文章也提出了大模型存在的局限和潜在风险，展望了NLP的未来发展方向。</p><p><a href="https://mp.weixin.qq.com/s/5IxWr8Mbq_oTx8b1J5avMQ" target="_blank" rel="noopener noreferrer">《大模型炼丹经验:大Batch训练LLM探索，及如何与RL一起变化?》</a>。这篇文章详细分析了大规模语言模型（Large Language Models, LLMs）在大Batch训练中的效率和学习率（LR）的调整问题。文章指出提高数据并行度并不总能提高训练效率，尤其是当Batch大小过大时。它进一步讨论了OpenAI如何使用梯度噪声尺度与Batch大小和LR之间的关系设置最优Batch大小，并指出这种设置与模型大小、任务类型关系不大但与LR的设定方式关系密切。还观察到当Batch大小达到一定临界值时，模型性能可能会受到Batch增大的负面影响。此外，文章引用了OpenAI和Google的研究，提示存在一个数据并行的临界点，至关重要的是找到这个点以平衡训练效率和模型质量，并探讨了批大小与学习率的实验结论，提供了未来大模型训练的洞见。</p><p><a href="https://mp.weixin.qq.com/s/T2pQ3acodCihvAkx0hi3rQ" target="_blank" rel="noopener noreferrer">《社区供稿 | 中文llama3模型哪家强?llama3汉化版微调模型大比拼》</a>。文章对比了几款流行的汉化版llama3大语言模型的性能。在多个基准上进行了测试，包括英文知识推理(ARC)、中文学科考试(C-Eval)、数理逻辑(GSM8K)。结果显示，各个模型在英文数据集上的“遗忘”程度不一。中文版模型在C-Eval上的表现轻微下降，而在英文数理逻辑测试中表现下降更明显。其中, Llama3-Chinese-8B-Instruct-Agent-v1在增强中文Agent能力方面有所提升。此外，使用AlignBench对其多维度中文对齐性能进行了评估，得出不同程度中文能力下降的结论，暗示数据覆盖、配比以及训练参数设置等方面仍需改进。</p><p><a href="https://mp.weixin.qq.com/s/_j7z7k3w84BVoq3VBGgV8Q" target="_blank" rel="noopener noreferrer">《精通 RAG:如何构建企业 RAG 系统》</a>。本文提供了构建企业级RAG系统的全面指南，概述了常见故障点和最佳构建实践。作者分析了身份验证的重要性，输入护栏避免有害输入，查询重写器提高查询质量等关键组件。还探讨了选择文本编码器、处理文档摄取、文档索引和数据存储的因素，以及如何实现高效语义搜索。此外，介绍了提高检索效率、监控系统表现、利用缓存降低成本和多租户实现数据隔离等高级技术。文章强调了系统监控、反馈循环的重要性以及持续优化系统性能的方法。</p><p><a href="https://mp.weixin.qq.com/s/2RkA2GTl8akv4VwSp3OyeQ" target="_blank" rel="noopener noreferrer">《有了Chain of Thought Prompting，大模型能做逻辑推理吗?》</a>。文章探讨了Chain of Thought (CoT) Prompting对提升大型语言模型在逻辑推理任务上的表现。CoT通过在提示中加入解题的中间步骤，而不仅仅是终极答案，从而帮助模型更好地理解和执行复杂的逻辑推理任务。文章通过数学题、常识推理等例子展示了CoT的有效性，同时引入了Zero-shot CoT，即在零样本情况下通过增加步骤解释来提高模型推理能力，并通过实验结果显示出显著的改善。此外，还讨论了Least-to-Most Prompting，它进一步将复杂问题分解成一系列简单问题，通过逐步解决这些简单问题来解决原始的复杂问题，显著提升了模型处理复杂逻辑推理任务的能力。文章证明了CoT和相关方法在促使大型语言模型执行复杂逻辑推理方面的潜力。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://go.dev/blog/chacha8rand" target="_blank" rel="noopener noreferrer">《Secure Randomness in Go 1.22》</a>。Go 1.22 版本通过在 <code>math/rand</code> 包中引入基于密码学的随机数生成源，实现了统计随机性与密码学随机性的更紧密结合。这一改进显著提高了随机数的质量，并减少了当开发者错误使用 <code>math/rand</code> 替代 <code>crypto/rand</code> 时可能带来的安全风险。文章详细地比较了统计随机性和密码学随机性，并介绍了新的随机数生成器——ChaCha8Rand，该生成器在继承了ChaCha流密码的基础上做了轻量级修改，提供了更加安全、高效的随机数生成能力。此外，Go 1.22 还优化了随机数生成器的性能，尽管相比旧版本和PCG生成器有所减慢，但提升的安全性值得这种牺牲。这一改进无需代码更改，即可让Go程序更加安全。</p><p><a href="https://go.dev/blog/randv2" target="_blank" rel="noopener noreferrer">《Evolving the Go Standard Library with math/rand/v2》</a>。Go 语言团队在 Go 1.22 中新增了一个 <code>math/rand/v2</code> 包，这是 Go 标准库中第一次出现采用带版本号路径的方式进行兼容性更新的实例。新版本的包重写了随机数生成器的 API，包括使用全新的生成器算法 PCG 和 ChaCha8 替换原有 Go 1 生成器，并引入了一些 API 断点变更来修复 <code>math/rand</code> 中历史上的问题。文章详述了更新的具体动机，并反思了未来包版本迭代将遵循的一般原则。这些原则包括：使用带版本号的导入路径以允许旧新版本的共存，尊重现有用户及其用法，尽可能避免不必要的变动，以及确保不会遗弃旧版本的用户。通过这些更新，Go 团队期望为今后对标准库的升级树立标杆并确立持续改进的原则。</p><p><a href="https://mp.weixin.qq.com/s/s60J4eA_d0hqrXj-XMPpXA" target="_blank" rel="noopener noreferrer">Go未用代码消除与可执行文件瘦身</a></p><p><a href="https://mp.weixin.qq.com/s/GD95hqKcHY-ynAa42jxmSA" target="_blank" rel="noopener noreferrer">Rust Tokio 任务取消模式</a></p><p><a href="https://mp.weixin.qq.com/s/_Qi5aPjdxdYLWjKXemCLzQ" target="_blank" rel="noopener noreferrer">LangChainGo + Ollama, OpenAI, Mistral 快速构建大模型应用</a></p><p><a href="https://juejin.cn/post/7363235196144074803" target="_blank" rel="noopener noreferrer">看了Kubernetes源码后，我更喜欢写Golang的单元测试了</a></p><p><a href="https://juejin.cn/post/7302308334202863653" target="_blank" rel="noopener noreferrer">Rust：新特性GAT，允许使用泛型的关联类型</a></p><p><a href="https://mp.weixin.qq.com/s/Kpz9pRVgk_-2Chx6GvS_0A" target="_blank" rel="noopener noreferrer">太优雅了！Rust 200 行代码实现表达式解析</a></p><p><a href="https://mp.weixin.qq.com/s/TlYXFXid5JVxUNAWsugnwQ" target="_blank" rel="noopener noreferrer">Go Heap Profile 怎么了</a></p><p><a href="https://mp.weixin.qq.com/s/IOe036O20y7OW9cSeL-5UQ" target="_blank" rel="noopener noreferrer">Google 孵化了 3 个 Go 安全库，推荐使用！</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/VKccZmx9Gd6RgsyDEBbBQA" target="_blank" rel="noopener noreferrer">我在淘宝写SQL｜ODPS SQL 优化总结</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/msRPuhYlPrjZJonJj5-mpQ" target="_blank" rel="noopener noreferrer">没有前端能抵抗住的酷炫效果，带你用Three.js Shader一步步实现</a></p><p><a href="https://mp.weixin.qq.com/s/56a_mZbFRXKtecywlwwb2Q" target="_blank" rel="noopener noreferrer">TypeScript 5.5 beta 发布：类型守卫推导、控制流分析优化、独立类型声明等</a></p><p><a href="https://mp.weixin.qq.com/s/Qu7jiQp9HPkyTy85EGYdMQ" target="_blank" rel="noopener noreferrer">Rspack 作者揭秘，你的 Tree Shaking 真的起作用了吗</a></p><p><a href="https://deno.com/blog/jsr-is-not-another-package-manager" target="_blank" rel="noopener noreferrer">JSR Is Not Another Package Manager</a></p><p><a href="https://mp.weixin.qq.com/s/un0VywUZOMMVlnT-nlDlqQ" target="_blank" rel="noopener noreferrer">灵魂画手有救了！字节开放模型 Hyper-SD，最快 1 步生成 SOTA 级图片（有demo 来试试</a></p><p><a href="https://juejin.cn/post/7327107254603759643" target="_blank" rel="noopener noreferrer">这些年做管理的一些感悟</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[4月28日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月28日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月28日内容汇总"/>
        <updated>2024-04-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/IvIpgX8z_9A-iOifxFUb8w" target="_blank" rel="noopener noreferrer">揭秘Continually Pretrain技巧，让你的chinese llama3模型更上一层楼</a></p><p><a href="https://mp.weixin.qq.com/s/pgvt5m4JnpX3kCkVI_wK8g" target="_blank" rel="noopener noreferrer">Phi-3：小模型，大未来！（附魔搭社区推理、微调实战教程）</a></p><p><a href="https://mp.weixin.qq.com/s/wjDfKPMzrfIuU6B18KGhbQ" target="_blank" rel="noopener noreferrer">图解MoE是什么，以及大模型为什么需要</a></p><p><a href="https://juejin.cn/post/7360623543920558089" target="_blank" rel="noopener noreferrer">【Milvus&amp;向量搜索】落地文档搜索业务的探索</a></p><p><a href="https://mp.weixin.qq.com/s/wwuayFtqWuy0ByEe4HVf8w" target="_blank" rel="noopener noreferrer">LLM能否依据角色的过去预测未来？一篇有趣的研究</a></p><p><a href="https://mp.weixin.qq.com/s/W5Js774sYqi6LW3_d70PEw" target="_blank" rel="noopener noreferrer">微软 &amp; 清华 | 提出LoRAs专家混合方法：MOLE，可动态、高效地组合多个LoRA！</a></p><p><a href="https://mp.weixin.qq.com/s/QJgqM4YT685H5SuhILMuHQ" target="_blank" rel="noopener noreferrer">使用 Dify 和 Moonshot API 做一个懒人 AI 阅读工具（二）：轻量 RAG 应用</a></p><p><a href="https://mp.weixin.qq.com/s/9Bmg-VFI94dB2o4tGw9msQ" target="_blank" rel="noopener noreferrer">使用 Dify 和 Moonshot API 构建你的 AI 工作流（一）：让不 AI 的应用 AI 化</a></p><p><a href="https://mp.weixin.qq.com/s/eU-CrV6NqhVFweiClFmdbA" target="_blank" rel="noopener noreferrer">大模型很厉害，但也有搞不定的事儿</a></p><p><a href="https://mp.weixin.qq.com/s/hKJLutqn9uYdBtSliLhppw" target="_blank" rel="noopener noreferrer">摆脱CUDA，用垃圾显卡训练pytorch搭建的神经网络</a></p><p><a href="https://mp.weixin.qq.com/s/jxakiIGX490DxZHk1Lb9Kg" target="_blank" rel="noopener noreferrer">一文看全提示工程有哪些套路</a></p><p><a href="https://mp.weixin.qq.com/s/KNTqfOGqx8ro0XsZppYYwA" target="_blank" rel="noopener noreferrer">RAG开山之作：结合参数化与非参数化记忆的知识密集型NLP任务新解法</a></p><p><a href="https://mp.weixin.qq.com/s/P-LUBoVg-VhVoL62rJXY0Q" target="_blank" rel="noopener noreferrer">大语言模型对齐的四种方法！</a></p><p><a href="https://mp.weixin.qq.com/s/II_6lb9KjKOmz-DIgnaz7g" target="_blank" rel="noopener noreferrer">LangChain 实战：Agent思维</a></p><p><a href="https://mp.weixin.qq.com/s/fsvgtS3stS1cfrIT78XBCA" target="_blank" rel="noopener noreferrer">开源大语言模型作为 LangChain 智能体</a></p><p><a href="https://mp.weixin.qq.com/s/dUj058iBzYm-J2vlS5DfNA" target="_blank" rel="noopener noreferrer">快速提升性能，如何更好地使用GPU（上）</a></p><p><a href="https://mp.weixin.qq.com/s/ilF5i2l7dl1hhI_jm5tffg" target="_blank" rel="noopener noreferrer">RAT：融合RAG和CoT的高效多步推理任务解决方案</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/KHeTALSGMNguIKw1YzwVKA" target="_blank" rel="noopener noreferrer">Go 1.22 的新增功能系列之二：reflect.TypeFor</a></p><p><a href="https://mp.weixin.qq.com/s/dLDUPDO_th3-3WTAII0_7w" target="_blank" rel="noopener noreferrer">Go 1.22 的新增功能系列之一：cmp.Or</a></p><p><a href="https://mp.weixin.qq.com/s/0klJo_on1e7cFVH0KVtTFg" target="_blank" rel="noopener noreferrer">《Go语言编程技巧》 1.0 发布了</a></p><p><a href="https://mp.weixin.qq.com/s/_p987Etj1xsLiowLU484Cw" target="_blank" rel="noopener noreferrer">Effective Rust: item4 首选常用的 Error 变体</a></p><p><a href="https://mp.weixin.qq.com/s/zPg5JkAJRhTpk7YhM8YmlQ" target="_blank" rel="noopener noreferrer">使用 GitHub Actions 构建 Golang PGO</a></p><p><a href="https://mp.weixin.qq.com/s/4XsLbHRq9lRDdQwb3j_m3Q" target="_blank" rel="noopener noreferrer">从零到生产：Go在Google的历程</a></p><p><a href="https://mp.weixin.qq.com/s/NKSKbIO2dV0-s5ix_DI2Ig" target="_blank" rel="noopener noreferrer">最具研读价值的 Go 源码之一：context 包</a></p><p><a href="https://mp.weixin.qq.com/s/mmWoLSiKIFX8D_Bq8PZvpA" target="_blank" rel="noopener noreferrer">选择正确的Go Module Path</a></p><p><a href="https://mp.weixin.qq.com/s/JqDYD5PhtgmNICWRK7lmsw" target="_blank" rel="noopener noreferrer">Go 最大挑战、AI 方向、内部优先级？2024 H1 开发者报告发布</a></p><p><a href="https://mp.weixin.qq.com/s/IyO6Z8ET04euYIPwjZO9dQ" target="_blank" rel="noopener noreferrer">Gopher的Rust第一课：Rust的那些事儿</a></p><p><a href="https://mp.weixin.qq.com/s/tOztGdwjPgc-pJSWw_96VA" target="_blank" rel="noopener noreferrer">《Go语言编程技巧》翻译项目和参与开源项目</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/UbKYBb9fuYouevfBSlBJ0g" target="_blank" rel="noopener noreferrer">这些年背过的面试题——Java基础及面试题篇</a></p><p><a href="https://mp.weixin.qq.com/s/y1-A-SHAkGdg9IOTeUtPxg" target="_blank" rel="noopener noreferrer">RocketMQ为什么这么快？我从源码中扒出了10大原因！</a></p><p><a href="https://mp.weixin.qq.com/s/pg9N28YWFkSvAquTu35yTg" target="_blank" rel="noopener noreferrer">LeetCode的基础入门</a></p><p><a href="https://mp.weixin.qq.com/s/SNMmCMV-gqkHtWS0Ca3j4g" target="_blank" rel="noopener noreferrer">Kafka 是什么</a></p><p><a href="https://mp.weixin.qq.com/s/XYiasfWaJ6rHNSch-ANBbA" target="_blank" rel="noopener noreferrer">“打工人”的自我修养 - 如何在 30 秒内把“问题”讲清楚</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/01Lw-8sRyHYQV3_ICrR7ng" target="_blank" rel="noopener noreferrer">前端 er 如何玩转音视频流-WebRTC 技术介绍</a></p><p><a href="https://mp.weixin.qq.com/s/jc4K2U7PbEGicnwsEMHCaA" target="_blank" rel="noopener noreferrer">AI+Node.js x-crawl 爬虫：为何传统爬虫已不再是数据抓取的首选</a></p><p><a href="https://juejin.cn/post/7311596602249134106" target="_blank" rel="noopener noreferrer">字节三年，谈谈一线团队如何搞工程化一（全景篇）</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[4月21日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月21日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月21日内容汇总"/>
        <updated>2024-04-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://juejin.cn/post/7306450197630320659" target="_blank" rel="noopener noreferrer">【AIGC篇】NLP任务入门：分词、词性标注与命名实体识别</a></p><p><a href="https://juejin.cn/post/7309692103056539683" target="_blank" rel="noopener noreferrer">【AIGC篇】文本表示方法比较：词袋模型 vs. 词向量</a></p><p><a href="https://mp.weixin.qq.com/s/6PcF2RwGdm1G0JllGSS3jw" target="_blank" rel="noopener noreferrer">搞懂 NVIDIA GPU 性能指标 很容易弄混的一个概念： Utilization vs Saturation</a></p><p><a href="https://mp.weixin.qq.com/s/CWTe_6FOzTOEQhuAjH-KQg" target="_blank" rel="noopener noreferrer">张俊林：聊聊对LLAMA-3、大模型开源与闭源以及合成数据的看法</a></p><p><a href="https://mp.weixin.qq.com/s/orBKeVe-osOh2PKr7ldlQQ" target="_blank" rel="noopener noreferrer">面向2026年的推荐算法前瞻</a></p><p><a href="https://mp.weixin.qq.com/s/t92npFH56q7GRE0MQZsWog" target="_blank" rel="noopener noreferrer">语义搜索与混合查询：Blended RAG如何提升检索准确性</a></p><p><a href="https://mp.weixin.qq.com/s/mtHLYuOc7iCwFpBT0AmSBw" target="_blank" rel="noopener noreferrer">行业巨变！Llama3来了</a></p><p><a href="https://mp.weixin.qq.com/s/zvuP6tP2Mh3-lyYwYpCCVA" target="_blank" rel="noopener noreferrer">Blended RAG：IBM新研究，大幅超越传统RAG的新方案</a></p><p><a href="https://mp.weixin.qq.com/s/t6BSJU7kq81E_BPwth7c1g" target="_blank" rel="noopener noreferrer">融合RL与LLM思想，探寻世界模型迈向AGI/ASI的第一性原理反思和探索：RL×LLM×WM&gt;AI4S&gt;AGI&gt;ASI「上篇」</a></p><p><a href="https://mp.weixin.qq.com/s/n1samtSuLrh0XNnDZyyZ0Q" target="_blank" rel="noopener noreferrer">使用Dask，SBERT SPECTRE和Milvus构建自己的ARXIV论文相似性搜索引擎</a></p><p><a href="https://mp.weixin.qq.com/s/ieyjFp0oQc1nIDm_EagUHg" target="_blank" rel="noopener noreferrer">如何针对金融文档优化RAG系统</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://juejin.cn/post/7350204432108306484" target="_blank" rel="noopener noreferrer">Golang框架实战-KisFlow流式计算框架(11)-Prometheus Metrics统计</a></p><p><a href="https://mp.weixin.qq.com/s/8SMsDEuNxpnIx0_gAwyb0w" target="_blank" rel="noopener noreferrer">Effective Rust: item3 避免直接匹配Option和Result</a></p><p><a href="https://www.shuttle.rs/blog/2024/04/18/using-traits-generics-rust" target="_blank" rel="noopener noreferrer">Rust 高级特性：Traits 和泛型</a></p><p><a href="https://mp.weixin.qq.com/s/exkHlATn3yNYWj30izDTEA" target="_blank" rel="noopener noreferrer">充分利用每个字节：Go 的内存打包秘密揭晓！</a></p><p><a href="https://mp.weixin.qq.com/s/BUyd42j7Wt3POfCi7Hontw" target="_blank" rel="noopener noreferrer">Effective Rust: item 2 利用类型系统表达通用行为</a></p><p><a href="https://mp.weixin.qq.com/s/wuPVgqvLmVwqCXNKxXqt0Q" target="_blank" rel="noopener noreferrer">Go 从版本 1.0 到 1.22的性能变化</a></p><p><a href="https://mp.weixin.qq.com/s/ne-ABdqd0wUqD4lbj1-FDQ" target="_blank" rel="noopener noreferrer">"fusen-rs"正式发布一个Rust轻量级微服务框架，支持Dubbo与SpringCloud</a></p><p><a href="https://mp.weixin.qq.com/s/0_f4uoOyeey9LvioyUfdvQ" target="_blank" rel="noopener noreferrer">Effective Rust: item1 利用类型系统表达你的数据结构</a></p><p><a href="https://mp.weixin.qq.com/s/mnBnwQ_xaFdYAyN48KdTKw" target="_blank" rel="noopener noreferrer">Go 新提案：返回值应该明确使用或忽略</a></p><p><a href="https://mp.weixin.qq.com/s/mdHVpIS8-ZeKXU44zd5iSg" target="_blank" rel="noopener noreferrer">Docker 是什么？ 和 k8s 之间是什么关系</a></p><p><a href="https://mp.weixin.qq.com/s/HvWBKN4Kk2rwHamvSTEUQQ" target="_blank" rel="noopener noreferrer">要么返回错误值，要么输出日志，别两样都做</a></p><p><a href="https://mp.weixin.qq.com/s/Qg2ekWfRHIToZUQja_ZPkw" target="_blank" rel="noopener noreferrer">Go 如何缓解来自软件依赖的恶意攻击</a></p><p><a href="https://mp.weixin.qq.com/s/LJoIHHDB5SflvtOhGZCtLw" target="_blank" rel="noopener noreferrer">Go Tips #001 一行代码测量函数的执行时间</a></p><p><a href="https://mp.weixin.qq.com/s/otrEv5VhVBd857vEC_uidQ" target="_blank" rel="noopener noreferrer">[<!-- -->小布去面试<!-- -->]<!-- --> 如何使用两个 goroutine 顺序输出 1-10</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/rMTfN-Fan2cSSJZQgSsaOg" target="_blank" rel="noopener noreferrer">MVCC学习圣经：一文穿透MySQL MVCC，吊打面试官</a></p><p><a href="https://mp.weixin.qq.com/s/B73RLU9ySZ6m9J7atxj8ZQ" target="_blank" rel="noopener noreferrer">Spring Boot + 事务钩子函数，打造高效支付系统！</a></p><p><a href="https://mp.weixin.qq.com/s/bxqw0Arey3Qia4jjmgmCtQ" target="_blank" rel="noopener noreferrer">MySQL索引你用对了吗</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/Hj2jO_zfA6Aqw3HC8ePk1g" target="_blank" rel="noopener noreferrer">我早就看现在的工作流不爽了！- 前端使用 Jenkins</a></p><p><a href="https://mp.weixin.qq.com/s/L0aqzJcng3XozGsKzF3yKg" target="_blank" rel="noopener noreferrer">看过最简洁的 TSConfig 介绍</a></p><p><a href="https://mp.weixin.qq.com/s/GS-DNT_2uT3cfMMuv_HEWQ" target="_blank" rel="noopener noreferrer">RSC 里如何处理 CSS-in-JS</a></p><p><a href="https://mp.weixin.qq.com/s/JjjL3ojDVreAIfdQzYum1g" target="_blank" rel="noopener noreferrer">基于源码的 Webpack 结构分析</a></p><p><a href="https://mp.weixin.qq.com/s/rZbbpMzMWRmwS5S--ekskA" target="_blank" rel="noopener noreferrer">Zustand 和 React Context</a></p><p><a href="https://mp.weixin.qq.com/s/6mLHUi7um5Gv58zwK6QL0g" target="_blank" rel="noopener noreferrer">前端工程师应该如何正确面对 UI 组件视觉回归测试</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[4月14日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月14日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月14日内容汇总"/>
        <updated>2024-04-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-c4f64eaa41c344f9be8ae85cc2742b21.png" width="1080" height="532" class="img_astN"></p><p>封面图：Go语言的TIOBE排名创历史新高</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/kw8IZE7yy2QO66iPmQVhqA" target="_blank" rel="noopener noreferrer">《干货 | 如何系统性地评价RAG系统》</a>。这篇文章是对《LLM-auto-eval-best-practices-RAG》的翻译和解读，重点讨论了如何系统性地评价检索增强生成（RAG）系统。文章探讨了使用大型语言模型（LLM）作为RAG系统自动化评估工具的最佳实践，包括评分的一致性、通过少量示例来提高评估准确性、选择合适的评分尺度以简化解释过程、以及评估指标的通用性。作者通过一系列实验，提出应使用低精度评分，如0至3分或1至5分，定制RAG基准，并建议特定用例评估，以准确衡量模型性能。</p><p><a href="https://mp.weixin.qq.com/s/Eub9QELtA91bdYNkzaZfIQ" target="_blank" rel="noopener noreferrer">《PromptKD: 基于Prompt的视觉语言模型蒸馏》</a>。本文介绍了一个使用无监督Prompt蒸馏（PromptKD）方法，针对视觉-语言模型（VLMs），在prompt learning的11个基准数据集上达到了最佳状态（SOTA）。PromptKD通过引入一个更大的CLIP模型作为教师模型，通过三个主要步骤以提高模型效能：重用教师模型产生的文本特征用于学生模型的训练和推理，确保高质量文本特征的同时显著减少计算量；对齐学生和教师的logits，让大模型为小模型提供更准确的监督信号；使用大量无标签的域数据让学生模型学习更广泛的领域知识。实验结果表明，PromptKD在多个基准测试中均展示出卓越的性能，显示出这种方法在提高VLMs的表现上的有效性。</p><p><a href="https://mp.weixin.qq.com/s/su_NCl9WQtPGP3pcDgnQ8A" target="_blank" rel="noopener noreferrer">《大模型应用开发之业务架构和技术架构(从AI Embedded 到 Copilot,再到Agent)》</a>。本文分析了大型语言模型（LLM）在应用开发中的业务架构和技术架构，讲述了从AI Embedded模式、AI Copilot模式到AI Agent模式的演变。AI Embedded指在某些传统应用环节中集成LLM，而AI Copilot代表广泛应用LLM进行串联集成的模式。AI Agent模式则更进一步，用户只需提出需求，AI则自动完成任务。文章还讨论了单Agent模式和多智能体系统（Multi-Agent）的定义，展示了这些体系的应用如何分解复杂任务、通过对话促进个体间的信息交流和协作。提出了基于大模型的Agent需要能够进行对话，接收和响应消息。最后，文章介绍了单Agent和Multi-Agent的应用开发框架，如LangChain和Autogen，并讨论了选择技术方案的思路。</p><p><a href="https://mp.weixin.qq.com/s/So1Swe4E99xi_SEyxFadsw" target="_blank" rel="noopener noreferrer">《TensorRT-LLM初探(二)简析了结构，用的更明白》</a>。文章深入探讨了TensorRT-LLM（一个深度学习优化推理库）的结构及其使用方法。介绍了TensorRT-LLM是基于FasterTransformer和TensorRT进行构建，用于优化大模型推理性能。文章概述了trt-llm的两个分支：Release branch和Dev branch。重点强调了trt-llm的多卡支持，包括Tensor Parallelism和Pipeline Parallelism。进一步探讨了In-flight Batching与动态KV Cache以及量化技术，比如INT8 weight-only、SmoothQuant、GPTQ和AWQ，用于提高效能。最后总结LTR-LLM在kernel性能及调度方面的优势及部分闭源代码限制。</p><p><a href="https://mp.weixin.qq.com/s/KaSM29hUEkme8TjxlbCDag" target="_blank" rel="noopener noreferrer">《LLM微调技术指南:Prompt-Tuning，P-Tuning，Prefix-Tuning、Lora， IA3》</a>。本文细致审视了大型语言模型（LLM）的多种参数效率微调（PEFT）技术，包括Prompt-Tuning、P-Tuning、Prefix-Tuning、LoRA和IA3。介绍了微调的概念及其在LLM中的重要性，尤其是当模型规模与复杂度日益增长时。文章还详细探讨了迁移学习和各种PEFT策略的工作机制，强调这些技术如何帮助提高LLM在特定任务上的性能，同时降低了训练成本。通过具体实例和详尽分析，文章展示了如何有效地微调模型，以适应迅速变化的数据和业务需求，并充分利用机器学习应用程序的潜力。</p><p><a href="https://mp.weixin.qq.com/s/YMuq9Jo9Nibl1QFbLNxazg" target="_blank" rel="noopener noreferrer">《纯C语言手搓GPT-2，前OpenAI、特斯拉高管新项目火了》</a>。本文介绍了Andrej Karpathy发布的项目“llm.c”，这是一个使用不到1000行纯C语言代码即可实现在CPU/fp32环境下训练GPT-2模型的项目。它旨在简化大模型训练流程，去除对大型机器学习库的依赖。文中提到项目目前已完成几层核心代码的CUDA移植，以提高效率。而未来工作的方向包括实现更多新型架构支持、SIMD指令优化和更直接的CUDA实现。实验结果显示，尽管该方法仅用极少代码，依然能够与PyTorch实现相媲美，社区反响热烈。</p><p><a href="https://mp.weixin.qq.com/s/EQgaHqNyNT2gvp5q4ro1xQ" target="_blank" rel="noopener noreferrer">《一键更改LoRA初始化!LoRA吃了披萨，效果起飞?》</a>。文章提出了一种新型参数效率的微调方法PiSSA，该方法利用预训练模型权重的本质低秩性质，通过奇异值分解来构建适配器，实现少量参数的高效调整，而冻结大部分参数以保持模型原有能力，显著降低了训练成本。PiSSA与已知的LoRA方法在架构上一致，差别在于初始化技术，使PiSSA在多项模型训练任务中优于LoRA。本文还探讨了快速奇异值分解技术，以减少PiSSA初始化的计算成本。</p><p><a href="https://mp.weixin.qq.com/s/FTsvYFY63cQIm7XWbNMgjA" target="_blank" rel="noopener noreferrer">《RAG中，无关信息的影响有多大?》</a>。论文《How Easily do Irrelevant Inputs Skew the Responses of Large Language Models?》探讨了大型语言模型（LLMs）在处理相关但无关信息时的鲁棒性问题。研究构建了多种质量的无关信息，分析了LLMs在答案生成时的易受干扰性，并测试了不同模型对无关信息的处理能力。发现模型容易受到语义相关无关信息的误导，无关信息数量增加会减弱模型的判别能力，并指出问题格式显著影响模型鲁棒性。研究揭示了现有应对策略的局限，提供了提高LLMs处理无关信息鲁棒性的指导。</p><p><a href="https://mp.weixin.qq.com/s/RhjmsehDXOj5KRY2gQ4wzw" target="_blank" rel="noopener noreferrer">《Agent四大范式 | CRITIC:吴恩达力推Agent设计范式》</a>。文章概述了CRITIC框架，它的目的是通过与外部工具交互，提高大型语言模型（LLMs）的效能和准确性。CRITIC作为一种交互式验证机制，可使模型像人类一样利用搜索引擎等工具进行自我修正，并提升模型的自我完善能力。研究结果表明，CRITIC能显著提高LLMs在问答、程序合成和内容安全性方面的性能，而且强调了持续外部反馈对于模型自我完善的重要性。文章还探讨了CRITIC的实用性和潜在局限性，强调了将这一范式应用于更广泛场景的可能性。</p><p><a href="https://mp.weixin.qq.com/s/WOiyQYSs5XZzSsn6hdb_Ww" target="_blank" rel="noopener noreferrer">《Qwen1.5开源32B模型-将开源进行到底》</a>。刘聪NLP介绍阿里巴巴开源的Qwen1.5机器学习模型，突出了其32B参数规模和支持长达32k长度的特点。该模型弥补了以往工作中30B规模模型的空缺，并且作为中间大小的模型，它在易用性和计算成本上相对于更大模型更为实用，同时在多任务评测指标上仍显示出色的性能。Qwen1.5-32B支持多语言，并在精确度和多样性方面具有竞争力，有助于推动机器学习领域的开源进程。</p><p><a href="https://mp.weixin.qq.com/s/F4wwoATw4HAXxGArbbLKdA" target="_blank" rel="noopener noreferrer">《剑桥团队开源:赋能多模态大模型RAG应用，首个预训练通用多模态后期交互知识检索器》</a>。剑桥大学人工智能实验室开发并完整开源了PreFLMR模型，这是一个预训练的通用多模态知识检索器，旨在为多模态RAG（Retrieval-Augmented Generation）应用提供支持。PreFLMR基于NeurIPS 2023发表的FLMR（Fine-grained Late-interaction Multi-modal Retriever）框架改进，通过大规模多模态数据预训练，优化了知识检索性能。它支持多种检索任务，如文文、图文和知识检索，能从大规模知识库中高效提取相关信息，显著提升多模态大模型在专业知识问答任务上的表现。此外，项目还贡献了M2KR数据集，供通用知识检索器训练和评估使用。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/bRvCdXGauJnHb9aAQhTLLQ" target="_blank" rel="noopener noreferrer">[<!-- -->并发专题<!-- -->]<!-- --> Golang 基于令牌桶算法实现简单的限速器</a></p><p><a href="https://mp.weixin.qq.com/s/InF_TxdieBg0b8q-4numpg" target="_blank" rel="noopener noreferrer">Golang 构建时的 ldflags 有什么作用</a></p><p><a href="https://mp.weixin.qq.com/s/1xFt6GIrf2qvqVyABwG7rw" target="_blank" rel="noopener noreferrer">Go 工具链已经开始收集和上报使用数据！</a></p><p><a href="https://mp.weixin.qq.com/s/fXUfmNeIXWr7utbn_f4Jjg" target="_blank" rel="noopener noreferrer">RocketMQ 事件驱动：云时代的事件驱动有啥不同</a></p><p><a href="https://mp.weixin.qq.com/s/KdT-Qo3dB3sWARAhWGeurA" target="_blank" rel="noopener noreferrer">Etcd 概述及运维实践</a></p><p><a href="https://mp.weixin.qq.com/s/IYe82j3oY3-TuY2lTE0KJA" target="_blank" rel="noopener noreferrer">选择正确的Go Module Path</a></p><p><a href="https://mp.weixin.qq.com/s/ymd5O6dXHuYlALU_VF5ieg" target="_blank" rel="noopener noreferrer">基于Golang的高性能游戏服务器框架</a></p><p><a href="https://mp.weixin.qq.com/s/8noQvux5O5ATdzdx4EHWjQ" target="_blank" rel="noopener noreferrer">100 K8s Mistakes and How to Avoid Them - 上</a></p><p><a href="https://mp.weixin.qq.com/s/TW0IoOOwcSIeMK33L8Bx_w" target="_blank" rel="noopener noreferrer">类型安全的Pool</a></p><p><a href="https://mp.weixin.qq.com/s/SG58FiEgs-9Q1jHxpDSx9Q" target="_blank" rel="noopener noreferrer">Go 标准库中的一个设计败笔：哨兵错误</a></p><p><a href="https://mp.weixin.qq.com/s/-cvD5F8fcge6DyiaEKhXWw" target="_blank" rel="noopener noreferrer">深度解析消息队列服务｜从 AWS SQS 到阿里云 MNS</a></p><p><a href="https://mp.weixin.qq.com/s/zAMuQ29Xp7DnDE74RqffnQ" target="_blank" rel="noopener noreferrer">当AWS账单超出预算时，如何自动化处理资源实例</a></p><p><a href="https://mp.weixin.qq.com/s/s7hlKBr7fZXmkK9v7PmYPQ" target="_blank" rel="noopener noreferrer">微服务架构下的配置管理：Go 语言与 yaml 的完美结合</a></p><p><a href="https://mp.weixin.qq.com/s/itHsebcV7a2G5Wy87bW63A" target="_blank" rel="noopener noreferrer">Select + Channels 实现定时任务与高效调度</a></p><p><a href="https://mp.weixin.qq.com/s/tCeC6uHI2py9_qq9h7pkcw" target="_blank" rel="noopener noreferrer">使用 Select +Timer 时如何避免内存泄露</a></p><p><a href="https://mp.weixin.qq.com/s/2RNu9ahoLE0O7PR9ZmUWgg" target="_blank" rel="noopener noreferrer">快速了解 Golang Rune 及其避坑指南</a></p><p><a href="https://mp.weixin.qq.com/s/S0BpYUvHtd5zf-Z_SOnTwQ" target="_blank" rel="noopener noreferrer">一文掌握 Golang Empty Struct 的所有用法</a></p><p><a href="https://mp.weixin.qq.com/s/VbZcx7zilS4gLfbJe76EJA" target="_blank" rel="noopener noreferrer">Golang 应用发布生产后想睡个好觉？推荐提前用 nilaway 扫雷！</a></p><p><a href="https://mp.weixin.qq.com/s/y8bQ1Ze3pG6PWNDlppS-2w" target="_blank" rel="noopener noreferrer">Kubernetes中的事件收集以及监控告警</a></p><p><a href="https://mp.weixin.qq.com/s/SSEXh7n0ZEfcvKTAL4s4sA" target="_blank" rel="noopener noreferrer">All in One：Prometheus 多实例数据统一管理最佳实践</a></p><p><a href="https://mp.weixin.qq.com/s/yER9DXSQa-YQuE3Dbu0JDQ" target="_blank" rel="noopener noreferrer">Go 哪里没有做好？Rob Pike 深刻反思了</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/gBwUVRMqoFWaBgxZGfDhJQ" target="_blank" rel="noopener noreferrer">微服务架构中10个常用的设计模式，建议收藏！</a></p><p><a href="https://mp.weixin.qq.com/s/b0T_ZXap_pJ1qW_6KQIfqQ" target="_blank" rel="noopener noreferrer">如何优雅地记录操作日志？看看美团是怎么做的</a></p><p><a href="https://mp.weixin.qq.com/s/YHft80D_-PUmiGuaz_4Q0A" target="_blank" rel="noopener noreferrer">两万字详解！InnoDB锁专题！</a></p><p><a href="https://mp.weixin.qq.com/s/sdSXTvZx0hCiWjBERxBk8A" target="_blank" rel="noopener noreferrer">阿里终面：每天100w次登陆请求, 8G 内存该如何设置JVM参数</a></p><p><a href="https://mp.weixin.qq.com/s/M2jNnLkYaearwyRERnt0tA" target="_blank" rel="noopener noreferrer">微服务难点剖析 | 服务拆的挺爽，问题是日志该怎么串联起来呢</a></p><p><a href="https://mp.weixin.qq.com/s/XoJzptTiZwVyjcog2Z0g1g" target="_blank" rel="noopener noreferrer">引入缓存竟然会带来这么多问题？？！</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/WHrMwVajYKt1NwTSCKyOcw" target="_blank" rel="noopener noreferrer">MDH Weekly 125 - 《小丑牌》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[4月7日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月7日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/4月7日内容汇总"/>
        <updated>2024-04-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-62b992c09bc4e443043416bc84fcfc77.png" width="900" height="520" class="img_astN"></p><p>封面图：Go 1.22.2 刚刚已发布，修复 http2 多个 header 导致的连接关闭</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/C00sLxto2f5cxsmuva9VsA" target="_blank" rel="noopener noreferrer">《人工智能机器学习算法总结--2.逻辑回归算法》</a>。这篇文章详细介绍了逻辑回归算法，这是一种处理二分类问题的机器学习算法。文章概括了逻辑回归的定义、目标及应用，并解释了其与线性回归的不同之处。底层结构清晰地描述了逻辑回归包括的组成部分，如输入层、权重、线性组合、激活函数（Sigmoid函数）、输出层、损失函数（如交叉熵损失函数）及优化算法（如梯度下降法）。文章还阐述了数据准备、代价函数、梯度计算与模型评价的完整过程，包括特征映射、判定边界的绘制等，并提出防止过拟合的正则化技巧。</p><p><a href="https://mp.weixin.qq.com/s/srCgwrjlggVlSwtOzU6iQw" target="_blank" rel="noopener noreferrer">《CMAT: 与GPT3.5相媲美的1.8B Agent模型和框架》</a>。本文主要介绍了一种与 GPT3.5 性能相匹那的1.8B Agent 模型和框架。提出了 TinyAgent 模型和多代理合作调整 (CMAT) 框架，通过环境反馈驱动的权重调整，增强了语言代理的能力。尤其突出了 TinyAgent-7B模型，虽然参数量不多，但是其性能达到了与 GPT-3.5 相当的水平，显示出大型语言模型在精效方面的巨大进步。同时，文章还详解了 CMAT 框架的运行机制和优势，利用高质量数据集进行训练和 LoRA 方法进行优化，显著提升了模型的性能和应用创新。</p><p><a href="https://mp.weixin.qq.com/s/Xqnv2L9X4KRkfpTaw7B0SA" target="_blank" rel="noopener noreferrer">《谷歌更新Transformer架构，更节省计算资源!50%性能提升》</a>。Google更新了Transformer架构，发布了Mixture-of-Depths（MoD），它通过动态分配计算资源来跳过不必要的计算，大幅提高了模型的训练效率和推理速度。论文展示了使用MoD的模型在减少每次向前传播所需的FLOPs的同时，步进速度可提高50%。这种方法不仅节约了资源，更在提升性能方面展现出巨大潜力，特别是在大模型的训练和推理中，使得计算资源的分配更为精确和高效。这项研究由DeepMind和麦吉尔大学共同开展，主要贡献者是David Raposo和Adam Santoro。</p><p><a href="https://mp.weixin.qq.com/s/XMrbHWIUDELs8NqOEqR-aA" target="_blank" rel="noopener noreferrer">《人工智能机器学习算法总结--1.线性回归算法(单变量及多变量)》</a>。本文作者深入介绍了线性回归算法的原理和步骤，从数据准备、模型假设、模型建立、模型评估到预测，涵盖单变量和多变量线性回归。详述了如何通过特征缩放、增加假设函数中的截距项、以及梯度下降法等技术来优化回归模型。同时，探讨了代价函数的计算和模型参数的优化过程，包括正规方程和梯度下降法的对比以及正则化的应用，以提高模型泛化能力，防止过拟合。</p><p><a href="https://zhuanlan.zhihu.com/p/682253496" target="_blank" rel="noopener noreferrer">《RAG实践中的关键模块解析》</a>。文章细致解析了在检索增强生成（RAG）的实践中关键的模块和技术，包括挑战分析和系统架构讨论。论文深入探讨了在复杂查询的理解、检索模型的挑战与架构、生成模型的策略和技术、以及如何通过RAG改进语言模型（LM）的查询响应质量。同时，分析了如何通过改写查询、分解问题、重构查询和其他技术来处理特定挑战，诸如用户输入的复杂性、语义歧义和模型在生成回答时的过度依赖检索内容等。还讨论了基于演示检索的上下文学习的插件，以及评估RAG系统性能的方法。</p><p><a href="https://mp.weixin.qq.com/s/OtdncYNt9KDE6YzDJeexFg" target="_blank" rel="noopener noreferrer">《用扣子/Coze 揭秘吴恩达的4种 AI Agent 设计模式》</a>。本文作者在介绍了吴恩达教授提出的四种AI Agent设计模式：Reflection（反思修正输出）、Tool Use（使用工具执行操作）、Planning（任务分解执行）和Multiagent Collaboration（多个Agent协作）。文章利用扣子/Coze 特性来说明如何应用这些模式，结合具体案例如汽车行业调研助手和旅行规划助手，阐述了如何快捷实施这些模式以及相应的工作流和效果。这些设计模式旨在提升AI Agent的自主性，效率和协同工作能力，为未来AI应用提供更为精准和灵活的操作方式。</p><p><a href="https://mp.weixin.qq.com/s/t_OJu1JGrzk7q8A2GAfA0g" target="_blank" rel="noopener noreferrer">《国内首个AI程序员入职阿里云:专属工号AI001，KPI是一人写完公司20%代码》</a>。在这篇文章中，讲述了“通义灵码”作为国内首个AI程序员入职阿里云的故事。AI001拥有过万亿量级代码训练出的能力，精通200多种编程语言。它不仅大大提高了编写、测试和维护代码的效率，甚至在API测试开发中实现了大幅度的时间缩短。AI技术的不断成熟似乎预示了行业的转型，而通义灵码的入职体现了AI在编程领域的实际应用和效能，标志着AI和人类程序员将共同推动软件开发的未来。</p><p><a href="https://mp.weixin.qq.com/s/AQTfg4vr3ZMIMsf4v-zLeQ" target="_blank" rel="noopener noreferrer">《2024年大模型的发力点:大模型Agent，分享6篇最新LLM Agent研究成果》</a>。本文详细介绍了六篇关于大型语言模型（LLM）Agent的研究成果。涵盖了数据科学、复杂规划和推理、3D场景生成、GitHub代码仓库互动、动作迭代学习及代码文档自动生成等多个方面的创新应用。这些研究表明，大模型Agent在处理复杂任务和提升自身能力方面具有显著潜力和广泛应用前景，例如DS-Agent在数据科学领域的自主操作，以及LearnAct框架在动作学习上的进步。文章还讨论了LLMs的局限性和未来的发展方向，指出构建能力强大的Agent是大模型技术发展的关键所在。</p><p><a href="https://mp.weixin.qq.com/s/g75XpnQ7fnvY9PgFLdIf_A" target="_blank" rel="noopener noreferrer">《每日论文速递 | InsCL: Data-efficient 持续指令学习》</a>。文章介绍了InsCL（基于指令的持续学习）新模式，重点在于提升大型语言模型（LLMs）在持续学习中的数据效率和减少灾难性遗忘。InsCL采用任务相似性动态重放前数据，使用Wasserstein距离计算任务间相似度来指导选择重放内容。引入指令信息度量（InsInfo）定量指令复杂性和多样性，并基于此优化数据重放质量。丰富的实验表明，InsCL相对随机重放和无重放分别实现了3.0和27.96的性能增益，显著改善了持续学习能力。</p><p><a href="https://mp.weixin.qq.com/s/l8KZGyPzP2z6TfhpiMgakg" target="_blank" rel="noopener noreferrer">《基于LLM的多Agent框架在金融市场数据的应用》</a>。论文提出了一个基于大型语言模型(LLM)的多智能体框架，专门用于金融市场数据的异常检测。通过建立一个AI智能体的协作网络，涵盖数据转换、深度专家分析、知识应用及报告整合等，框架可实现财务数据异常的全自动验证和解读。运用标准普尔500指数数据展示了框架的有效性，证明它可以提高市场监控的效率、准确性，并减少人力需求，是金融市场监控支持领域的有力工具。</p><p><a href="https://mp.weixin.qq.com/s/g2Gy2FmG4jRywNyjXbN96w" target="_blank" rel="noopener noreferrer">《Python实现 8 个概率分布公式及可视化》</a>。文章介绍了序列化在 Python 中实现并可视化八种概率分布：均匀分布、高斯分布、对数正态分布、泊松分布、指数分布、二项分布、学生t分布和卡方分布。分布分别关联不同类型的随机过程和数据集。使用如 NumPy、matplotlib、SciPy 等库提供数学计算和可视化支持，这对于数据科学和机器学习中统计学与概率的应用至关重要。</p><p><a href="https://mp.weixin.qq.com/s/jJ5hItGNz91TiaDrdfYwUg" target="_blank" rel="noopener noreferrer">《今日arXiv最热NLP大模型论文:Github万星!北航发布零代码大模型微调平台LlamaFactory》</a>。北航发布了LlamaFactory，一个零代码、可对100多种语言模型进行微调的平台。该平台提供模型加载、数据处理、模型训练等模块，支持高效微调技术，并通过Web界面简化用户操作。LlamaFactory旨在降低微调大模型的技术要求，并提高训练效率。论文在GitHub获超过13,000星，实验证明了其在任务适应性和训练效率上的有效性。</p><p><a href="https://mp.weixin.qq.com/s/tXEWPPNEqhd6dwASiJO0pw" target="_blank" rel="noopener noreferrer">《大模型记忆可以不使用向量数据库实现吗?图数据库是一个候选》</a>。Brandon Kynoch、Hugo Latapie 和 Dwane van der Sluis提出了一种脱离传统使用向量数据库的大型语言模型(LLM)长期记忆机制。他们的研究通过构建知识图谱来存储信息，使用指定的数据结构、Cypher查询语句以及NLP工具来自动更新知识图谱。该论文详细介绍了如何更新和扩展知识图谱，并且还展示了如何使用知识图谱执行推理和长期记忆功能。尽管有局限性，如缺乏指代消解能力，该工作对于理解和实施LLM的长期记忆功能是一个重要的步骤。</p><p><a href="https://mp.weixin.qq.com/s/aERkT93iUB8pH1m-FCESWg" target="_blank" rel="noopener noreferrer">《Ollama 本地开源大模型聊天应用》</a>。文章详述如何使用Ollama在本地部署和运行开源大模型以及如何通过API调用。介绍了Ollama为前端开发者提供的Python和JS开发包，并且介绍了一些基本的使用场景和指令。以及就如何结合Streamlit这个Web框架与Ollama来快速开发一个类似ChatGPT的聊天应用，提供了嵌入式代码示例和操作步骤。总结了Ollama部署大模型的可靠性和便捷性，同时强调了结合Streamlit快速搭建Web的能力。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/ceM2RWiVtq6HJml5Y1y9lA" target="_blank" rel="noopener noreferrer">《探索 Go 的 Fan-Out/Fan-In 模式:让并发更 easy》</a>。本文来自 Go Official Blog，目的在于引导读者理解如何在 Go 中利用扇出（Fan-Out）和扇入（Fan-In）模式简化并发操作。扇出是指单个 goroutine 将任务分发给多个工作 goroutine；扇入则是多个工作 goroutine 完成任务后，将结果汇总到一个通道。文章解释了这种模式的优势，包括提升程序性能、简化任务管理，并使并发更易于维护。同时，文章通过代码示例展示了在 Go 应用程序中如何实施 Fan-Out/Fan-In 并发模式。</p><p><a href="https://mp.weixin.qq.com/s/l4vUCYmo-kz5wdiORYKU7A" target="_blank" rel="noopener noreferrer">《Go 是社区驱动吗?哪种模式更好》</a>。作者煎鱼对 Go 语言是否为社区驱动的模式进行了深入探讨。文章基于 Chris Siebenmann 的观点，讨论了 Go 的发展受 Google 影响较大，且社区的声音在关键决策中并不占主导地位。举例说明了 Go Module 的引入过程如何背离社区开发的依赖管理系统。同时文章讨论了社区驱动与企业所有的开发模式差异，及其对开源项目命运的影响，指出虽然许多顶尖的开源项目背后有企业影子，但实际上可能没有一种模式是绝对优于另一种的。</p><p><a href="https://juejin.cn/post/7325441612402098195" target="_blank" rel="noopener noreferrer">《Rust 多线程开发:scoped thread》</a>。本文由Pomelo_刘金撰写，讨论了Rust语言中scoped thread的概念和优势。Scoped thread是一种生命周期和创建它的作用域绑定的线程，与标准的<code>std::thread::spawn</code>函数创建的线程相反，不需要将数据拥有权移至线程中，允许更安全地共享父作用域的数据。文章比较了普通线程和scoped thread的特点和生命周期管理，并通过代码示例展示如何在Rust中创建和用scoped thread安全地并发处理数据。这种线程是处理Rust并发时非常有价值的模式，尤其是在多个线程间安全共享数据时。</p><p><a href="https://mp.weixin.qq.com/s/ktOGySi9HJ31G2-IOfxHZw" target="_blank" rel="noopener noreferrer">《Rust 解码 Protobuf 数据比 Go 慢五倍?记一次性能调优之旅》</a>。文章作者v0y4g3r总结了如何通过性能调优把Rust在解析Protobuf数据时的速度从原先比Go慢五倍提升到仅慢33.3%。作者首先利用池化技术减少内存分配释放的耗时，再尝试用<code>Bytes</code>数据类型来实现零拷贝，但遇到了性能退步。通过火焰图分析，确定了性能瓶颈：<code>BytesAdapter</code>和<code>Buf</code>的转换开销和<code>Bytes::slice</code>的内存安全开销。最后，作者通过一些<code>unsafe</code>操作优化了<code>slice</code>和类型特化，获得了显著的性能提升。文章强调Rust的内存安全机制和底层实现对性能调优的影响，同时提醒重点关注代码热点路径的底层开销。</p><p><a href="https://mp.weixin.qq.com/s/aNImZ1DCzka6PXXmaEnnQQ" target="_blank" rel="noopener noreferrer">《Go 1.22.2 刚刚已发布，修复 http2 多个 header 导致的连接关闭》</a>。文章作者详细报道了Go语言最新版1.22.2的发布情况，主要介绍了此版修复的关键安全问题。Go 1.22.2修复了影响http2协议的安全漏洞CVE-2023-45288，该漏洞允许攻击者在不影响服务器性能的情况下发送大量header数据，从而导致连接的关闭。此补丁通过添加额外的安全检查和连接关闭逻辑来防止此类攻击，并修复了其他一些已知问题。发布说明强调此次更新的重要性以及Go社区对安全性的持续承诺。</p><p><a href="https://mp.weixin.qq.com/s/snyiunUcS4lrGo3mMhxLaQ" target="_blank" rel="noopener noreferrer">《分布式系统编程 - 多数投票(Majority Quorum)》</a>。文章作者介绍了分布式系统中多数投票（Majority Quorum）的概念和其在一致性中的作用。多数投票是确保分布式系统在服务器崩溃后仍能提供结果可用性的一种机制，通过在集群中复制结果来实现。文章讨论了如何确定法定数量（quorum），这是集群节点多数确认更新的数量，以确保系统的活性和安全性。通常，一个节点数为n的集群，法定数量为n/2+1。介绍了法定数量在数据更新和领导者选举中的应用，并对比了与比特币中基于工作量证明的共识机制不同的处理方式。最后指出，在一些特定场景下，系统可能采用拜占庭容错算法以增强一致性和容错能力。</p><p><a href="https://mp.weixin.qq.com/s/GdeqBRJ0uGphpeBXQFUPcQ" target="_blank" rel="noopener noreferrer">《分布式系统模式 - 心跳(HeartBeat)》</a>。文章作者探讨了在分布式系统中，心跳机制如何作为一种关键措施来确保服务器集群的服务连续性和及时故障检测。心跳能帮助监控每个服务器的状态，确保集群中每一台机器都按预期工作。文中详述了设置合理的超时时间和心跳间隔的重要性，以及如何通过共识算法和八卦协议等不同策略在不同规模的集群中实施心跳监控。举例说明了如etcd集群使用Raft算法维持节点状态同步的心跳实现，以及TCP keepalive在保持TCP连接活性方面的作用。</p><p><a href="https://mp.weixin.qq.com/s/_yWuCXw9ECSlWIPn0fCJqA" target="_blank" rel="noopener noreferrer">《可以不需要第三方路由了:Go1.22 的路由增强功能》</a>。文章作者详细介绍了Go语言在1.22版本中对net/http路由功能的增强，新增了方法匹配和通配符功能。现在用模式表达常见路由比以前更简单，无需编写Go代码。作者讨论了优化多模式匹配规则的挑战，以及如何采取优先级规则以处理模式冲突问题。新的路由机制考虑到了向后兼容，减少了对第三方Web框架的依赖，但复杂路由需求仍可选用第三方框架。这些变化显示了Go社区对简化开发者工作并促进语言自身改善的承诺。</p><p><a href="https://mp.weixin.qq.com/s/QbPcY0CSXSAk0YBU6FJOYA" target="_blank" rel="noopener noreferrer">《推荐 10 个非常有用的 Golang Libraries》</a>。作者分享了10个有用的Go语言库，包括用于增强测试比较的cmp、协议缓冲区实现的protobuf、跨平台文件系统通知的fsnotify等。文章提供了每个库的简介和示例，解释了它们的优势和应用场景。例如，cmp库能强力替换reflect.DeepEqual进行更安全的值比较；fsnotify适用于文件系统变更监测。介绍中强调了这些库在特定情况下编程实践中的高效性和便利性。</p><p><a href="https://mp.weixin.qq.com/s/y0JIjsHZnttDYhGb0IwI0A" target="_blank" rel="noopener noreferrer">《分布式系统模式 - 主从复制模式(Leader and Followers)》</a>。本文作者讲解了分布式系统中的主从复制（Leader and Followers）模式，即如何在服务器集群中复制数据以达到容错目的，并保证客户端数据的一致性。文章详述了Leader选举机制，及其在小型和大型集群中的应用，包括如何避免选举时的分裂投票（split vote）。主从复制决定了整个集群的决策及其传播，保证了系统在领导者存在时才处理请求，从而提高了数据一致性和集群决策的质量。文中对Zab和Raft这两个共识算法的选举过程进行了比较，解释了“最新状态”服务器选举为Leader的标准和流程。</p><p><a href="https://mp.weixin.qq.com/s/83KTsLUioRaLU0m8znGkNg" target="_blank" rel="noopener noreferrer">《Go 1.22 标准库 slices 新增函数和一些旧函数增加新特性》</a>。这篇由frank撰写的文章介绍了在Go 1.22版本中对slices包的更新。新增了<code>Concat</code>函数以更优雅的方式链接多个切片，同时对既有函数如<code>Delete</code>, <code>DeleteFunc</code>, <code>Compact</code>, <code>CompactFunc</code>, <code>Replace</code> 和 <code>Insert</code>实施了性能优化。重点改进了将不再使用的切片元素设置为零值，以及增强了边界检查，当索引超界时会触发panic，这些变化旨在提高Go语言的稳定性和开发效率。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/-jRhRMLiWW6NlZeCNomMPg" target="_blank" rel="noopener noreferrer">《三种方式模拟两个线程抢票》</a>。本篇文章作者介绍了如何在Java中模拟两个线程竞争抢票的场景，详细阐述了三种并发控制策略：<code>Synchronized</code>、<code>ReentrantLock</code>和<code>Semaphore</code>。通过具体代码示例展示了每种方法的实现和优缺点。<code>Synchronized</code>通过关键字实现同步，一次只允许一个线程访问资源；<code>ReentrantLock</code>提供了比<code>Synchronized</code>更加灵活的锁定机制；而<code>Semaphore</code>则是通过信号量控制资源的并发访问。文章还演示了利用抽象工厂模式优化线程安全的代码创建过程，提升代码的维护性和可扩展性。最终，根据具体场景选择最适合的策略来保证程序的正确运行。</p><p><a href="https://mp.weixin.qq.com/s/HHFPI4AzsLvw-oj3BclOQQ" target="_blank" rel="noopener noreferrer">《https安全性 带给im 消息加密的启发》</a>。文章作者探讨了https安全性对即时通讯(IM)消息加密的启发。详细阐述了TLS1.2和TLS1.3协议的手握过程和安全特性，特别是数字证书的验证原理以及通过ECDHE算法实现前向安全性的密钥交换。随后，提出了应用于IM系统的加密和防篡改方案，包含采用对称加密（如AES）保护信息，使用消息摘要算法（如md5、sha256）检测篡改，以及设计hmac算法进行消息认证。作者强调，在IM消息系统中，与https使用数字证书不同，可以设计私有密钥实施hmac认证，以确保消息来自可信客户端。</p><p><a href="https://mp.weixin.qq.com/s/H7WmhhacPNeBcDHI4oKbGw" target="_blank" rel="noopener noreferrer">《支付系统的心脏:简洁而精妙的状态机设计与核心代码实现》</a>。文章作者介绍了状态机在支付系统中的重要性，并提供了详细的状态机设计原则、常见错误及最佳实践。作者阐明了状态机（Finite State Machine, FSM）是行为建模的一种方式，对于支付系统来说，它能确保交易的生命周期按照正确的流程进行管理，提升系统的鲁棒性和交易处理的效率。文章还详细讲述了怎样用Java实现状态机，包括如何定义状态和事件、如何通过事件驱动状态变化以及如何记录状态转换，最后讨论了在并发环境中维护状态幂等性的方法。</p><p><a href="https://mp.weixin.qq.com/s/wA_6F3nqsB-3I8iDglwxrQ" target="_blank" rel="noopener noreferrer">《遇到个MySQL索引长度限制的问题》</a>。本文作者探讨了MySQL中索引长度限制的问题，分析了在不同MySQL版本和存储引擎下索引长度的限制规则。文章详细介绍了MyISAM和InnoDB两种存储引擎对单列索引和联合索引长度的限制，并解释了如何通过开启<code>innodb_large_prefix</code>参数或使用前缀索引来解决超出长度限制的问题。作者还讨论了字符集对索引长度的影响，尤其是<code>utf8</code>和<code>utf8mb4</code>编码在不同行格式下对索引长度的限定。最后给出了一些解决MySQL索引长度限制问题的建议，如调整字段的字符长度或考虑前缀索引的使用。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/kNp-y4YHzoD2Y8DLig44Ng" target="_blank" rel="noopener noreferrer">《NPM 依赖管理的复杂性》</a>。文章深入讨论了开源环境下NPM依赖管理的挑战及对软件工程的影响，指出依赖管理在开发过程中的重要性，并探讨了依赖的概念、NPM的自动化依赖处理、合理依赖版本选择等核心议题。详解了多级依赖结构带来的问题如幽灵依赖、依赖冲突、循环依赖等，并提出了策略性的处理建议，包括依赖审查、定期清理无用依赖和使用新型包管理器等，最后给出了几个管理最佳实践，以助于开发者更好地管理和维护NPM包依赖。</p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3月31日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月31日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月31日内容汇总"/>
        <updated>2024-03-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/z1xqIiCEXk1TyoQyen7gBw" target="_blank" rel="noopener noreferrer">《独家 | 生成式AI的设计模式:一份全面的指南》</a>。这篇文章详细介绍了针对生成式AI的几种设计模式，以协助解决成本、延迟和准确性等挑战。包括分层缓存策略的模型微调，专家小组式的多路复用AI代理，多任务大语言模型微调，规则导向和生成模型的结合，以知识图谱增强的大语言模型，AI代理群的集体智慧，模块化大语言模型的可组合性，以记忆认知构建的大语言模型，以及红蓝双模型的协作评估。这些模式不仅可以缓解实施中的问题，也是智能系统未来发展的构架。</p><p><a href="https://mp.weixin.qq.com/s/CHDyx0UVTjLH7snRO4ryrQ" target="_blank" rel="noopener noreferrer">《深度学习在时间序列预测的总结和未来方向分析》</a>。本文作者Isaac Godfried总结了2023年时间序列预测领域深度学习的发展，并分析了2024年可能的趋势。文章回顾了多个深度学习模型例如SAN、BasisFormer、Inverted Transformer、Crossformer的创新应用和改进，并探讨概念如用大型预训练语言模型进行零样本时间序列预测。文中还指出，多模态时间序列预测、归一化技术、及其与其他数据类型如图像的结合将是未来发展的重要方向。此外，文章批评了TimeGPT评估方法的不足，指出多元时间序列预测中协变量之间依赖关系学习的重要性。</p><p><a href="https://mp.weixin.qq.com/s/ZY8zwaGdR6dq1OL_XQ2iTQ" target="_blank" rel="noopener noreferrer">《面向业务开发的 Coze 使用指南》</a>。文章作者详细介绍了 Coze，一个一站式 AI Bot 开发平台，强调了它的易用性与功能强大，适合各类问答 Bot 的开发和部署至社交平台。通过举例说明如何使用 Coze 迅速搭建 AI 智能体和 RAG 问答系统，展示其插件库丰富性和沟通插件的效果。文章还讨论了 Coze 长期记忆的实用性，通过对话创建数据库并进行 CRUD 操作，以及如何实现长期记忆。最后，作者分析了 Coze 与其他 AI 开发工具的差异和适用场景，为读者提供了一个 Coze 实现原理和使用方式的深入指南。</p><p><a href="https://mp.weixin.qq.com/s/FTd9L6HzpV-5AoT20V8YyQ" target="_blank" rel="noopener noreferrer">《Qwen1.5-MoE模型:2.7B的激活参数量达到7B模型的性能》</a>。文章介绍了阿里巴巴开源的 Qwen1.5-MoE模型，它在总参数量14.3B的基础上，每次激活8个专家，激活参数量仅为2.7B，并且与7B模型性能相当。突破性的是实现了约75%的训练成本降低和1.74倍推理速度提升。作者描述了模型的结构改进，例如细粒度专家细分、模型初始化优化，以及共享路由机制。此外，文章还评估了模型在不同领域如MMLU、GSM8K、HumanEval和多语言领域的任务表现，并与7B模型进行对比。通过这些测试表明，即使在较低的激活参数量下，Qwen1.5-MoE-A2.7B模型也获得了卓越的性能，有效降低了训练与推理成本。</p><p><a href="https://mp.weixin.qq.com/s/Y_Xbpaat3ClZ6LIUkUzg9A" target="_blank" rel="noopener noreferrer">《港大 | 提出高效大模型微调方法:LISA，性能碾压LoRA，甚至可超全参数微调!》</a>。这篇文章讨论了港大研究者提出的新型大模型微调方法：LISA。该方法通过分层重要性采样（Layerwise Importance Sampled Adam）优化少数关键层，进而以更少的GPU内存消耗实现了性能超越低秩适应（LoRA）的微调，并有潜力超越全参数微调。LISA 方法在微调大规模语言模型上显著降低了资源消耗，在多种下游任务表现突出，优于传统微调，解决资源限制下的大模型训练挑战，对提升大模型训练的可行性和效率具有重大意义。</p><p><a href="https://mp.weixin.qq.com/s/NEf1TwwKd69_l_qsZsMlhw" target="_blank" rel="noopener noreferrer">《LLM训练要不要过采样/训多个epoch?》</a>。本文作者探讨了在数据资源紧缺的情况下，循环使用数据（即过采样或多次epoch训练）对大型语言模型（LLM）训练的影响。通过实验发现，重复使用数据会导致模型性能下降和过拟合风险。文章讨论了几个主要问题：重复训练（repeat）导致得分降低、即便少量重复也存在过度拟合的风险、以及LLM在不同个体的数据下受重复影响的程度不同。分析显示，重复会让模型在生成响应时更依赖早期输出而非指令与输入。文章最后提及，数据量和质量对缓解过拟合的影响，以及如何通过适当策略（例如使用dropout）对抗过拟合现象。</p><p><a href="https://mp.weixin.qq.com/s/3KkgskOpqL7fJ5w9fpQm7g" target="_blank" rel="noopener noreferrer">《视频生成新玩家:Sora 原理探索与效果对比》</a>。文章由支付宝算法工程师杰凡撰写，介绍了 OpenAI 提出的视频生成模型 Sora 和其它主要视频生成玩家的比较。Sora 能够根据文本提示词，生成长达一分钟且质量极高的视频，而其他模型生成的视频时间要短得多。文章探究了 Sora 视频生成的原理，包括其视觉编码器/解码器结构、扩散模型等，并讨论了 Sora 生成的视频如何实现三维一致性、长序列连贯性以及与世界的互动。文章总结了 Sora 的技术特性并略提其局限性，指出 AIGC 竞赛不仅在模型结构上，还在大规模高质量训练数据、工程优化、训练技巧和经验上展开竞争。</p><p><a href="https://mp.weixin.qq.com/s/6AM39RXaahpwniZ0wL-Yfg" target="_blank" rel="noopener noreferrer">《聊聊 MOE + LoRA 微调新方式》</a>。这篇文章讨论了 MOE（Mixture-of-Experts）与 LoRA（Low-Rank Adaptation）相结合的新型微调方式。该方法利用 LoRA 技术只微调参数的一部分，并保持大语言模型（LLMs）的预训练参数不变。文章中详细介绍了 LLaVA-MoLE 模式，在此模式下，通过在 Transformer 层内为 MLP 层创建专门用于 LoRA 的专家组，使用 MoE 概念并根据路由函数自适应选择不同领域的输入令牌。实验显示，这种微调方法解决了多任务数据冲突问题，在保持计算成本相似的同时，提高了微调的效果和性能。</p><p><a href="https://mp.weixin.qq.com/s/R56Ob5dZjMh1alhMin8DZw" target="_blank" rel="noopener noreferrer">《32K上下文，Mistral 7B v0.2 基模型突然开源了》</a>。本文介绍了 Mistral AI 最新开源的 Mistral 7B v0.2 Base Model。这个模型的更新包括扩展上下文限制至 32K、调整Rope Theta参数至1e6，以及去除了滑动窗口技术。这些改进使得 Mistral 7B 成为同规模模型中性能最好的之一，并为开发者提供了按需微调模型的可能。此外，文章还提到 Mistral AI 的未来目标是与 OpenAI 比肩，并已与微软 Azure 创建战略合作。最新的 Mistral Large 模型则直接针对 GPT-4 竞争，展现了 Mistral AI 从开源模式到优化商业模式的战略转变。</p><p><a href="https://mp.weixin.qq.com/s/XS1_NAZ65P-1aLqwWm2hbg" target="_blank" rel="noopener noreferrer">《原创 | 一文读懂K均值(K-Means)聚类算法》</a>。本文详细介绍了K-Means聚类算法，一个广泛使用的无监督学习算法，它适用于聚集数据并发现数据内在的分布结构。文章解释了K-Means算法的基本原理，其中簇的数量K是预先确定的，且簇的中心或质心是通过算法迭代计算得出。算法过程包括随机选择初始质心、分配数据点到最近的质心、重新计算质心，并重复这个过程直到质心稳定。作者提供了一个手工计算的例子来说明K-Means如何工作，并详述了如何通过总簇内平方和的最小化来评估聚类效果。此外，文中对算法的时间复杂度、初始化问题以及优缺点都进行了讨论。</p><p><a href="https://mp.weixin.qq.com/s/8wHkjPlEIfzjHCU6SS5fPA" target="_blank" rel="noopener noreferrer">《大语言模型时代的聚类怎么做?哪种embedding算法和聚类算法最有效?》</a>。本文研究在大语言模型(LLM)时代文本聚类的有效方法，对比各种文本嵌入方法及聚类算法。研究显示，LLM嵌入在抓取结构化语言特征上表现突出，特别是BERT在轻量级嵌入中卓越。使用多种验证指标（如F1分数、调整兰德指数等），结果推荐在正规文本聚类中配合k-means算法使用OpenAI嵌入方法。实验发现，在优化聚类质量时，应平衡嵌入维度、摘要技术等因素，避免一味追求维度增大。BERT由于较低维度和上下文理解力，在开源模型中效果最佳；而在LLM嵌入之间，Falcon-7b因混合语料库训练在多数数据集上超越LLaMA-2-7b。</p><p><a href="https://mp.weixin.qq.com/s/W3zbcdrOo4M07Os16UD9Ow" target="_blank" rel="noopener noreferrer">《从长期记忆的角度谈Agent》</a>。本文探讨了在构建自主智能体（Autonomous Agents）和智能体模拟器（Agent Simulations）时，长期记忆这一核心能力的重要性和实现。作者说明了大语言模型（LLM）在长期记忆上的局限性，并讨论了如何通过外部存储来辅助LLM的记忆。同时，介绍了几个流行的自主智能体项目，如Langchain、Visual-ChatGPT与HuggingGPT，并详细解析了如何结合短期和长期记忆管理，以及通过文档检索来增强LLM在处理增强记忆任务时的性能。此外，文中还讨论了如何使用向量搜索改进传统搜索，以及基于LLM的高阶逻辑链技术的潜力。</p><p><a href="https://mp.weixin.qq.com/s/GFUG3IVRpe-TbDM0DimshA" target="_blank" rel="noopener noreferrer">《从啥也不会到GPT-3和InstructGPT》</a>。作者详细记录了从基本的机器学习原理起步，逐步学习NLP和大型语言模型（LLM）的心得。强调了深度递归学习方法，即遇到不懂的概念就立刻搜索学习的重要性。文章详细列出了学习大模型的顺序，包括预处理、分词、模型优化等，一直至对GPT-3和InstructGPT的理解。每一部分都有推荐文献和关键点说明，使读者可以按顺序阅读文档逐步理解。涉及多种模型的细节，像Transformer、BERT、T5和GPT系列，并且讨论了各种模型的原理和应用。</p><p><a href="https://mp.weixin.qq.com/s/WHgnP2aJM37Q5jjNVyu_iA" target="_blank" rel="noopener noreferrer">《ChainLM: CoTGenius 框架，专门用于自动生成高品质的 CoT 提示》</a>。文章介绍了CoTGenius框架，它是设计来自动生成高品质Chain-of-Thought (CoT)提示的系统。通过三种策略（复杂化、多样化、具体化）和筛选机制（进化成功评判、正确性验证），它能生成更有挑战性和具体性的CoT问题。此外，文中提出“步级辩论法”，多个角色对推理步骤逐一讨论以确保正确性，增强了模型在复杂推理任务上的表现。相关数据集和代码也公开分享以进一步的社区研究和应用。</p><p><a href="https://mp.weixin.qq.com/s/5-W0Dt676qNhKZkLaNEcwQ" target="_blank" rel="noopener noreferrer">《Token预测的未来:大型语言模型的预训练后操作》</a>。文章详细探讨了大型语言模型在预测单个Token功能之外的能力，如理解上下文、创造连贯文本和解决问题。强调了从基础预训练到指令微调和对齐的多层训练方法的重要性。开篇介绍了语言模型的基础组件和Transformers的token预测。之后，分析了OpenAI的InstructGPT如何创新非任务特定微调，提高模型对细腻指令的响应力。最后说明了精心设计的交互提示的重要性，以及如何使这些高度复杂的模型与人类指令和价值观更好地对齐。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/nnxQjzPRnRUApbIMuhTU8g" target="_blank" rel="noopener noreferrer">《分布式系统模式 - 低水位标记(Low-Water Mark)》</a>。文章介绍了分布式系统中低水位标记(Low-Water Mark)机制，重点是如何管理日志文件的大小和保留时间以优化存储。探讨了两种低水位标记策略：基于快照的低水位标记和基于时间戳的低水位标记。文中以ZooKeeper和etcd为例，描述了周期性快照帮助确定可丢弃日志的边界，而Kafka则使用时间戳决定日志保留期。文章还深入讨论了etcd中快照和写前日志(WAL)如何结合使用以确保状态一致性，并对Kafka日志清理的基于时间和大小的策略进行了阐释。</p><p><a href="https://mp.weixin.qq.com/s/dPWImK8knB36ZUnueMdoEA" target="_blank" rel="noopener noreferrer">《Go 1.22引入的包级变量初始化次序问题》</a>。文章详述了Go 1.22版本对包级变量初始化顺序的改变。由于Go 1.22未在官方Release Note中提及变化，作者发现变量初始化顺序与文档描述相悖。经过详细分析和测试，作者推测Go 1.22将常量误视为未初始化变量，导致初始化次序变动。此问题被提交至Go官方GitHub(issue #66575)，并获确认，修复计划已纳入Go 1.23版本。文章还讨论了Go语言规范与实际编译器行为的一致性问题。</p><p><a href="https://mp.weixin.qq.com/s/MlS0rp5wM02z2WfDb7IgZw" target="_blank" rel="noopener noreferrer">《分布式系统模式 - 分段日志(Segmented Log)》</a>。文章着重讲述了日志分割技术对于处理大体量日志的重要性，并介绍了如何通过日志分割来映射日志偏移量，优化读写性能。文中详细举例了Kafka、etcd和MySQL的实际应用案例，说明分割日志和维护索引如何帮助它们高效地处理日志数据。特别指出Kafka如何通过分段和索引机制处理日志分段，详述了etcd中的分段日志管理，以及MySQL二进制日志的组成和查询方式，体现了分段日志模式在现代分布式系统中的实践价值。</p><p><a href="https://mp.weixin.qq.com/s/zq5V6zkVrAx-j8obm6YcIA" target="_blank" rel="noopener noreferrer">《Go singleflight 源码剖析》</a>。本文深入分析了 Go 语言中singleflight包的源码，讲解其如何通过Group和call结构体来防止缓存击穿，保障相同资源的请求在同一时刻只执行一次。详细解释了其中的核心机制，包括请求的合并和结果的共享等。文章还探讨了如何通过Do、DoChan和Forget方法来处理请求，确保函数调用的唯一性及结果的正确分发。通过对Result和panicError结构体的剖析，作者清晰展示了singleflight提供的错误处理和结果传递功能。</p><p><a href="https://mp.weixin.qq.com/s/3qTPyg17i7n1IiJuIYBOrA" target="_blank" rel="noopener noreferrer">《分布式系统模式 - Write-Ahead Log》</a>。本文探讨了Write-Ahead Log (WAL)在分布式系统中的关键作用，尤其在保证数据一致性和服务持续性方面的应用。作者解释了WAL用于节点间复制数据、容错和状态机复制技术，以保障数据不因服务器故障而丢失。同时，文章讨论了刷新操作的性能考量，日志数据的校验和纠错机制，以及利用幂等操作处理可能的重复记录。特别指出etcd项目如何运用WAL进行数据持久化，证实了WAL技术的实际效益和在集群同步中的作用，进而强调了复制日志在提高系统复原力和可靠性方面的价值。</p><p><a href="https://mp.weixin.qq.com/s/sCDRt8ziRk4PmFr9YyTyMA" target="_blank" rel="noopener noreferrer">《Go 创始人 Rob Pike:我们做对了什么?》</a>。文章由煎鱼撰写，回顾了Go语言创始人Rob Pike对Go的成功因素的思考。文章着重介绍了Go语言的设计理念，是为了提供一种更好的编写软件的方法，而不仅仅是一种新的编程语言。Rob Pike突出了Go的可爱吉祥物、强大的规范定义、出色的可移植性和兼容性、标准化的代码格式化工具Gofmt，以及强大的工具链等成功要素。文章还讨论了Go社区标准库的统一，以及多种编译器实现的可能性，这些因素共同促进了其现代编程环境的构建和业务发展。</p><p><a href="https://mp.weixin.qq.com/s/NKSKbIO2dV0-s5ix_DI2Ig" target="_blank" rel="noopener noreferrer">《最具研读价值的 Go 源码之一:context 包》</a>。这篇文章详细剖析了 Go 的 context 包源码，阐释了 Context 的回溯链和树形结构如何协同工作来实现级联取消操作。文章解读了 context 包如何在 Go 语言中为并发控制和超时控制等提供标准化做法，并展示了通过接口和几个关键结构体实现上下文管理。特别强调了 context 的四个主要方法：Deadline, Done, Err, Value 的实现以及使用场景，详细解说了使用 WithCancel, WithDeadline, WithTimeout, WithValue 方法创建和管理不同类型的 Context 对象，为理解并发请求管理提供了宝贵的视角。</p><p><a href="https://mp.weixin.qq.com/s/IckcTUDixrYocyM4liKP_w" target="_blank" rel="noopener noreferrer">《Go 负责人 rsc 翻车，决定追加 godebug 行》</a>。煎鱼撰写的文章讨论了 Go 核心团队负责人 Russ Cox 提出的新提案，即从 go.mod 中分离 GODEBUG 默认设置的变更。新提案应对了 Go 语言兼容性机制导致的一些问题，例如 GODEBUG 设置在依赖项更新时造成的冲突。提案引入了新的设置 <code>default=go1.X</code>，让基础设置和 <code>go 1.X</code> 行分离，从而允许在 go.mod 和 go.work 文件中设置模块级别的 GODEBUG。这变更确保了使用不同 Go 版本的同时可以保持不同版本的 GODEBUG 语义，提升了灵活性和兼容性。预计从 Go1.23 版本开始这一变更将正式生效。</p><p><a href="https://mp.weixin.qq.com/s/lg0uHTk0VjXC_RS5bMa8Hw" target="_blank" rel="noopener noreferrer">《抽象的艺术:Go 语言中的编程哲学》</a>。文章深入探讨了在 Go 语言编程中抽象的概念和实践。抽象被描述为不仅仅是隐藏细节的技术，更是提升代码质量和理解性的哲学。文章通过一个将比赛胜者计算器程序作为例子，展示了如何通过合理的函数组织提高代码的抽象层次。这使得逻辑更清晰、代码更易于理解，并且每个函数都有明确的目的。文章最终强调，良好的抽象是找到简洁与表现力之间的平衡，是编程艺术中的核心。</p><p><a href="https://mp.weixin.qq.com/s/D8vmIyQFhW8pC6okOSfjAA" target="_blank" rel="noopener noreferrer">《<!-- -->[<!-- -->]<!-- -->byte与string的两种转换方式和底层实现》</a>。小许在文章中深入探讨了 Go 语言中 <!-- -->[<!-- -->]<!-- -->byte 与 string 数据类型的转换方式及其底层实现机制。文章首先介绍了两种数据类型的基础知识，随后解析了两种常见的转换方式：一种是标准库方法，另一种是使用 unsafe 和 reflect 包的强转换方法。重点解释了强转换是如何通过指针操作避免内存分配来提升性能（零拷贝），并且指出这种方法虽然更高效，但需要小心处理可能的安全隐患。最后，提供了对 fasthttp 使用优化转换方式的分析，说明这种情况下的应用场景和益处。</p><p><a href="https://mp.weixin.qq.com/s/pTdymwNrhLCosw-ZCHcHeg" target="_blank" rel="noopener noreferrer">《图文讲透Golang标准库 net/http实现原理 -- 服务端》</a>。本篇文章详细介绍了Go语言标准库net/http在服务端的实现原理。通过代码示例和流程图解析，作者阐释如何在Go语言中启动HTTP服务并处理接收的请求。重点包括<code>http.HandleFunc</code>和<code>http.ListenAndServe</code>的使用，以及<code>Server</code>与<code>ServeMux</code>结构体的内部工作原理。文章详细解释了如何注册和匹配路由，以及如何通过Server的ServeHTTP方法处理客户端请求，达到理解Go语言http服务端核心处理流程和思路的目的。</p><p><a href="https://mp.weixin.qq.com/s/2k8hoOEny7rQJD5otz-H9A" target="_blank" rel="noopener noreferrer">《goroutine调度器揭秘 2》</a>。本文是对Go语言goroutine调度器的深入解析，内容继续之前文章的讨论，对Go的调度器在运行时的各个阶段进行了详细的剖析。作者参考了Go 1.21.1版本，讲解了schedule函数的工作机制，包括其如何永不返回地循环调用和所涉及的“栈切换”技术。文中还详述了调度器的核心函数findRunnable的实现逻辑，包括它是如何寻找可执行的goroutine的，以及多种场景下可能会调用schedule函数的过程。作者通过解释不同的调用函数和它们的使用场景，帮助读者理解Go调度器的工作原理。最后，文章承诺补充内容关于抢占式调度，并引导读者关注公众号以获取最新文章。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/JZE22Ndvo0tWC2P-MD0ROg" target="_blank" rel="noopener noreferrer">这些年背过的面试题——Netty篇</a></p><p><a href="https://mp.weixin.qq.com/s/v1P1vlqw-C2TxCpbNBDcmw" target="_blank" rel="noopener noreferrer">云原生最佳实践系列 4：基于 MSE 和 SAE 的微服务部署与压测</a></p><p><a href="https://mp.weixin.qq.com/s/VhpfORlmIlTMX5KFwXK0Dg" target="_blank" rel="noopener noreferrer">技术领导力之路 - 正反馈</a></p><p><a href="https://mp.weixin.qq.com/s/l4Y-L78DV_NokkggobWIdQ" target="_blank" rel="noopener noreferrer">深度 | 一条查询SQL的前世今生 —— ClickHouse 源码阅读</a></p><p><a href="https://mp.weixin.qq.com/s/XfTcUH02Ut-vPPWHiuprpA" target="_blank" rel="noopener noreferrer">看一遍就理解：IO模型详解</a></p><p><a href="https://mp.weixin.qq.com/s/O-auGP-1H3MO74kcTrC7Tw" target="_blank" rel="noopener noreferrer">工作多年，如何从 CRUD Boy 转型为分布式系统架构师？解锁分布式系统的艺术：从零开始理解分布式系统架构与设计原理！</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/2ejZrvHuvmoqf8_QMBqCTw" target="_blank" rel="noopener noreferrer">前端要学会自己写shell脚本，让你的项目看起来更优秀！</a></p><p><a href="https://mp.weixin.qq.com/s/SxZK5dKph-g-nbwAThOsZg" target="_blank" rel="noopener noreferrer">扩展你的前端知识库，毫无废话！【下】</a></p><p><a href="https://mp.weixin.qq.com/s/2bbbZ6jBWHmObHcL-lLNFQ" target="_blank" rel="noopener noreferrer">从流程上讲，如何用AI为前端开发提效</a></p><p><a href="https://mp.weixin.qq.com/s/i2MRvAicXCDZkHjO9gbgYQ" target="_blank" rel="noopener noreferrer">如何使用 Router 为你页面带来更快的加载速度</a></p><p><a href="https://juejin.cn/post/7320949203542409231" target="_blank" rel="noopener noreferrer">GPT自动投简历，一周斩获三offer，开源分享！</a></p><p><a href="https://mp.weixin.qq.com/s/DlvS7faM0H1a8NWzOBdWgw" target="_blank" rel="noopener noreferrer">一次给社区知名项目 Astro 的PR，如何点燃了我的开源之路</a></p><p><a href="https://mp.weixin.qq.com/s/y35QawST3An1olCgQy0z0g" target="_blank" rel="noopener noreferrer">MDH Weekly 124 - 《Code Like a Pro》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3月24日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月24日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月24日内容汇总"/>
        <updated>2024-03-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-cf4bb971d0691cfbaec4e4c72f360e95.png" width="900" height="520" class="img_astN"></p><p>封面图：Go 1.22 发布第一个安全补丁</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://docs.anthropic.com/claude/docs/prompt-engineering" target="_blank" rel="noopener noreferrer">《Prompt engineering》</a>。文章介绍了在使用Anthropic的Claude模型时，如何通过prompt engineering（提示设计）提升其性能。提示设计是一个经验科学，需要通过反复迭代和测试来优化提示的表现。文章建议定义清晰的任务和成功标准，并通过测试驱动的开发方法来优化提示。还包含了一些技术，比如清晰直白的指令、使用示例、赋予Claude特定角色、使用XML标记、分解复杂任务等，以提高输出质量和一致性。这些技巧帮助用户更好地利用Claude完成特定的用例。</p><p><a href="https://learning.snssdk.com/feoffline/toutiao_wallet_bundles/toutiao_learning_wap/online/article.html?item_id=7160681479788298504&amp;app_name=news_article" target="_blank" rel="noopener noreferrer">《Transformer前馈神经网络--Y=Wx+b公式却是人工智能领域的核心》</a>。这篇文章分析了Transformer模型中前馈神经网络的重要性，特别强调了其核心公式Y=Wx+b的重要作用。作者提到输入矩阵在经过multi-head attention机制和add&amp;norm操作后，由前馈神经网络经历两次线性变换和一次ReLU激活函数处理。这一过程确保无论输入数据如何变化，输出数据的维度都保持不变，从而保持数据的一致性并方便模型分析。</p><p><a href="https://v2ex.com/t/1000319" target="_blank" rel="noopener noreferrer">《Devv AI 是如何构建高效的 RAG 系统的》</a>。本篇文章探讨了Devv AI公司构建高效Retrieval Augmented Generation（RAG）系统的策略。RAG系统结合了语言模型、外部知识集合和特定场景所需知识，以提升搜索效能。作者提到，通过Go和Rust构建高并发架构、使用多种数据嵌入技术及优化召回机制来提高性能。文章指出，为了达到更高的效果，需要根据业务实际进行定制化优化，没有通用最佳实践，需要实际尝试和评估。</p><blockquote><p><a href="https://twitter.com/Tisoga/status/1731478506465636749?s=20" target="_blank" rel="noopener noreferrer">https://twitter.com/Tisoga/status/1731478506465636749?s=20</a></p></blockquote><p><a href="https://mp.weixin.qq.com/s/mt9W8Mf0LbZjbuRObyeWeQ" target="_blank" rel="noopener noreferrer">《OpenAI科学家Andrej Karpathy力荐，23年必读的大语言模型论文清单》</a>。文章由OpenAI的科学家Andrej Karpathy推荐，是对大语言模型(LLM)领域重要文章的整理。这份清单涵盖LLM的训练、运行、应用和未来发展方向，包括安全挑战。清单提及重要论文如《Attention Is All You Need》（提出了Transformer架构）、《Language Models are Unsupervised Multitask Learners》（关于GPT-2）、《Training Compute Optimal Language Models》等，并探讨了如何在现实世界中安全地集成并使用LLM。清单强调了追踪当前研究与保持思维前沿性的重要性。</p><p><a href="https://mp.weixin.qq.com/s/miNmrCt3brcPrrDXFe8rKA" target="_blank" rel="noopener noreferrer">《阿里出品!7B最强多模态文档理解大模型mPLUG-DocOwl 1.5》</a>。文章介绍了由阿里巴巴开发的mPLUG-DocOwl 1.5模型，这是一个7B参数级别的多模态大型语言模型（MLLM），专注于文档图片的结构化理解。模型通过统一的结构学习策略，在不同文档理解基准测试上取得了优异效果。文章提到了模型结构、训练策略、训练数据及其在多任务微调中的应用。mPLUG-DocOwl 1.5的性能在开源模型中处于领先地位，但与闭源模型相比在某些方面仍有差距。团队计划进一步优化并开源模型，促进社区的讨论与合作。</p><p><a href="https://mp.weixin.qq.com/s/mZbXfb99zOOjeL6DjrVfyA" target="_blank" rel="noopener noreferrer">《Good Data is All You Need，训练LLM数据是关键》</a>。本文探讨了在大型语言模型（LLM）训练中，数据的重要性、数据集的构成和数据质量。文章强调了高质量数据对模型性能的决定性影响，介绍了数据集应包含目标任务数据及相关迁移能力训练数据。文章详细讨论了在预训练、持续预训练和有监督微调阶段的数据混合策略，并指出避免“遗忘”问题的重要性。对于提升数据质量，建议提供丰富的任务信息和内逻辑，利于模型理解和泛化。最终，文章强调了结合数据多样性和解释性的必要性，以提升模型的学习效果和泛化能力。</p><p><a href="https://mp.weixin.qq.com/s/IdkFE-HuxGtDihlIc7BeDA" target="_blank" rel="noopener noreferrer">《融合RL与LLM思想，探寻世界模型以迈向AGI》</a>。本文深度分析了大型语言模型（LLM）与强化学习（RL）理论的结合，以及它们共同对人工通用智能（AGI）发展的影响。文章以AlphaGO、AlphaZero、AlphaDev这些模型为基础，讨论了深度学习和强化学习之间理论与实践的融合。重点探讨了Algorithm Distillation（AD）这一概念，这是将RL过程细粒度地嵌入到LLM中，使LLM能学习和压缩RL领域的深度洞察。此外，文章预测了AGI达到超人类智能（ASI）的潜在路径，并指出当前AI在LLM与RL层面上的缺失和未来发展的可能方向。</p><p><a href="https://mp.weixin.qq.com/s/zys9KvQWbbdRHkOyhzZqUw" target="_blank" rel="noopener noreferrer">《高性能 LLM 推理框架的设计与实现》</a>。文章从多个技术角度深入探讨了大型语言模型（LLM）的高性能推理框架设计。详细介绍了LLM推理的Prefill和Decoding两个阶段，以及测量推理性能的四个核心指标：吞吐量(Throughput)、首字延迟(First Token Latency)、延迟(Latency)和每秒请求数(QPS)。文章强调了Prefill阶段尽管计算量大但占比小，而Decoding阶段则数量庞大，是性能优化的关键。提出了多项优化策略，包括流水线前后处理、动态批处理和KV缓存量化等，有效提升系统的QPS和吞吐量。还讨论了包括FP8量化在内的多种硬件优化手段，旨在提供解决大模型高效推理的综合方案。</p><p><a href="https://mp.weixin.qq.com/s/-7Tz3g7cOV05rOyfA6XsvA" target="_blank" rel="noopener noreferrer">《超越 GPT-4V 和 Gemini Pro!HyperGAI 发布最新多模态大模型 HPT，已开源》</a>。HyperGAI团队推出的多模态大模型HPT，在多项基准测试中胜过GPT-4V和Gemini Pro。HPT包含HPT Air和HPT Pro两个版本，强调多模态理解并支持开源。HPT框架整合了视觉编码器和大语言模型，通过其创新组件H-former实现视觉与语言的紧密对齐。H-former处理视觉输入，生成可与语言模型联用的视觉嵌入。HPT在多模态数据集上的训练显示了其出色的理解、推理和创造力，尤其在MMMU及其它多模态测试中表现突出，同时展现了良好的泛化能力，这表明多模态大模型研究进展显著。</p><p><a href="https://mp.weixin.qq.com/s/77vlWgN6WkL3jL-6AJ0VAg" target="_blank" rel="noopener noreferrer">《大模型推理核心技术:Continuous Batching详解》</a>。文章深入探究了大模型推理中的Continuous Batching技术，从历史发展到现代架构进行了详尽的论述。阐释了在Transformer出现前后，Batching如何适应不同计算模型需求，特别是如何解决输入序列和批次大小变得可变的问题。分析了Continuous Batching的两种主要策略：ORCA框架的Iteration-level和Selective Batching，介绍了vLLM和FastGen等变种实现方法。通过对Continuous Batching在执行、资源管理、延迟均衡等方面的讨论，以及提及商汤LightLLM和TensorRT-LLM的应用案例，突出了该技术在推进AI服务效率的重要作用。</p><p><a href="https://mp.weixin.qq.com/s/vDPdgnKeYnLtHfN73ZJxRg" target="_blank" rel="noopener noreferrer">《第二篇:ChatGPT背后强大而神秘的力量:用最简单的语言讲解Transformer架构之Embedding》</a>。文章深入浅出地解释了Transformer架构中词嵌入（Embedding）的概念，包括其两种实现方法：稀疏表示法（如词袋模型和TF-IDF）和密集向量表示法（如Word2Vec和GloVe）。作者还介绍了如何使用欧氏距离、曼哈顿距离、点积和余弦距离计算词嵌入相似度的方法，并通过易懂的例子和代码实现。文章旨在让读者理解词嵌入对于语义理解的重要性，以及它在各种自然语言处理（NLP）任务中如何起到了核心的作用。</p><p><a href="https://mp.weixin.qq.com/s/_IrB7oWn-xckPi_QoAEu4g" target="_blank" rel="noopener noreferrer">《一文搞懂Transformer架构的三种注意力机制》</a>。本文是系列讲解Transformer架构的第四篇，重点讲解了核心组件注意力机制的三种形式。文章首先解释了注意力机制的概念，然后详细阐述了Transformer注意力层的工作原理，包括基础知识、理解Q、K、V矩阵，以及交叉、全局自注意力、因果注意力层的不同作用。此外，还介绍了位置编码，解释了其对位置信息的编码方式，以及如何通过正弦波函数来实现。文章最后描述了多头注意力机制，分析了其优势和如何通过将矩阵拆分为多个"头"来同时关注序列的不同特征。通过深入理解和比较这些注意力层与机制，文章帮助读者进一步认识Transformer模型的强大功能与效率。</p><p><a href="https://mp.weixin.qq.com/s/Jk-AK84sllBbkDDpvkv62w" target="_blank" rel="noopener noreferrer">《TensorRT-LLM初探(二)简析了结构，用的更明白》</a>。本文针对NVIDIA的TensorRT-LLM进行了深度解析，为使用者提供了一份快速入门指引。详细介绍了TensorRT-LLM的基本架构和组成，包含TensorRT库、FasterTransformer的设计以及其他组件，同时强调了大部分代码开源但包含一些闭源部分。还讨论了结合Triton Inference Server部署TensorRT-LLM的方式。文章解读了大模型推理过程中的动态batch（In-flight Batching）和Paged KV Cache技术，并提到了TensorRT-LLM对多卡支持的实现。最后，对于性能调优，还介绍了TensorRT-LLM独特的kernel性能优化以及量化策略。</p><p><a href="https://mp.weixin.qq.com/s/UFMxQB9sUC5I0y86nfzKjw" target="_blank" rel="noopener noreferrer">《谈谈我对 AIGC 趋势下软件工程重塑的理解》</a>。文章讨论了人工智能生成内容（AIGC）趋势对软件工程的影响，主要包括四个方面：AI作为软件开发不可或缺的部分、AI对软件研发的挑战和智能化机遇、企业实施软件研发智能化的策略与途径以及可落地的智能化软件研发工具。作者指出，在大模型时代，智能代码助手如Github Copilot显著提高了开发效率。AI的应用让开发者能专注于创新而非日常任务，而研发的智能化不仅改善了工作效率，还有助于处理软件本质的复杂性。文章还提到，利用AI工具如通义灵码可以增强个性化开发体验，并促进企业数字资产的增值。最终，作者建议采用分阶段方法实现软件研发智能化转型。</p><p><a href="https://mp.weixin.qq.com/s/eaKPOvww0mqjvtE2KS2YrA" target="_blank" rel="noopener noreferrer">《如何通过Vec2Text提升RAG的可解释性》</a>。这篇文章深入分析了Cornell University的研究团队发表的论文《Text Embeddings Reveal (Almost) As Much As Text》，介绍了一种名为Vec2Text的方法，它能从文本嵌入中恢复原始文本，有助于评估文本嵌入的隐私泄露风险。Vec2Text采用迭代修正的方式逐步重建文本，通过训练好的语言模型不断生成与目标嵌入更接近的文本。实验表明，Vec2Text在多个数据集和领域上能成功重建文本，显示出跨域文本恢复的有效性。同时，文章也探讨了Vec2Text的创新点、存在的不足，以及未来提高长文本恢复能力和减少嵌入模型查询次数的可能方向。</p><p><a href="https://mp.weixin.qq.com/s/eJMpoJCm0XcctRHrjfLhUQ" target="_blank" rel="noopener noreferrer">《Transformer扩散模型的先驱之作:DiT、PixArt、HDiT》</a>。文章综合介绍了三个重要的Transformer扩散模型结构：DiT、PixArt与HDiT，并对各自的特点和贡献进行了阐述。DiT以其可扩展性受到关注，通过遵循标准的Transformer架构进行设计，继承并改进了ViT的设计思想。PixArt由华为诺亚方舟实验室提出，是一个高效的文本到图像扩散模型，通过优化训练策略和数据集构造，显著降低了训练成本。HDiT则为Stability AI公司提出的沙漏形扩散Transformer，同样关注于图像生成。文章详细分析了这些模型的构造、优化和应用效果，展示了它们在图像生成领域的先进技术和潜力。</p><p><a href="https://mp.weixin.qq.com/s/F1FaJN1yUpDivuw0eoMcYA" target="_blank" rel="noopener noreferrer">《让 LLM 稳定输出 JSON》</a>。文章探讨了如何使大型语言模型（LLM）稳定输出 JSON 数据的方法，以及这些模型如何在高层次上工作。LLMs（如 ChatGPT 和 GPT-4）通常是自回归的，通过逐字预测来生成文本。文章介绍了原型系统 ReAct，这是一个通过Prompts来引导LLM产生特定格式输出的工具。通过训练，ReAct 可以解析工具名称和参数，以及调用工具和重复续写过程，直至获得最终答案。文章通过 COND_DATA_PROMPT 实践展示了如何生成用户问题的 JSON 结构，证明了在正确设定下，LLM 能可靠地输出所需的 JSON 格式，利用大模型的续写能力完成复杂的数据处理任务。</p><p><a href="https://mp.weixin.qq.com/s/vdr1WBCQVr9aS6bJYcdlRA" target="_blank" rel="noopener noreferrer">《没等来OpenAI，等来了Open-Sora全面开源》</a>。文章报道了Colossal-AI团队开源了一个类似OpenAI Sora视频生成模型的版本——Open-Sora 1.0，该模型包括完整的训练和数据处理过程。Open-Sora采用了Diffusion Transformer（DiT）架构，引入空间-时间注意力机制的STDiT模型。模型通过三个阶段：大规模图像预训练、大规模视频预训练和高质量视频数据微调，逐步提升生成质量。GitHub上提供的资源让AI爱好者可以轻松复现并生成视频内容，实现了在视频生成方面的成本节约与效率提升。团队承诺持续优化项目，实现更好的视频内容生成。</p><p><a href="https://mp.weixin.qq.com/s/mWQGmp7eCMRnDxcgqicKQw" target="_blank" rel="noopener noreferrer">《刚刚!马斯克开源 Grok:参数量近 Llama 四倍，成全球最大开源模型》</a>。本篇文章详述了马斯克通过其AI公司xAI开源了GroK-1，这是一个具有3140亿参数的混合专家系统模型，是迄今为止开源模型中最大的一个。它的参数量是Llama模型的四倍多，尽管如此，谷歌的switch transformer以1.6T参数保持公开记录。这次开源使用的是Apache-2.0许可，提供基本模型权重和网络架构，未针对特定应用进行微调。文章分析了开源背后的意图，其中包括与Meta保持一致、增加xAI在AIGC市场的吸引力，以及对于开源大型AI模</p><p><a href="https://mp.weixin.qq.com/s/xlSl1vDSBJnLBQto4_gltQ" target="_blank" rel="noopener noreferrer">《一文掌握大模型提示词技巧:从战略到战术》</a>。本文作者分享了在与大型语言模型合作时编写有效提示的战略和战术技巧。文章详述了如何制定清晰、具体和避免歧义的提示词原则、提供了详细示例，并讨论了用户输入完整性检查、结构化提示词及其优化等方面的技巧。作者强调了结构化的提示可以显著提高大模型的效能，使其输出更符合预期，还探讨了使用AI技术优化提示词的方法。</p><p><a href="https://mp.weixin.qq.com/s/LGCzkOvAfm68HpLmdJPu6g" target="_blank" rel="noopener noreferrer">《详解常见的几种LLM fine-tuning算法》</a>。本文详细解读了针对大型语言模型(Large Language Models, LLM)的几种微调(fine-tuning)算法，包括LoRA、QLoRA和AdaLoRA。文章讨论了各算法优化模型参数的方式，如LoRA通过低秩矩阵适应，QLoRA在此基础上增加量化优化和AdaLoRA通过奇异值分解的方式进行适配，以期在使用较少资源的情况下维持或提高模型性能。这些算法均旨在在保证效率和效果的同时，减少微调过程中的资源消耗。</p><p><a href="https://mp.weixin.qq.com/s/hvt5zwoazDx26KOaKuTs_w" target="_blank" rel="noopener noreferrer">《马斯克开源Grok-1:3140亿参数迄今最大，权重架构全开放，磁力下载》</a>。本文报道了马斯克旗下的大模型公司xAI宣布开源大模型Grok-1及其全部权重和架构，Grok-1为迄今参数量最大的开源语言模型，包括3140亿参数的混合专家模型。Grok-1从未进行过针对特定任务的微调，展现出在编程及推理任务上的优异能力。开源模型为研究人员与技术社区提供强大工具，助力创新，尽管也存在潜在的数据污染和资源需求挑战。文章还提及xAI公司的长期目标和研究方向，反映出对开放科学和技术发展的致力。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://juejin.cn/post/7298347391164743707" target="_blank" rel="noopener noreferrer">《Rust 中的 Clone-on-Write(Cow)类型:灵活的数据处理》</a>。这篇文章详细介绍了 Rust 语言中的 Clone-on-Write（即 Cow）类型，它是一种优化内存使用的策略，极大提高了数据处理的灵活性和效率。文章阐释了 Cow 类型的概念、优势和具体用法，举例展示了如何在读取大型数据结构或需要效率高的场合使用 Cow，特别是在读多写少的情况下以减少不必要的复制开销。文章还讨论了 Cow 类型在多线程编程中的应用，如何通过减少锁的使用来提高性能。作者提供了一系列的 Rust 代码示例，帮助读者理解和掌握 Cow 类型的正确使用方法，对于追求效率与内存安全的 Rust 开发者来说，是一份实用的参考资料。</p><p><a href="https://mp.weixin.qq.com/s/t6sJX1IeTNn1u-kSW5ju8A" target="_blank" rel="noopener noreferrer">《K8s 无备份，不运维!》</a>。本文详细介绍了Kubernetes集群的备份与恢复策略，强调备份作为投产前的必要步骤。文中介绍了两种备份方法：物理备份（etcd备份）和逻辑备份（velero备份）。物理备份执行简单，但只能整体恢复；逻辑备份提供内容选择性备份，允许细粒度控制。恢复流程中详细阐述了停止kube-apiserver，停止etcd，数据恢复，启动etcd及kube-apiserver的顺序步骤，保证了集群数据的稳定恢复。文章还提供了具体的备份恢复脚本和命令，并说明了它们在备份制定、执行和集群恢复中的应用。</p><p><a href="https://mp.weixin.qq.com/s/deInGh6vuhlVcmIXJyofpw" target="_blank" rel="noopener noreferrer">《Go singleflight:防缓存击穿利器》</a>。这篇由陈明勇撰写的文章讲解了如何使用Go语言的singleflight包来预防缓存击穿问题。文章阐述缓存击穿的定义，并介绍了mitigation策略，如使用永不过期的缓存键、互斥锁和提前更新策略。singleflight通过合并并发请求并共享单一结果来缓解这一问题，这样即使多个goroutine请求同一缓存键，数据获取的操作只会被执行一次。通过Group结构和Do方法，singleflight确保并发请求不会同时执行相同的数据获取，大幅降低数据库负载。文章还分享了使用例子和最佳实践，包括键设计和超时控制策略。</p><p><a href="https://mp.weixin.qq.com/s/PsGlXQWObV8b2WlTp47AMA" target="_blank" rel="noopener noreferrer">《Go 1.22 发布第一个安全补丁》</a>。本文作者杨文介绍了Go团队发布的最新补丁版本Go 1.22.1和Go 1.21.8，这对Go 1.22系列而言是首个安全补丁。该补丁解决了包括<code>html/template</code>, <code>net/http</code>, <code>net/http/cookiejar</code>, <code>net/mail</code>, <code>crypto/x509</code>在内的5个安全问题，例如修复了使用未知公钥算法时的panic错误，以及<code>net/http</code>包在处理HTTP重定向时错误转发敏感信息的问题。文中也引用了相关的GitHub issues链接，并强调了更新的紧急性和重要性。</p><p><a href="https://mp.weixin.qq.com/s/X27RCToY-jn-KNChL7OA5g" target="_blank" rel="noopener noreferrer">《运维人少，如何批量管理上百个微服务、上千条流水线?》</a>。文章讲述了在微服务和云原生技术背景下，如何通过云效应用交付平台AppStack高效地管理大量微服务和流水线。平台提供了应用模板功能，让使用相同技术栈的应用可以快速初始化。通过两种方式：一是直接使用或按需修改提供的示例模板；二是企业自定义模板配置。此外，通过应用模板修改实现应用配置的批量升级，简化了部署流程和权限管理，大幅提升了运维效率，实现了“解放双手”的管理方式。文章还描述了实现这一批量管理的具体操作步骤。</p><p><a href="https://mp.weixin.qq.com/s/vnU4-u4c1LawH2DWm0NBoA" target="_blank" rel="noopener noreferrer">《Go 团队近两年在做什么，AI 方面如何发力?》</a>。煎鱼在文章中分析了Go团队近两年的发展动态及其在AI领域的规划。Go团队在增加泛型、提高向后/前兼容性、增强软件供应链安全性、完善标准库、提升性能、改进Go IDE等方面取得了显著成果，同时，Go正计划对生成式AI进行深入研究。重点探索提高Go代码生成质量、对已有代码的现代化处理、以及在VSCode IDE中如何有效提示Go代码。文章强调了Go团队依据社区反馈和与业内大客户的联系来进行决策，并对未来AI协助工具的发展抱有积极的态度。</p><p><a href="https://mp.weixin.qq.com/s/mAUmnDxzwntwW4uA2i2q3g" target="_blank" rel="noopener noreferrer">《Goroutine调度器揭秘》</a>。文章深入解析了Go语言中Goroutine调度器的工作原理，详细介绍了Goroutine（G）、机器线程（M）和逻辑处理器（P）如何交互，形成了高效的M:N调度模型。描述了Goroutine的三种状态：等待、可运行、正在运行，并讲述了它们的生命周期管理。其中，调度器通过“工作窃取”机制使线程（M）在处理器（P）间动态分配Goroutine，从而实现了高效的并发执行。同时，Network Poller负责网络 I/O 的异步处理，避免了阻塞操作。文章强调了Go语言在简化并发程序设计上的优势，尤其是在Goroutine的轻量和调度策略方面。</p><p><a href="https://mp.weixin.qq.com/s/ND-2f3DKZ24iR0PAnY8uIA" target="_blank" rel="noopener noreferrer">《golang sync.Map之如何设计一个并发安全的读写分离结构?》</a>。文章解析了Go语言<code>sync.Map</code>的并发安全的读写分离设计结构。详述了<code>sync.Map</code>采用的读优先策略和"懒惰"同步机制，使用只读的<code>read map</code>和写入的<code>dirty map</code>通过原子操作和锁机制实现高效的读操作和写入的安全性。读操作优先从<code>read map</code>读取，降低锁的竞争；写操作更新<code>dirty map</code>，并根据读miss次数决定何时将<code>dirty</code>更新为<code>read</code>。<code>sync.Map</code>适用于读多写少场景，写多的场景下性能会下降，因为频繁同步和上锁操作会增加开销。</p><p><a href="https://mp.weixin.qq.com/s/zMgc9erIruK-CzooUtCg6g" target="_blank" rel="noopener noreferrer">《Kubernetes HPA 的三个误区与避坑指南》</a>。文章针对Kubernetes水平弹性扩容（HPA）存在的三个认知误区进行了深入分析，并提供了避免错误的指南。第一误区是HPA的扩容死区，第二是利用率计算方法误解，第三是弹性行为的滞后性。作者明确了HPA操作的工作原理、度量源、指标计算方法，和扩缩的行为策略，着重强调合理配置和理解HPA可以最大化其效率和效果。文章以用户在使用HPA时的常见问题为基础，提供实践中的有效“避坑”策略，有助于改善服务的弹性管理和资源利用。</p><p><a href="https://mp.weixin.qq.com/s/74glhCZ_GeiEvp_6hugbBw" target="_blank" rel="noopener noreferrer">《容器运行时-Containerd容器管理》</a>。本文详细讲解了Containerd容器管理的基础命令和操作过程，包括创建静态容器、查看容器、操作容器任务以及容器的启动和删除。特别指出，静态容器需要通过<code>ctr tasks</code>启动成为动态容器，以及如何查看容器进程和资源使用情况。文中还解释了使用<code>exec</code>进入容器进行操作的步骤，并展示了如何利用<code>ctr task</code>命令来管理容器的生命周期，如启动、暂停、恢复和删除容器进程，为Containerd容器运行时的用户提供了实用的管理指南和技巧。</p><p><a href="https://mp.weixin.qq.com/s/BWdhmZSmWGqSEZuRJSUjmQ" target="_blank" rel="noopener noreferrer">《更强大的Go执行跟踪能力》</a>。文章探讨了Go中<code>runtime/trace</code>包的功能强化，详细介绍了跟踪工具的最新进展。其中包括对执行跟踪开销的降低，现在大多数应用的CPU开销已减至1-2%，以及执行跟踪的扩展性提升。介绍了“飞行记录”技术，持续收集跟踪数据至关键事件发生，当发生错误时能够回溯。同时，分享了一个新的实验性跟踪读取器API，使得程序执行跟踪的分析更加容易和高效。这些进展旨在解决过去跟踪中遇到的问题，如高开销和可扩展性问题，提高Go程序的诊断能力。</p><p><a href="https://mp.weixin.qq.com/s/KhpoegAiclw3IyVf5CCUZw" target="_blank" rel="noopener noreferrer">《某些情况下，合理使用指针将大大提升程序的运行效率》</a>。本文由老貘撰写，探讨了通过合理使用指针来提升Go程序性能的策略。文章讨论了如何避免在循环中进行不必要的数组空指针检查，这是Go编译器v1.18的一个缺陷，通过代码示例展示如何将性能优化至最佳。进一步，文中还讨论了当数组指针是一个结构体字段时的特殊情况，提供了不同的方法和基准测试结果，指出了编译器优化的局限性，最后建议在可能的情况下使用切片来提高性能。文章深入浅出，为开发者提供了Go语言性能优化的有效技巧。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/Za6EMzkpUA-Z4qm3Qoh2Tw" target="_blank" rel="noopener noreferrer">《为什么不要在Spark中执行这个操作，详解DataFrame collect源码流程》</a>。本文作者Tim分析了Spark中DataFrame的<code>collect()</code>操作的弊端及其源码执行流程。文章指出，大量使用<code>collect()</code>可能导致程序慢速运行或挂掉，这与处理大数据量、内存不足、网络延迟、分区数过多和数据倾斜等问题有关。通过深入解析<code>collect()</code>的执行细节，从<code>withAction</code>函数到<code>DAGScheduler</code>的<code>runJob</code>方法再到<code>TaskScheduler</code>的任务调度，Tim详细阐述了该操作如何通过多个Spark组件协同工作完成作业的划分、调度和执行，进而指导开发者在合适的场景使用<code>collect()</code>操作以及可能的性能优化策略。</p><p><a href="https://mp.weixin.qq.com/s/3PPJI-m-m06nXgXfNwxzlA" target="_blank" rel="noopener noreferrer">《大厂Spark面试题，搞懂这些绝对稳稳的》</a>。文章由作者分享了一系列Spark面试题，并提供详细解答，帮助准备技术面试的人士深入理解Spark。内容涵盖了lineage理解、处理数据倾斜、Spark的DataFrame API、RDD的优缺点、不同缓存级别的使用时机、广播变量、内存管理、窄变换与宽变换的区别、数据序列化等核心概念，并深入讨论了如何解决大数据集处理、连接优化、数据倾斜问题、性能瓶颈诊断以及处理嵌套JSON数据等高级话题。对Spark RDD排序、内存管理、区别于Hive的Spark分区等高阶问题也进行了探讨，适合打算进入大厂或想要深化Spark知识的开发者阅读。</p><p><a href="https://mp.weixin.qq.com/s/uCt6Vwy8097rFBrCSxYmdQ" target="_blank" rel="noopener noreferrer">《腾讯文档收集表后台重构:改造一个巨石单体!》</a>。腾讯技术团队分享了他们对腾讯文档收集表服务进行后台重构的经验。原系统为C++风格的巨石单体服务，存在严重的业务逻辑耦合、接口分离不足、稳定性差和可观测性不足等问题。在重构过程中，团队通过业务模块化、架构松耦合设计、存储隔离、性能提升和增强可观测性等措施，提高了系统的稳定性和开发效率。通过使用现代化的技术栈和架构模式，成功缩小故障爆炸半径，提升了业务稳定性和服务质量，实现了在保持业务不断线的情况下进行系统升级。</p><p><a href="https://mp.weixin.qq.com/s/fg2Dy0Dbhcrn5QaNydp1WQ" target="_blank" rel="noopener noreferrer">《这些年背过的面试题——JVM篇》</a>。本文详细介绍了面试中经常问到的JVM相关问题和答案，涉及JVM内存划分、对象创建步骤、垃圾回收机制与算法、类加载过程和双亲委派机制等核心话题。文章深入探讨了JVM的内存区域、类加载机制、垃圾收集器类型与选择依据、以及JVM性能调优和新特性等内容。还提供了如何进行现场问题排查的实用建议，包括如何使用各种命令行工具查询JVM状态信息，至关重要的内存泄漏和性能瓶颈分析，以及解决故障的各个步骤。对于准备Java面试的求职者以及需要加深对JVM理解的Java开发者来说，本文是一篇宝贵的学习资源。</p><p><a href="https://mp.weixin.qq.com/s/bgLQQO2uNKbHxd9OSRvqpg" target="_blank" rel="noopener noreferrer">《Kafka Consumer 消费消息和 Rebalance 机制》</a>。本文深入探讨了Kafka消费者的消费机制与Rebalance机制。解释了消费组的概念，以及消费者如何进行消息的消费操作，包括订阅主题、拉取消息、提交位移等步骤。重点讲解了Consumer客户端的配置参数，例如bootstrap.servers、group.id、auto.offset.reset、max.poll.records等。文章也详细分析了Rebalance机制的触发条件和分区分配策略。最后提供了一系列基于Kafka消费者的高频面试问题，如命令行工具的使用、Kafka Producer的执行过程、消息的有序性保证、线程安全性等，为Kafka用户和求职者提供了宝贵的参考信息。</p><p><a href="https://mp.weixin.qq.com/s/MQAX7YyVbm96RB73FMfQ1Q" target="_blank" rel="noopener noreferrer">《40 张图搞懂分布式追踪》</a>。楼仔在本文中详述了分布式追踪系统的原理及应用实践，特别是在微服务架构中如何追踪请求调用路径与分析性能问题。文章介绍了OpenTracing标准规范、分布式追踪核心概念如Trace、Span、SpanContext，并绘制直观示意图说明整个分布式追踪机制如何运作。文中具体分析了SkyWalking框架的自动数据采集、context跨进程传递、traceId的全局唯一性保证和性能优化的关键技术与实现方式。通过实际案例，展示了如何整合SkyWalking到现有监控体系并进行个性化插件扩展，让读者深刻理解分布式追踪在微服务环境下的关键价值和技术细节。</p><p><a href="https://mp.weixin.qq.com/s/JTWdbs2anBSusGwdI7s5ag" target="_blank" rel="noopener noreferrer">《小红书离线数仓提效新思路，提升百倍回刷性能》</a>。本文由黄猿、马尔科和凌波三位作者共同撰写，介绍了小红书为提升离线数仓的效率与性能，转而采用StarRocks数据仓库引擎替代Spark的部分任务。通过引入StarRocks，小红书成功将任务资源消耗大幅降低，数据产出时间提前，回刷时间及成本分别减少了90%以上。文中详细讲解了数仓分层设计、数据回刷机制、资源优化策略以及StarRocks的核心技术，包含向量化查询加速、物化视图、Colocation Join等。此外，文章还展望了未来探索StarRocks在湖仓一体和存算分离场景的应用。</p><p><a href="https://mp.weixin.qq.com/s/pGWS0QHwPWf5Ry2hdPLaeA" target="_blank" rel="noopener noreferrer">《ElasticSearch常见用法，看这一篇就够了(文末送书)》</a>。本文为ElasticSearch的入门教程，详细介绍了其基本概念和常用操作，如索引的创建、查询、删除以及文档的增删改查。特别强调了ElasticSearch的分布式特性、全文搜索能力及Query DSL的高级查询功能。文中通过具体的RESTful API示例，使读者能够快速掌握每个操作。此外，还涵盖了高亮查询、分页、排序等高级功能，文章用清晰的结构为读者提供了ElasticSearch实用性和灵活性的全面了解，并在文末提供了一本关于ElasticSearch的进阶书籍赠送。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://juejin.cn/post/7344719913019277323" target="_blank" rel="noopener noreferrer">《在 2023 年屌爆了一整年的 shadcn/ui 用的 Headless UI 到底是何方神圣?》</a>。文章探讨了 shadcn/ui 这个在 2023 年大受欢迎的 React UI 组件库，及其基础——Headless UI 的概念和优点。Headless UI 是一种前端开发模式，将 UI 逻辑和样式分离，让开发者能够构建无样式但包含完整逻辑和功能的组件。文章讲解了 Headless UI 的起源、发展历程，以及为何在现代前端开发中变得如此重要。此外，作者分析了传统 UI 组件的限制和 Headless UI 的应用场景，强调了它的灵活性、定制性和轻量级特点，并提出在跨平台和定制化高的项目中，Headless UI 是非常适合的选择。</p><p><a href="https://juejin.cn/post/7331996679548485667" target="_blank" rel="noopener noreferrer">《年底了，聊聊在字节做了一学期工程化的心路历程》</a>。该文章由一位在字节跳动实习并从事工程化工作的作者分享了他的实习经历和心得。文章讲述了作者如何从一名对工程化知之甚少的实习生，在mentor的引导下，通过实际项目实践，逐渐积累经验并在工程化领域取得了质的飞跃。具体的工作内容包括实现monorepo项目支持路径别名源码引用、主项目构建工具的升级、lint工具的升级以及新增CI卡点等。整个实习过程中，作者不仅学习到了如何实际应用工程化知识，还体会到了工作中的成就感与挑战，并鼓励其他开发者通过实践来提升自己的工程化能力。</p><p><a href="https://mp.weixin.qq.com/s/-KLst5tr-jfo0lHdm7mH4g" target="_blank" rel="noopener noreferrer">《托文档搜索的福，我终于在实战中用上了AI!》</a>。广州小井在文章中分享了他使用人工智能文本向量化技术来解决文档搜索中的“语义模糊”问题。文中详细讲述了ElasticSearch在处理关键词搜索时的局限性，并介绍了向量化搜索的原理和应用。作者首先阐述了向量化能够有效地处理自然语言的非结构化数据，然后通过Milvus向量数据库实现搜索功能，以便在类似情况下有效检索出内容相关的文档。此外，文章还讨论了如何通过NLP模型将文本转化为向量，并将这些向量嵌入数据库中，以改善搜索的精确度。</p><p><a href="https://mp.weixin.qq.com/s/9Qp_tcHyn_rneFM_ES3LZw" target="_blank" rel="noopener noreferrer">《云音乐会员支付链路优化实践》</a>。云音乐团队展开了对会员支付链路的多方位优化实践，以应对营收业务增长带来的稳定性和支付效率挑战。优化包括对收银台性能的提升，采用RN离线包、拆包以及Hermes引擎优化页面加载速度，以及在IAP支付流程中预取数据和集成StoreKit 2 来降低错误率并提升支付成功率。此外，也通过支付SDK升级、动态导入等技术手段，改进RN应用加载时的性能。优化结果显示在技术指标和业务指标上有明显提升，提高了用户购买体验和订单转化率。</p><p><a href="https://mp.weixin.qq.com/s/N4CdVvl8O672bUOqEU3nag" target="_blank" rel="noopener noreferrer">《Vue3中我是这样玩Echart的》</a>。本文介绍了作者在Vue3和TypeScript环境下，如何使用ECharts库进行数据可视化图表的开发。作者详细描述了基础的ECharts图表设置与渲染流程，并介绍了如何通过自定义Hook <code>useEcharts</code> 来优化图表实例的处理。同时，文章还探讨了如何实现一键换肤功能，包括色彩主题的动态切换和自定义色彩选择，以及如何基于 <code>tvision-color</code> 库生成配色方案。这篇文章对于前端开发者在实现复杂的图表展示与交互功能时提供了实用的指南和技术参考。</p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3月17日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月17日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月17日内容汇总"/>
        <updated>2024-03-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-ffb8f11e1c31c2d1464780924ffb5d89.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Safe by construction - Roberto Clapis</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/2VTiWmu1zoWF3sfSLvuJ-w" target="_blank" rel="noopener noreferrer">《首个AI软件工程师Devin完整技术报告出炉，还有人用GPT做出了「复刻版」》</a>。该文章介绍了机器之心报道的 Cognition AI 团队发布的首个 AI 软件工程师 Devin。Devin 在不需要人类辅助的情况下，在 SWE-bench 基础测试中解决了 13.86% 的问题，远高于目前 SOTA 模型的解决率。SWE-bench 是一个复杂的软件工程系统自动化基准测试，用以测试系统解决现实世界代码库中问题的能力。文章还展示了 Devin 在多步规划和定性案例分析中的表现，并说明了其运行方式和评估标准。同时，报告了社区已经产生了复刻版的 Devin，展示了 AI 在软件工程领域的先进能力和潜在的行业变革。</p><p><a href="https://juejin.cn/post/7345690943076089856" target="_blank" rel="noopener noreferrer">《大模型基础应用框架(ReACT\SFT\RAG)技术创新及零售业务落地应用》</a>。本篇文章由九数算法中台分享，探讨了在零售行业中融入大模型技术应用框架——ReACT、SFT（指令微调）、RAG（检索增强生成）的创新与实际应用。文章提出了这些大模型技术在解决特定领域知识不足、减少内容幻觉、确保数据安全等方面的挑战，并详述了如何通过有监督微调来提升大模型在零售领域的专业知识水平。同时，介绍了京东在多个业务试点应用自研的SFT框架和RAG技术，突显了大模型在零售业务中从理论到实践的转换，以及在多种复杂使用场景中的潜在价值。</p><p><a href="https://mp.weixin.qq.com/s/QBORpQmZrumppLl81aWAxA" target="_blank" rel="noopener noreferrer">《南洋理工发布多模态金融交易Agent，平均利润提高36%！》</a>。本文介绍了南洋理工大学发布的多模态金融交易Agent，通过融合大语言模型（LLMs）和多模态数据处理，提高了金融交易的效益。传统基于规则的交易系统在适应市场波动方面存在不足，而基于强化学习的系统虽然适应性更好，但在处理多模态数据和可解释性方面仍面临挑战。该文中提出的FinAgent是一种先进的多模态基础代理，能够综合分析多种形式的金融数据，提供精确的市场趋势分析和决策支持。实验证明，使用FinAgent进行金融交易可以平均提高36%的利润。论文链接：<a href="https://arxiv.org/pdf/2402.18485.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2402.18485.pdf</a></p><p><a href="https://mp.weixin.qq.com/s/kek5xGP96UOJ3Rpfw3V-FQ" target="_blank" rel="noopener noreferrer">《大模型推理:A100/H100 太贵，何不用 4090?》</a>。本文介绍了大模型推理时，为什么可以考虑使用4090显卡。相比于A100和H100显卡，4090在性价比上更高，尤其在极致优化的情况下，甚至可以达到H100的2倍性能。文章指出，A100、H100和4090在算力方面的差距并不大，最大的区别在通信和内存方面。由于大模型训练使用高性能的通信，4090通信效率相对较低，因此在大模型训练中并不适用。然而，在推理（inference/serving）方面，4090在性价比上有优势，尤其是相对于H100显卡而言。文章还提到了GPU的训练性能和成本对比，以及大模型训练所需的算力和GPU数量等问题。详细内容可参考文章链接。</p><p><a href="https://mp.weixin.qq.com/s/tKVHsoR_opgBqtCMDHbv6Q" target="_blank" rel="noopener noreferrer">《精度提升!南加大等 | 提出分治Prompt策略，提升LLM分辨力》</a>。本文介绍了一种基于分治算法的Prompt策略，旨在提高大语言模型（LLM）的分辨力。现有的提示策略在处理涉及重复子任务和含有欺骗性内容的任务时存在一定限制。为了解决这个问题，研究人员提出了一种基于分治算法的提示策略，利用分治程序来引导LLM的求解过程。该策略将任务划分为子问题并分别求解，然后合并子问题的答案。通过实验证明，这种分治策略能够提升模型在大整数乘法、幻觉检测和新闻验证等任务中的性能，相比传统提示策略具有更好的准确率和性能指标。论文地址：<a href="https://arxiv.org/pdf/2402.05359.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2402.05359.pdf</a></p><p><a href="https://mp.weixin.qq.com/s/sxgfJf4vxvaxhO5L7-Npwg" target="_blank" rel="noopener noreferrer">《开源版“Devin”AI程序员炸场:自己分析股票、做报表、建模型》</a>。这篇文章介绍了一个基于MetaGPT的开源项目Data Interpreter，该项目旨在处理数据实时变化、任务之间的复杂依赖关系、流程优化需求以及执行结果反馈的逻辑一致性等挑战。通过演示，展示了Data Interpreter在分析股票、预测葡萄酒质量、自动抠图、预测疾病进展和预测机器运行状态等方面的能力。该项目由MetaGPT团队与多所高校合作推出，提供了一种自主进行数据分析和建模的开源工具。</p><p><a href="https://mp.weixin.qq.com/s/n98IZHs7LTXMzzS3KmHvrA" target="_blank" rel="noopener noreferrer">《【原创】一文读懂RAG的来源、发展和前沿》</a>。本文介绍了检索增强生成（RAG）技术，该技术结合了检索和生成过程，旨在提高机器生成文本的相关性、准确性和多样性。文章详细解释了幻觉问题的存在以及解决幻觉问题的几种常见方法。RAG利用外部数据源进行信息检索，将检索到的信息作为上下文输入到生成模型中，从而帮助生成正确的响应。讨论了RAG的核心部件，如向量数据库、查询检索和重新排序。同时介绍了RAG在知识图谱和树结构方面的拓展。</p><p><a href="https://mp.weixin.qq.com/s/NoREsyLXNVk1aABtSkhBDA" target="_blank" rel="noopener noreferrer">《万字长文解析:大模型需要怎样的硬件算力》</a>。这篇文章探讨了大模型在算力、存储、通信等多个方面上硬件资源的挑战和瓶颈。文章分析了以Transformer结构为核心的大模型在算力瓶颈、显存瓶颈和通信瓶颈方面的困境，以及当前所采取的硬件资源优化技术。此外，文章还提供了对大模型参数量和算力需求的量化估算，为选择合适的硬件设备和评估资源需求提供了指导。</p><p><a href="https://mp.weixin.qq.com/s/lbLOqiW-DoHq_S9qpYcbCQ" target="_blank" rel="noopener noreferrer">《什么是好的大模型训练数据?》</a>。本文基于Lilian Weng的博客，讨论了大模型如LLM在训练过程中对高质量数据的需求。认为高质量数据来源于“高质量人类”产生的标注数据，并强调了数据处理的重要性，提到了数据标注、质量控制和错误修正的重要步骤。文章还讨论了用于评估数据质量的多种方法，如Influence Functions和Noisy Cross-Validation，并提出了专注于“搭建高质量的数据标注pipeline”的企业方向。最后指出，在AI时代大量产出的数据中维护数据质量，是一个值得关注的挑战。</p><p><a href="https://mp.weixin.qq.com/s/dA757HASxJPYuAbRZ7KvUQ" target="_blank" rel="noopener noreferrer">《读过的最白话讲清楚RAG原理的文章》</a>。这篇文章直观地阐释了检索增强生成（RAG）的概念和工作原理，它是一种结合检索和生成的问答系统。该系统首先通过检索步骤找到与用户问题最相关的知识库内容，然后将这些内容与问题共同输入大型语言模型（例如ChatGPT）以生成答案。文章详细介绍了如何利用嵌入模型对知识库文本进行索引，以便协助语言模型进行精确的检索。此外，它还探讨了语义搜索背后的核心原则和技术细节点，如何通过嵌入找到与用户输入最匹配的知识，以及如何格式化文档以供语言模型使用，以便获得更高效的回答。</p><p><a href="https://zhuanlan.zhihu.com/p/685794495" target="_blank" rel="noopener noreferrer">《LLM推理算法简述》</a>。本文介绍了用于提高大型语言模型(LLM)推理性能的关键技术与策略。内容涵盖显存优化方法，如KV Cache减少显存浪费、MQA和GQA减少KV-Cache数量、Page Attention进行显存管理，以及提高推理速度的FlashAttention改进。文章还探讨了算子融合技术，比如FasterTransformer和DeepSpeed Inference的应用，以及调度优化策略如Async Serving和Dynamic Batch，最后介绍了用于处理大模型的分布式并行技术。这些优化手段能显著提高LLM推理过程中的性能与效率。</p><p><a href="https://mp.weixin.qq.com/s/V8Tz5X81FlOva9B6bCprqg" target="_blank" rel="noopener noreferrer">《数学推理增强!微软 | 提出数据合成框架:KPDDS，微调Mistral-7B性能超34B模型!》</a>。微软的研究团队为提升大型语言模型(Large Language Models, LLMs)在数学推理任务的性能，提出了关键点驱动的数据合成(KPDDS)框架。KPDDS利用真实数据源中的关键点和示例对生成高质量问答对来训练语言模型。研究者基于此框架创建了KPMath数据集，进一步结合推理密集型数据形成KPMath-Plus数据集。在MATH测试集上，微调后的Mistral-7B模型达到了39.3%的零样本通过率，超越了数量更多的34B模型，证明了KPDDS的有效性与创新性。这一成果标志着LLMs在数学推理方面的性能得到显著提升。</p><p><a href="https://mp.weixin.qq.com/s/QkkYAilf4_XZyBRqSIEL2Q" target="_blank" rel="noopener noreferrer">《首个AI软件工程师上线!已通过公司面试抢程序员饭碗，华人创始团队手握10块IOI金牌》</a>。在这篇文章中介绍了由华人创立的Cognition AI公司开发出来的首个人工智能软件工程师Devin。与现有GPT-4等模型不同，Devin能够独立完成复杂的编程任务，并已成功通过人工智能公司的面试和在自由职业平台Upwork上接单。得益于Cognition AI在长期推理和规划方面的进步，Devin在做决策和执行任务时，能回想相关上下文、随时间学习并修复错误。这标志着人工智能在理解真实世界软件工程问题方面取得了突破，为AI领域迈向更高层级的自动化及监督性工作开辟道路。</p><p><a href="https://mp.weixin.qq.com/s/q_lgeiXFzTU4WEt9wpUG3w" target="_blank" rel="noopener noreferrer">《向数字世界AGI迈进!智能体已经从头开玩「荒野大镖客 2」了》</a>。这篇文章展示了如何使用Cradle这一通用计算机控制智能体框架进行AI的研究与应用，在无需内部API支持下控制键盘和鼠标以及与各类软件交互。文章来源于北京智源人工智能研究院、新加坡南洋理工大学和北京大学的联合研究。Cradle由六大模块组成，包括信息收集、自我反思、任务推断、技能管理、行动计划和记忆模块。这些模块让智能体能够自主进行决策和任务执行。研究团队通过将Cradle部署于《荒野大镖客 2》这一复杂的3A游戏中证明其通用性，Cradle能够自主完成游戏主线和探索开放世界。智能体的这种通用能力标志着智能体研究向通用人工智能（AGI）迈进的重要一步。</p><p><a href="https://mp.weixin.qq.com/s/U2472bnEvCE9lMPP-z0ysw" target="_blank" rel="noopener noreferrer">《深入浅出 LangChain 与智能 Agent:构建下一代 AI 助手》</a>。文章深入讲解了LangChain工具箱及其如何赋能智能Agent，以构建更加智能的AI助手。LangChain利用大型语言模型如GPT-4，提供了一个开源软件框架，可助力开发者搭建基于语言模型的应用。它提供了六大类组件，如模型、提示模板、索引、文档加载器、文本分割器和向量存储，让GPT-4等模型不仅能处理语言，还能与外部API互动、管理用户上下文。文章以构建人脸技术问题排查助手为例，展示如何运用LangChain来协助问题诊断与智能交互，朝向自主、高效的智能应用发展。</p><p><a href="https://mp.weixin.qq.com/s/AAkITPRodLzvl61oALEI2Q" target="_blank" rel="noopener noreferrer">《使用零一万物 200K 模型和 Dify 快速搭建模型应用》</a>。本文详细介绍了如何使用零一万物的200K模型和Dify（LLM IDE）快速构建模型应用程序。作者首先对一个机器学习电子书进行翻译，并分享了源代码，然后引导读者如何申请和配置零一万物模型API。随后，作者说明了如何使用Dify IDE快速搭建和调试模型应用程序，以及如何使用Golang和AI模型自动化电子书的翻译过程。最后，作者总结了自动翻译程序的构建过程并展示了批量翻译内容的方法。整篇文章不仅是使用Dify的实操指南，还提供了一种效率化、自动化处理文本内容的示例，适合那些在寻找快速开发和集成大语言模型到应用中的开发者参考。</p><p><a href="https://mp.weixin.qq.com/s/-9H0mLnvebzaLMaI6EKB6g" target="_blank" rel="noopener noreferrer">《一文看完多模态:从视觉表征到多模态大模型》</a>。本文为读者系统梳理了图文多模态与多模态大模型领域的发展，尤其聚焦在视觉表征和视觉与文本融合方法上。文章从卷积神经网络（CNN）及其预训练方法开始讲起，从图像处理的视角介绍了多模态融合的初期方法，如LXMERT、VL-BERT和UNITER等。进一步，文章论述了Vision Transformer（ViT）及其预训练方案如MAE和BEIT，以及基于ViT的多模态对齐与预训练技术，如CLIP和VILT等。作者通过丰富的示例和对比，使读者能够理解这些模型在结构和功能上的不同与联系，为进一步研究提供了宝贵的资源和视角。</p><p><a href="https://mp.weixin.qq.com/s/k7b55PKdLA622G6Qb5Q0hA" target="_blank" rel="noopener noreferrer">《浙大&amp;中科院让Agent学会自我进化，玩德州扑克心机尽显》</a>。Wenqi Zhang等研究者介绍了名为Agent-Pro的AI智能体，它使用大模型(GPT-4)为基础，配合自我优化的策略，能够运用虚张声势、主动放弃等复杂策略玩转德州扑克和21点等非完美信息博弈游戏。Agent-Pro的设计使其能够自我进化，适应复杂和动态的游戏环境，并通过策略层面的反思和世界模型的优化来提高自己的表现。该研究展示了AI在博弈领域的进步，同时为解决多agent现实世界问题提供了新策略。</p><p><a href="https://mp.weixin.qq.com/s/ZG3CuhZisI26taz4FQrdPg" target="_blank" rel="noopener noreferrer">《面向工业级推荐!“小”LLM也能做好推荐系统》</a>。本文由蚂蚁集团AI创新研发部门NextEvo撰写，介绍了他们的论文《Can Small Language Models be Good Reasoners for Sequential Recommendation?》获得WWW 2024 (Oral)录用。文章针对大语言模型（LLM）在推荐系统应用时代价高昂的问题，提出了一种名为SLIM的基于蒸馏的大模型推荐框架。SLIM通过知识蒸馏技术，将大模型的知识和推理能力迁移到较小的模型上，从而达到用更少参数实现高效推荐的效果。论文强调SLIM在处理长尾物品和新用户推荐的优势，改进了传统基于交互数据的推荐系统偏差问题，并在保持推荐准确度和可解释性的同时降低资源消耗。</p><p><a href="https://mp.weixin.qq.com/s/P7gOETO-EG3Ha7WjGs6Szg" target="_blank" rel="noopener noreferrer">《AIOps 智能运维:有没有比专家经验更优雅的错/慢调用分析工具?》</a>。本文介绍了阿里云应用实时监控服务 ARMS 最新推出的错/慢 Trace 分析功能。此功能不依赖专家经验，能对比分析错/慢 Trace 和正常 Trace 的每个维度，从而快速定位问题根源。针对生产环境下调用时延和错误调用的多种因素（如流量不均、单机故障等），ARMS 通过对错/慢 Trace 和正常 Trace 的对比，帮助用户发现异常的共同特征，从而定位到具体问题。这个工具提供了一种优于传统专家经验的快速、有效诊断系统问题的方法，并且附有最佳实践案例。文章最后提供了免登录的 demo 体验链接，引导用户了解和使用该功能。</p><p><a href="https://mp.weixin.qq.com/s/9RaOOrroywQKnOhanBApsA" target="_blank" rel="noopener noreferrer">《CUDA编程优化方法——Memory coalescing》</a>。这篇文章对CUDA编程中的内存合并技术—— Memory coalescing进行了详细介绍。文章首先解释了全局内存的特点以及为何访问速度慢，并阐述了Memory coalescing的目的是通过合并内存访问操作来有效地利用带宽。通过对多维数组的存储方式及访问模式的解析，文章进一步讲解了Memory coalescing的具体实现细节，如何在多维数组访问和矩阵乘法中实现内存访问的合并。最后，文章提供了优化策略，以改进计算的内存访问模式，并提高CUDA内存传输的效率。</p><p><a href="https://mp.weixin.qq.com/s/b6D-vipDxKtlyocbxTObVQ" target="_blank" rel="noopener noreferrer">《扩散模型如何构建新一代决策智能体?超越自回归，同时生成长序列规划轨迹》</a>。本篇文章介绍了扩散模型在强化学习中的多种应用场景，探讨了如何超越传统的自回归方法，同时生成长序列规划轨迹来模仿人类的决策过程。上海交通大学的团队所作的综述梳理了扩散模型在强化学习中的运用如轨迹规划、策略表征、数据合成，及其解决长序列规划误差累积、策略表达能力受限和数据稀缺等问题的巨大潜力。最终，文章对扩散模型未来的发展方向进行了展望，提出了生成式仿真环境、加入安全约束、检索增强生成及组合多种技能等多个研究方向。</p><p><a href="https://mp.weixin.qq.com/s/GII5CwvB4FuxkT7yzyf_4Q" target="_blank" rel="noopener noreferrer">《动手做一个最小RAG——TinyRAG》</a>。本文由不要葱姜蒜指导读者如何一步步实现基于检索增强生成技术（RAG）的简化模型——TinyRAG。TinyRAG仅包含RAG核心功能，即Retrieval（检索）和Generation（生成）两个模块。文章详细介绍了RAG的基本结构，包括向量化模块、文档加载与切分模块、数据库和检索模块，以及如何根据检索内容生成回答。此外，还提供了对应的开源项目<a href="https://github.com/KMnO4-zx/TinyRAG" target="_blank" rel="noopener noreferrer">代码</a>，助力理解语言模型与RAG的原理，并能够在实践中加以应用和拓展。</p><p><a href="https://mp.weixin.qq.com/s/1jTw_5_re4GWWLqgKnkSww" target="_blank" rel="noopener noreferrer">《聊一聊Transformer中的FFN》</a>。这篇文章探讨了为什么Transformer的前馈神经网络（FFN）部分长期以来几乎没有大的改动。文章通过比较不同的激活函数，如ReLU、GeLU和Swish等，分析它们在Transformer中的应用效果和局限性。同时探讨了线性投影的必要性、参数量及其对模型容量和记忆力的影响。此外，文章还涉及了混合专家模型（Mixture-of-Experts，MoE）以提升Transformer的效率，并讨论了构建通用人工智能（AGI）所需要的结构特性，特别是放缩定律（Scaling Law）、上下文学习（In-Context Learning）、效率提升（Better Efficiency）和终生学习（Life-long learning）的重要性，最后对未来结构创新给出透彻见解。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://go.dev/blog/execution-traces-2024" target="_blank" rel="noopener noreferrer">《More powerful Go execution traces》</a>。Go的runtime/trace包提供了用于理解和排查Go程序的强大工具，允许对goroutine的执行进行跟踪。新版本Go大幅度降低了执行跟踪的运行时开销，从多数应用中的10-20% CPU下降到1-2%。文章介绍了如何通过将trace分割，从而使得trace可以扩展且保持低开销，还实现了飞行记录功能，使得即使在事件发生后也能从trace中获取信息。Go也提供了一个实验性的trace读取API，使程序性的跟踪分析成为可能。</p><p><a href="https://mp.weixin.qq.com/s/TQpK1NiCkLJHecy-nPBAtA" target="_blank" rel="noopener noreferrer">《Go 和 Google、Cloud 融合的那么深，绝非偶然》</a>。文章作者煎鱼分析了 Go 语言与 Google 和 Cloud 融合深度的背后原因。从 2010 年 Go 在 Google 起步，到 2013 年 Google SRE 团队采用 Go 替换 Python，以及 Go 与 Kubernetes、Docker、Etcd 等云原生技术的结合，文章追溯了 Go 成功的关键节点。2016 年至 2017 年，Go 在 Google 内部增长放缓后，团队提出将 Go 应用拓展至 Cloud 领域，并最终获得了管理层的支持。加入 Cloud 部门后，Go 成为了 Cloud 的一部分，得到了更多的发展机会。文章强调，Go 与 Google 的核心开发者亲自推广及高密度的人才对 Go 发展起到了关键作用。预计未来 Go 将在云原生生态中继续崭露头角。</p><p><a href="https://mp.weixin.qq.com/s/vFe8ggFqYcm_GQ9gcmrcxw" target="_blank" rel="noopener noreferrer">《Uber 出了个代码静态分析工具 NilAway，还挺实用!》</a>。文章介绍了 Uber 开发的新静态分析工具 NilAway，它专门用于在 Go 程序编译时捕获可能导致 nil panic 的问题，以减少生产中的潜在错误。NilAway 的特点包括完全自动化、快速性能和实用性，并且在大型代码库上也表现良好。通过具体代码例子，文章展示了 NilAway 如何识别出可能导致 nil panic 的代码，并提供了安装方式和使用方法。该工具基于 go/analysis 标准开发，未来有望与 golangci-lint 等工具集成，值得关注其更新和开发进展。</p><p><a href="https://juejin.cn/post/7346394191264710666" target="_blank" rel="noopener noreferrer">《Rust: 实现比特币的交易模型》</a>。本文详细介绍了比特币的交易模型中的UTXO（未花费交易输出）模型，并使用 Rust 语言来实现和展示其运作过程。UTXO 模型与传统的账户余额模型不同，将用户的余额分散存储在多个UTXO中。每个UTXO代表比特币网络上一笔可用于未来交易的输出。文章解释了UTXO模型的工作原理、优势以及交易处理流程，包括选择输入、生成输出、签名交易和广播交易。接着，文章提供了一个 Rust 实现的简化示例，展示了如何定义交易结构体、输入、输出以及UTXO集合，并介绍了基本的操作方法。如果你对比特币交易模型和 Rust 编程感兴趣，可以阅读该文章了解更多细节。</p><p><a href="https://juejin.cn/post/7309692103055507491" target="_blank" rel="noopener noreferrer">《深入理解 Go Modules: 高效管理你的 Golang 项目依赖》</a>。本文详细介绍了 Go Modules 在 Golang 项目中的使用方法和原理。文章首先回顾了 Go 依赖管理的历史，从 GOPATH、Go Vendor 到 Go Module 的演进过程。然后讲解了模块、包和版本的概念，包括模块路径、包路径以及版本的格式和语义。接着，文章介绍了 Go Modules 的环境配置，包括 go env 环境变量和依赖管理文件（go.mod 和 go.sum）的作用和使用方法。最后，文章提供了一些实用技巧和常见问题的解答，帮助读者更好地理解和应用 Go Modules。如果你对 Golang 项目的依赖管理感兴趣，可以阅读该文章了解更多详情。</p><p><a href="https://mp.weixin.qq.com/s/GxTtiqMpcrDWK9toaK5CMw" target="_blank" rel="noopener noreferrer">《Kubernetes集群节点处于Not Ready问题排查》</a>。当Kubernetes集群中的节点显示为"Not Ready"状态时，这篇文章提供了一系列的排查步骤。首先，通过运行特定的kubectl命令来确认节点的状态并获取节点详细信息，检查可能的错误消息或者警告。接着，进入节点系统查看各种系统日志，并使用相关命令如grep、cat或tail来辅助分析。文章还建议检查kubelet服务状态和配置文件，确认系统资源是否充足，试图解决可能存在的磁盘空间和网络问题。最后，通过使用诸如ping、traceroute等诊断工具确保节点能够与主节点通信，并检查重要的网络端口是否开放。确保Kubelet能正确连接到Kubernetes API，并使用Kubernetes的诊断工具如kubectl get componentstatus检查组件状态。通过这些步骤，可以系统地排查并解决"Not Ready"的问题，保持集群健康。</p><p><a href="https://mp.weixin.qq.com/s/iuzDw7_w20jtjJUlynv9NA" target="_blank" rel="noopener noreferrer">《Go 错误处理: 用 select-case 来解决这个历史难题?》</a>。煎鱼在这篇文章中介绍了一个新的Go语言错误处理提案，这个提案尝试用<code>select-case</code>结构作为错误检查的替代。这个新语法允许在<code>select</code>关键字之后声明一个变量为“陷阱”，赋值给该变量时触发<code>case</code>检查，以减少传统的<code>if err != nil</code>检查的繁琐性。新提案保持了Go1代码的兼容性，尝试提供一个更简洁、向后兼容的错误处理方式，尽管目前社区内对此仍未达成共识。</p><p><a href="https://mp.weixin.qq.com/s/Dc5wOBAE_jSiTKqPc6M4Dg" target="_blank" rel="noopener noreferrer">《K8s蓝绿部署:优雅应对应用程序更新挑战》</a>。本文详细探讨了使用Kubernetes（K8s）进行蓝绿部署的方法，以达到无缝更新应用程序并最小化宕机时间。蓝绿部署是一个运行两个相同生产环境的模式，能够在更新时切换流量，确认无误后便去除旧环境。文章指导了从创建命名空间、创建和应用部署、服务及其路由规则、执行蓝绿切换，到最后的验证和回滚过程。这一过程不仅优化了应用版本的滚动更新，也为开发者提供了快速回滚的方案，以应对可能出现的问题。</p><p><a href="https://mp.weixin.qq.com/s/RzglzZ0xY9NmsgujdHa-Tw" target="_blank" rel="noopener noreferrer">《Go 中的高速数据包处理:从 net.Dial 到 AF_XDP》</a>。文章介绍了使用 Go 语言进行高速数据包处理的多种方法，包括 net.Dial、原始套接字、系统调用、pcap 和 AF_PACKET，直至最新的 AF_XDP 方式。作者详细对比了每种方法的性能，从简单的 net.Dial 模式演进到 AF_XDP，逐步提高数据包每秒处理数量，同时指出各方法的使用场合和限制。通过基准测试，发现使用 AF_XDP 可实现最高性能，处理速度是使用 net.Dial 方法的4倍多。这些技术探讨对于需要大量网络数据包处理的场景，如网络监控、性能评估等都是非常重要的。</p><p><a href="https://mp.weixin.qq.com/s/dCQPOx2n2w36Q3P3hCKe8A" target="_blank" rel="noopener noreferrer">《数据库不应放在容器中?- B站Kubernetes有状态服务实践(Elasticsearch/Clickhouse)》</a>。文章探讨了在云原生时代下，有状态服务（如生产环境的数据库）是否适用于容器化并由Kubernetes进行管理的问题。以B站Elasticsearch和Clickhouse的容器化和Kubernetes编排实践为例，文章详细介绍了在容器环境中部署这些有状态服务的挑战和解决方案，包括控制器的选择、持久化存储、磁盘调度、调度器、容器网络、服务发现以及如何保证集群和数据的高可用性。作者分享了通过Operator管理有状态服务应用、使用本地盘PV提升性能、LVM技术的动态扩缩容方案以及通过macvlan进行容器间高效通信的技术细节。</p><p><a href="https://mp.weixin.qq.com/s/-TXbvQiR-tpB0RgQ5d-QDw" target="_blank" rel="noopener noreferrer">《一文带您探索 Kubernetes 中的容器类型》</a>。文章介绍了在 Kubernetes 系统中常见的四种容器类型：初始化容器(Init Container)、边车容器(Sidecar Container)、临时容器(Ephemeral Container)和多容器(Multi Container)。初始化容器用于运行 Pod 中主容器启动前的准备工作，而边车容器则与主应用容器并行运行，为其提供支持服务。临时容器主要用于故障排除，而多容器 Pods 允许并行运行多个容器，共享资源和数据。文章提供了每种容器的详细使用案例、配置方法和命令，并强调了各自的特点与应用场景。</p><p><a href="https://mp.weixin.qq.com/s/iylZAKZfxLL6SYruww_8zA" target="_blank" rel="noopener noreferrer">《4 秒处理 10 亿行数据! Go 语言的 9 大代码方案，一个比一个快》</a>。软件工程师Ben Hoyt挑战使用Go语言处理10亿行数据，并提出了9种解决方案，其中最快在4秒内完成。这些方案只使用Go标准库，包括简单但优化的map处理、并行化处理等。Ben的方案虽未最快，但展现了独立思考的价值。他的测试表明，彻底地数据处理和算法优化可显著提高性能，减少计算成本。</p><p><a href="https://mp.weixin.qq.com/s/aS-azhReZL5epoG_3n0hyg" target="_blank" rel="noopener noreferrer">《Go arena 民间库来了，可以手动管理内存!》</a>。文中作者煎鱼介绍了Go语言的一个新的第三方库ortuman/nuke，这个库允许开发者手动管理内存。文章首先回顾了Go官方对于arena手动内存管理提案的停滞现状，然后重点介绍了如何使用ortuman/nuke库进行内存管理，包括库的安装、使用案例以及如何在并发场景下保持线程安全。文章详细讲解了arena内存管理的优点，例如高效率和一次性释放，并对库的实际用法，如通过context在HTTP请求周期中管理内存，进行了展示。最后，基于性能考虑，文章还提供了并发与非并发业务场景下的基准测试结果以及性能差异。</p><p><a href="https://mp.weixin.qq.com/s/xRxRe6DkWJVcGKXOt1oGlQ" target="_blank" rel="noopener noreferrer">Go 语言中如何大小端字节序？int 转 byte 是如何进行的</a></p><p><a href="https://mp.weixin.qq.com/s/USKjmlyTtexSQtToOg481g" target="_blank" rel="noopener noreferrer">Go 中如何实现三元运算符？Rust 和 Python 是怎么做的</a></p><p><a href="https://mp.weixin.qq.com/s/mFZewdDxlK4O_wUWR6mVjg" target="_blank" rel="noopener noreferrer">Go语言中 enum 实现方式有哪些？一定要绝对类型安全吗</a></p><p><a href="https://mp.weixin.qq.com/s/obOG_Kior34ktLek3_-GZg" target="_blank" rel="noopener noreferrer">Go 中如何打印结构体？ 代码调试效率提升</a></p><p><a href="https://mp.weixin.qq.com/s/9ARiVYpYRy4FCuSJ5IKuGw" target="_blank" rel="noopener noreferrer">《快看! Go 1.22 对for循环进行了两个大更新》</a>。文章讨论了Go语言在 1.22 版本中针对for循环作出的两项主要更新：1. 每次迭代的for循环都将定义一个新的变量，不再共用同一个变量；2. 引入了对整数范围的循环迭代支持。这些更新解决了闭包在并发执行时共享变量带来的问题，同时也简化了循环结构，提高了编写对整数范围进行迭代代码的方便性。文中提供了详细的代码示例来展示新旧版本之间的差异，并说明了如何利用新特性来编写更高效的Go代码。</p><p><a href="https://mp.weixin.qq.com/s/lxp9OqiVAHtoX75UoaHipw" target="_blank" rel="noopener noreferrer">《从慢速到SIMD》聊Go边界检查消除》</a>。本文讨论了Go语言中边界检查消除（BCE）的相关技巧和最佳实践。文章首先回答了为何在Go代码中优化时选择使用<code>a[i:i+4:i+4]</code>而不是<code>a[i:i+4]</code>的问题，指出前者能减少编译器工作量从而提高性能。然后，介绍了Go101提出的BCE技术详解与应用实例，以及如何使用编译命令来检测边界检查的存在。文中还全面梳理了Go BCE技术的发展历程，以及在不同场景下消除冗余边界检查的方法，包括利用循环变量、常量索引等策略来提高代码执行效率。最后，提供了多种编程技巧以及相关讨论和参考资料，针对遇到的编程问题提出解决方案。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/pufzm-rIWMMnFl-ObJ-A9w" target="_blank" rel="noopener noreferrer">《RocketMQ 流存储解析:面向流场景的关键特性与典型案例》</a>。文章探讨了 RocketMQ 5.0 版本中流存储的关键特性，并针对流处理场景下的数据集成提供了详细解析。主要介绍了流存储访问模式与消息访问模式的区别，强调了流存储在大数据集成中起到异步解耦的作用。文章详细解释了 RocketMQ 5.0 版本对流存储弹性的新方案，包括静态 Topic 扩容模式和逻辑队列的引入，旨在解决传统弹性机制的限制。此外，文章还讲述了流场景对消息存储系统的高吞吐和状态维护要求，并举例了如何通过 CompactTopic 维护流状态。介绍了 Schema 概念的引入，以支持消息结构描述、提高类型安全并提升数据集成效率。最后，文章展示了流存储应用于日志采集和异构数据库同步的案例，以阐明其在实际数据架构中的作用。</p><p><a href="https://juejin.cn/post/7329413905028579340" target="_blank" rel="noopener noreferrer">《分库分表已成为过去式，使用分布式数据库才是未来》</a>。本文讨论了随着Mysql数据库性能下降，分库分表的局限性及其所引发的问题，如性能、事务、数据迁移等，并提出使用分布式数据库作为解决方案。文章详细介绍了TiDB这款分布式数据库的架构、特性和优势，包括其金融级的高可用性、水平扩容能力、兼容性以及云原生设计。文章强调TiDB在处理大规模数据时的效率和可维护性，终结分库分表的做法，并通过性能测试展示了TiDB与MySQL在不同场景下的性能表现。最终总结，对于数据量大的应用场景，采用TiDB来适应未来数据存储的需求是一个更优的策略。</p><p><a href="https://juejin.cn/post/7337247324681093129" target="_blank" rel="noopener noreferrer">《手把手带你精简代码-京东零售后端实践》</a>。本文分享了京东零售后端在面临代码库日渐庞大和腐化的问题时，采用的代码精简方法。文章分为背景介绍、代码精简步骤和实施方法三部分，着重介绍了使用IntelliJ IDEA自带工具和PMD插件进行静态代码检查的步骤、配置和优缺点，以及如何借助京东jacoco流水线进行动态代码检查。本文旨在降低代码维护成本、提升可理解性，并详细阐述了代码精简的实践过程和预期结果。</p><p><a href="https://mp.weixin.qq.com/s/ZSXAPM8oFiCGztqbs1kksQ" target="_blank" rel="noopener noreferrer">《跟着iLogtail学习无锁化编程》</a>。文章探讨了在多线程情况下，如何通过无锁化编程优化软件性能。详细讲述了iLogtail在实现无锁高效日志采集时采取的策略，比如自旋锁的使用、原子操作、内存顺序、内存屏障等概念。还分析了不同类型的锁的适用场景与特点，包括互斥锁、递归互斥锁和读写锁等。此外，文章还描述了如何将大的锁细分为多个小锁，通过降低锁粒度提升并发性能，以及在iLogtail中如何通过双Buffer机制来读写分离，减少锁的争用。最终，通过无锁化编程提高了iLogtail的日志采集性能，实现了低资源消耗和高性能。</p><p><a href="https://mp.weixin.qq.com/s/GtU4xBKzfK3q3IsPuQV6pQ" target="_blank" rel="noopener noreferrer">《MYSQL 是如何保证binlog 和redo log同时提交的?》</a>。文章讨论了如何确保在MYSQL中binlog（备份和主从同步用的日志）与redo log（InnoDB引擎层的日志，用于崩溃恢复）同步提交，以及为什么这一点对于防止主从数据不一致至关重要。文中解释了事务处理中的两个关键参数：<code>innodb_flush_log_at_trx_commit</code>和<code>sync_binlog</code>，这两个值设置为1时可以确保两种日志的同步提交。该文还介绍了MYSQL的两阶段提交机制如何工作，并提出了业务开发中两阶段提交逻辑的思考，指出在有依赖关系的服务操作中，通过预锁定资源、请求成功后递减资源来保持数据的最终一致性。</p><p><a href="https://mp.weixin.qq.com/s/jVKgmbvha6Q-iNxvVzg3nw" target="_blank" rel="noopener noreferrer">《这些年背过的面试题——分布式篇》</a>。本文从分布式系统的基础概念、发展历程及核心问题出发，详细介绍了分布式系统设计中的关键技术点。文章涵盖了负载均衡、服务的拆分与集群、分布式事务、数据一致性问题以及分区容错性等话题，并探讨了CAP理论与BASE理论在实际应用中的权衡。同时，文中还详细解读了常见的一致性算法如2PC、3PC、Paxos、Raft的机制和用例。此外，作者针对如何实现分布式Session、如何确保分布式事务的一致性等常见面试题目提供了详尽的解答，适合做为面试备考资料。</p><p><a href="https://mp.weixin.qq.com/s/y1-A-SHAkGdg9IOTeUtPxg" target="_blank" rel="noopener noreferrer">《RocketMQ为什么这么快?我从源码中扒出了10大原因!》</a>。这篇文章详细分析了RocketMQ高性能的10个关键因素：批量发送消息降低通信次数，消息压缩减少带宽和存储压力，基于Netty的高效网络通信模型，零拷贝技术优化磁盘读写性能，顺序写提高数据写入速度，高效数据存储结构，异步机制包括异步刷盘和异步主从复制提升存储效率，批量处理减少网络通信次数和资源消耗，锁优化以及线程池隔离提升并发处理能力。作者通过深入分析源码给出了RocketMQ快速处理和拉取消息的内在原因，并深入讨论了每种技术的优势和实现。</p><p><a href="https://mp.weixin.qq.com/s/39t_G3InMtHg9ETj_xYR7Q" target="_blank" rel="noopener noreferrer">《领导叫我接手一个新业务系统，我是这样熟悉项目的!》</a>。本文作者小许分享了接手新业务系统的熟悉流程和实践方法。包括与产品经理交流了解业务现状，绘制用例图、ER图以明确业务与数据模型，梳理后端模型和核心流程，并运用状态机流转图和时序图深度解析复杂逻辑。最后，还提到了绘制类图以理解代码结构。文章提供了一套系统性的工具和方法，目的是帮助新成员或负责新项目的开发人员快速掌握业务逻辑，有效推进项目进度。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/GqSoZR3bSeuLWiULHt8Zvg" target="_blank" rel="noopener noreferrer">《Tango 低代码引擎沙箱实现解析》</a>。本文介绍了Tango低代码引擎的沙箱实现。Tango是一个用于快速构建低代码平台的低代码设计器框架，通过对源代码进行执行和渲染前端视图，实现了低代码可视化搭建能力。借助Tango构建的低代码工具或平台可以实现源码进出的效果，并与企业内部现有的研发体系进行无缝集成。Tango的设计器引擎部分已经开源，并提供了相应的开源代码库、文档和社区讨论组。欢迎加入社区参与到Tango低代码引擎的开源建设中。更多相关文章可以在文中提供的链接中找到。</p><p><a href="https://mp.weixin.qq.com/s/U6ZQwLiW5sfkknz_bayosg" target="_blank" rel="noopener noreferrer">《未来只需要 2% 的程序员?》</a>。DHH在这篇文章中提出一个激进的观点，预测未来程序员的需求可能会大幅度减少。他比较了农业从97%的人口需求降至2%的变迁，暗示软件开发也可能面临着类似缩减。尽管这个行业曾经经历招聘热潮，但现在许多程序员面临职业前景不稳定。文章讨论了人工智能的发展给程序员职业带来的压力，同时也指出职业变革的不确定性。DHH认为，未来大多数程序员可能无需手动编程，但同时指出科技行业将更加融合进社会，并提高了它的价值。他鼓励程序员接受这一变化，并享受行业的黄金时代。</p><p><a href="https://mp.weixin.qq.com/s/tiolzTwPKPZF4b8zZbvYpA" target="_blank" rel="noopener noreferrer">《前端智能化，扣子(coze.cn)能做什么?》</a>。这篇文章探讨了扣子（coze.cn）平台如何通过提供一个简单的交互式界面来创建聊天机器人（Chatbot）。用户通过与扣子的对话，可以快速设置一个Chatbot，如自动化微信订阅号内容发布等。文章强调了平台的易用性和界面友好性，同时指出了一些潜在缺点，包括无法解决深度问题和偶尔遇到的技术故障。另外，通过知识库和数据库的集成，可进一步提升Bot的功能。作者对扣子的机器人创建过程、优势、建议和改进进行了详细介绍，并通过实操案例展示了前端智能化机器人的搭建过程。</p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3月10日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月10日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月10日内容汇总"/>
        <updated>2024-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/maxresdefault-5b23cca3601cf7ebe54f3cb5023d859a.jpg" width="1280" height="720" class="img_astN"></p><p>封面图：Understanding the Go runtime - Jesus Espino</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://arxiv.org/abs/2401.11624" target="_blank" rel="noopener noreferrer">《In-context Learning with Retrieved Demonstrations for Language Models: A Survey》</a>。这篇题为 "In-context Learning with Retrieved Demonstrations for Language Models: A Survey" 的文章，主要讨论了语言模型，尤其是大型预训练语言模型如何通过获取的演示进行少量情景学习。这项技术能有效地改进学习过程的效率和可扩展性，并降低手动选择样例时的固有偏见。文章对此领域进行了广泛的研究回顾，对检索模型、检索训练过程和推理算法的不同设计选择进行了讨论和比较。</p><p><a href="https://mp.weixin.qq.com/s/NUhEy0YLTjtzY3BGVXhfrw" target="_blank" rel="noopener noreferrer">《碾压LoRA！Meta &amp; CMU | 提出高效大模型微调方法：GaLore，内存可减少63.3%》</a>。Meta和CMU合作提出了一种新的大模型微调方法——Gradient Low-Rank Projection（GaLore）。GaLore通过梯度的低秩投影代替权重的低秩适配，不仅支持全参数学习，而且显著降低了内存占用，减少了63.3%的内存需求。不同于LoRA的低秩权重更新，GaLore利用权重梯度的低秩特性，结合逐层权重更新和8位优化器，有效地优化了内存效率。此外，GaLore还引入了可调整的超参数，提高了其适应性。经实验验证，GaLore的表现优于LoRA，尤其是在预训练模型微调上表现更佳，为大模型训练提供了新的解决策略。</p><p><a href="https://juejin.cn/post/7316592794109198387" target="_blank" rel="noopener noreferrer">使用 GPT4V+AI Agent 做自动 UI 测试的探索 | 京东云技术团队</a></p><p><a href="https://mp.weixin.qq.com/s/ZSDCNDRu-tCkOlC9jz2j4w" target="_blank" rel="noopener noreferrer">Gemini修bug神了！录网页视频把代码库甩给它就行，网友坐不住了：想要访问权限</a></p><p><a href="https://mp.weixin.qq.com/s/GXwftkv-UpDQSjiTMn9TFA" target="_blank" rel="noopener noreferrer">一键开启 GPU 闲置模式，基于函数计算低成本部署 Google Gemma 模型服务</a></p><p><a href="https://mp.weixin.qq.com/s/YDwL3dV-Fq5zcEyrL__NGw" target="_blank" rel="noopener noreferrer">《Yi技术报告细节分享》</a>。该文章分享了Yi模型的具体实现细节和思路，强调了模型设计围绕模型规模、数据规模和数据质量。Yi模型的预训练阶段数据处理流程包括启发式过滤、学习式过滤、聚类过滤以及去重等步骤，以提高数据质量。微调阶段，Yi模型仅采用了10K数据进行模型微调，强调数据质量胜过数量。在分词器、模型结构及微调参数方面，Yi模型采用了一系列优化措施，包括Transformer-Decoder结构、Grouped-Query Attention等。总的来说，Yi模型通过优化数据处理流程、微调策略、调整模型结构和参数等多方面实现了高效的技术实现。</p><p><a href="https://mp.weixin.qq.com/s/lBXwSVvRHB2Yn0fYoOkDeQ" target="_blank" rel="noopener noreferrer">重新定义大模型推理！Google | 提出SELF-DISCOVER框架，大模型可自写推理结构！</a></p><p><a href="https://mp.weixin.qq.com/s/cB5tgMUPqg8fsXjNrzQpbg" target="_blank" rel="noopener noreferrer">《斯坦福 &amp;&amp; 微软 | 发布前端代码生成大模型：Design2Code-18B，助力前端自动化！》</a>。这篇文章主要介绍了一种新的前端代码生成大模型：Design2Code-18B，它可以将网页视觉设计转换成功能性代码。文章首先介绍了将网页视觉设计转换成功能性代码的挑战性和现有方法的局限性，然后提出了Design2Code基准和多模态提示方法，以激发多模态大型语言模型（如GPT-4V和Gemini）的潜力。接着，文章介绍了开源的18B微调模型Design2Code-18B，它基于CogAgent-18B，在多种数据集上进行了预训练，并使用了Huggingface发布的WebSight数据集进行微调。最后，文章展示了Design2Code-18B在Design2Code基准上的优越性能，并提供了一些未来研究方向。</p><p><a href="https://mp.weixin.qq.com/s/Pdp6_z_rxBl-kph41Lb8Ww" target="_blank" rel="noopener noreferrer">可控文本生成新方法，人大&amp;&amp;南开 | 提出DATG架构，准确性提升19.29%，效率提升1倍</a></p><p><a href="https://mp.weixin.qq.com/s/53jEDw58dkZlJAVzr31G8A" target="_blank" rel="noopener noreferrer">《Auto-Prompt | 大模型提示(Prompt)优化新方法IPC：可根据用户意图进行定向优化》</a>。这篇文章提出了一种名为 Intent-based Prompt Calibration（IPC）的系统，主要目的是通过使用合成案例样本来优化大型语言模型的提示工程。它基于模型生成的数据集进行提示优化，以解决大语言模型对给定提示的敏感性等问题。这种方法的核心思想是根据用户意图迭代细化提示。同时，文章还对 IPC 系统的整体架构和实现流程进行了详细介绍，并展示了一些实验结果。</p><p><a href="https://mp.weixin.qq.com/s/1d2_kHEQnug9iR0cU_0nAA" target="_blank" rel="noopener noreferrer">《更智能的 Agent，Plan-and-Execute Agents 计划和执行》</a>。这篇文章介绍了几种新型的智能 Agent 设计方法，包括 Plan-and-Execute Agents、ReWOO Agent 和 LLMCompiler。Plan-and-Execute Agent 设计法通过明确规划来优化智能 Agent 功能。ReWOO Agent 设计法凭借变量分配功能使得不必对每个任务都使用 LLM。LLMCompiler 则通过任务格式化为 DAG 来提高工具调用的效率。这些新型设计都在不同程度上优化了智能 Agent 的工作流程，提高了工作效率。</p><p><a href="https://mp.weixin.qq.com/s/F2s3pKycoNDT7Z-6piRHWg" target="_blank" rel="noopener noreferrer">《OpenAI Function Calling 与 LangChain Agent 工作原理及区别》</a>。这篇文章介绍了OpenAI Function Calling 与 LangChain Agent的工作原理及它们之间的区别。文章首先列举了大型语言模型的限制，并解释了为何需要Agent。然后，文章介绍了React Agent的工作方式，通过“Reason Only”（向内求索）、“Act Only”（向外探索）和“ReAct”（内外兼修）三种模式优化模型的功能。此外，文章还以一个简单的实例，解释了如何利用ReAct Agent来解答一个包含搜索和计算两个步骤的问题，展示了其实际应用的流程。</p><p><a href="https://mp.weixin.qq.com/s/iM45toKEHr3_rJxuwbgp4w" target="_blank" rel="noopener noreferrer">《ReAct Agent 回答 RAG 系统中的复杂问题》</a>。这篇文章主要讲述了“ReAct Agent 用于回答 RAG 系统中复杂问题的方式”。随着输入问题的复杂度升高，使用传统的聊天机器人已不能足够有效。于是，作者提出了利用 ReAct Agent，通过自然语言模型（LLMs）逐步规划并执行处理问题的步骤，并定义功能性工具（如时间计算、文本搜索、列表长度计算、百分比变化计算等）以辅助任务完成。这种方法能够更好地干预和控制问题的解决过程，从而提高任务的完成质量。</p><p><a href="https://mp.weixin.qq.com/s/1d2_kHEQnug9iR0cU_0nAA" target="_blank" rel="noopener noreferrer">更智能的 Agent，Plan-and-Execute Agents 计划和执行</a></p><p><a href="https://mp.weixin.qq.com/s/KF7joY-MkK4BZ8Rf8bLArw" target="_blank" rel="noopener noreferrer">ChatGPT也能画图？教你一键生成时序图、类图、流程图、状态图以及用例图</a></p><p><a href="https://mp.weixin.qq.com/s/E2xwi9SNYQ7sdzhYlaDQFg" target="_blank" rel="noopener noreferrer">三个被忽视的大模型提示</a></p><p><a href="https://mp.weixin.qq.com/s/u2LCRgBhKKcGZhY29PjIng" target="_blank" rel="noopener noreferrer">关于Sora和Stable Diffusion 3，你需要知道的一切</a></p><p><a href="https://mp.weixin.qq.com/s/z6IFIuHawVZI6ZOfgvgKuA" target="_blank" rel="noopener noreferrer">消费级显卡可用！李开复零一万物发布并开源90亿参数Yi模型，代码数学能力史上最强</a></p><p><a href="https://mp.weixin.qq.com/s/IBh3ytd3gtizAQd5PI2uig" target="_blank" rel="noopener noreferrer">详解大模型微调全流程</a></p><p><a href="https://mp.weixin.qq.com/s/UzC3J_TOzJPEx_86-lRwuw" target="_blank" rel="noopener noreferrer">南大俞扬教授：什么是world models/世界模型</a></p><p><a href="https://mp.weixin.qq.com/s/Gi6pzD7wAMyzlCBSSWkVLA" target="_blank" rel="noopener noreferrer">深入浅出LangChain与智能Agent：构建下一代AI助手</a></p><p><a href="https://mp.weixin.qq.com/s/T9YRVRGMgkwRSTl7Movadg" target="_blank" rel="noopener noreferrer">尤洋教授：开源完整的Sora复现方案来了！</a></p><p><a href="https://mp.weixin.qq.com/s/8WYWrHyE4oryCgO9AemImA" target="_blank" rel="noopener noreferrer">《T-RAG=RAG+微调+实体识别》</a>。这篇文章名为"T-RAG=RAG+微调+实体识别"，主要介绍了T-RAG技术，这是一种将RAG架构与微调语言模型和实体树向量数据库相结合的方法，用于支持语境检索。它概述了在敏感文档的背景下如何保护数据隐私，以及如何在有限的计算资源和基于现有文档建立的小型训练数据集中保证用户提问的准确回答。文中还着重介绍了T-RAG的工作流程和实体树的作用。最后，还提出了一个新的评估指标“Correct-Verbose”，用以评价生成回复的质量。此研究不仅是理论研究，也是实践中LLM应用的经验总结，具有实际的指导意义。</p><p><a href="https://mp.weixin.qq.com/s/de3UxM9WTrHNjnOKSny0aw" target="_blank" rel="noopener noreferrer">《高级 RAG（Self-Reflective RAG）》</a>。这篇文章名为"高级 RAG(Self-Reflective RAG)"，主要介绍了Self-Reflective RAG的理念和工作流程。在基本的RAG pipeline中，我们的过程往往受限于被动的检索和生成，而实际操作中，我们需要根据生成的结果进行优化，如改变问题或筛选和排列内容。为了解决这个问题，文章介绍了一种新的自我修正框架，包括Corrective RAG(CRAG)和Self-Reflective RAG。这两种RAG都围绕着对检索和生成内容的评估和反馈进行自我修正，并通过特定标识进行调控。在一定条件下，进一步改进了RAG，使其产生更好的检索和生成效果。</p><p><a href="https://mp.weixin.qq.com/s/WuJEubctUDsAmdhHcDItAg" target="_blank" rel="noopener noreferrer">RAG不够聪明？打造更强大的智能体</a></p><p><a href="https://mp.weixin.qq.com/s/b_eWGauwi6v0w4CoSOnU5w" target="_blank" rel="noopener noreferrer">Anthropic发布Claude3，效果已超越GPT4</a></p><p><a href="https://mp.weixin.qq.com/s/nMWTuKBnQVjgAM7Du6oOFQ" target="_blank" rel="noopener noreferrer">从0开始预训练1.4b中文大模型实践</a></p><p><a href="https://mp.weixin.qq.com/s/W5W582CqxvRhF3wnKwIdiQ" target="_blank" rel="noopener noreferrer">《分类算法入门:以鸢尾花数据集为例》</a>。这篇文章以鸢尾花数据集为例，全面而详细地阐述了机器学习中的分类算法基础知识。首先介绍了人工智能、机器学习和深度学习的基本概念，讲解了机器学习各种分类方法的理论背景。随后通过鸢尾花数据集，展示了如何使用 Python 工具（包括 pandas、sklearn、matplotlib 和 seaborn）进行数据处理、分析和可视化。文章详细讲述了决策树、逻辑回归、支持向量机、K近邻等经典的分类算法，并用图形化的方式展示了分类效果。最后，读者可以通过本文所提供的丰富学习资料来深化对机器学习分类任务的理解和应用。</p><p><a href="https://mp.weixin.qq.com/s/fkRG7n4tOQKwU85xiEx0Eg" target="_blank" rel="noopener noreferrer">《万字详解LLM Agents的现状，问题与未来》</a>。这篇文章名为"写在跨年之前：聊聊LLM Agents的现状，问题与未来"，主要涉及到LLM Agents的当前状态，面临的问题和未来的可能发展。文章探讨了包括全参微调、Prompt Tuning、LoRA、P-Tuning等在内的SFT(Selective Fine Tuning)范畴的各种技术。其中尤其强调了对于{prompt，response}的单轮问答对的微调是最简单的SFT实现方式。具体的内容细节大概需要阅读原文才能获得更深入的理解。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://go.dev/blog/generic-slice-functions" target="_blank" rel="noopener noreferrer">《Robust generic functions on slices》</a>。这篇文章名为"Robust generic functions on slices"，主要探讨了Go的slices包如何提供对切片进行操作的通用函数。该文章首先介绍了如何通过类型参数，一次性为所有类型的切片编写类似slices.Index等函数，而无需针对每种不同的元素类型重新实现。随后，文章深入讲述了新的函数（如Insert, Replace，Delete等）如何修改切片，并通过详述切片在内存中的表现形式及其对垃圾回收器的影响，来帮助读者理解这些函数的工作方式和正确使用它们。文章特别指出，新的Delete函数提供了更清晰地表达程序员意图的方式，而且它不需要分配新的数组，这样就可以在适当时清除无用的元素，帮助垃圾回收。文章强调，调用这些函数后，必须认为原始切片已无效，因为底层数组已被修改。最后，文章还讨论了在处理内存泄漏和元素零值设置等问题时的策略和选项，它们在新版本Go给出的解决方案，以及这些改变可能导致的一些测试问题。此外，作者鼓励开发人员正确使用新功能，并尽量避免上述列举的陷阱。</p><p><a href="https://go.dev/blog/routing-enhancements" target="_blank" rel="noopener noreferrer">《Routing Enhancements for Go 1.22》</a>。这篇文章名为"Routing Enhancements for Go 1.22"，主要介绍了 Go 1.22 版本中 net/http 包的路由器提供的新特性：方法匹配和通配符。这些新特性让你可以使用模式，而非 Go 代码，来表达常见的路由。这种新功能，尽管简单易懂，但要选择出多个匹配请求的最佳模式却是一项挑战。文章还详细阐释了如何在新版 Go 中使用这些新特性，以及这些引入的变化如何影响了 ServeMux 方法 handle 和 handleFunc 。此外，还描述了新模式如何更具优先级，并解释了其背后的原理。同时，为了保持新旧版本的兼容性，作者们也努力使新的模式语法能覆盖旧的，并使新的优先级规则能泛化旧的规则。总体上，这些改变是 Go 语言团队不断努力使 Go 成为构建生产系统的优秀语言的一个持续过程的一部分。</p><p><a href="https://mp.weixin.qq.com/s/IH1FGDpClrsnlfjg7OF3lg" target="_blank" rel="noopener noreferrer">听GPT 讲Rust源代码--compiler(6)</a></p><p><a href="https://mp.weixin.qq.com/s/JCU3dwkwpMP3qMKqg9ed6g" target="_blank" rel="noopener noreferrer">使用Apache Kafka的Golang实践指南</a></p><p><a href="https://mp.weixin.qq.com/s/RFsHfFByarSRAA-f1Rs13g" target="_blank" rel="noopener noreferrer">《Go 为什么不支持从 main 包中导入函数》</a>。这篇由煎鱼撰写的文章，题为 "Go 为什么不支持从 main 包中导入函数?"，对于这个话题进行了深度解析。其首先提到，虽然Go的规范并没有明确禁止从main包中导入函数，但我们在实际运行中会被拒绝，提示main包是一个程序而非可以导入的包。这一现象的原因来自于经过多次变动的规定，如2011年移除了 "程序中的其他包都不能命名为 main" 的要求，然后在2015年又新增了限制。这样的变化主要是为了避免增加复杂度和不安全性。比如，一个函数可能会做出自己拥有完全控制权的假设，所以如果引入多个main包中的函数，可能会产生在初始化顺序、全局变量的注册等方面的冲突。这篇文章认为Go官方的做法在理论上可以解决复杂度和安全性问题，但对于有历史债务的项目，对于需要维护多个Go项目工程，相当于磨灭了一条道路，其实比较尴尬。</p><p><a href="https://mp.weixin.qq.com/s/zxLO4IhLqQmIaUDzwwjU1w" target="_blank" rel="noopener noreferrer">《fasthttp是如何做到比net/http快十倍的》</a>。这篇文章讲解了fasthttp如何做到比net/http快十倍的原理。fasthttp相比于net/http在处理流程上有所差异，net/http是一个连接新建一个goroutine，当连接数非常多的时候会给系统带来一定的压力。而fasthttp则是建立了workerPool，每个workerChan在后台都会有一个Goroutine来处理其中的连接。此外，fasthttp的快速也得益于几个方面的优化：连接复用，大量使用了sync.Pool进行内存复用以及通过unsafe.Pointer指针进行<!-- -->[<!-- -->]<!-- -->byte和string转换来避免内存分配和拷贝的消耗。</p><p><a href="https://mp.weixin.qq.com/s/fx-FTVpM3CXIPUwTC_juDQ" target="_blank" rel="noopener noreferrer">《万字长文讲解Golang pprof 的使用》</a>。这篇文章主要讲述了Golang的pprof工具的使用。pprof工具是Golang中用于性能分析的一个工具，它可以分析出cpu使用情况、内存占用、阻塞情况、线程和协程等信息。文章中详细阐述了如何使用此工具，主要有两种方式，一种是通过http接口的方式暴露出pprof的采集控制界面，另一种是在程序中通过代码来启动相应指标的采集示例。文章还详细介绍了如何解析通过这两种方式获取的输出信息。本文的主要目的是将pprof工具的使用方式用思维导图的形式展示出来，这样可以帮助读者更好地理解和使用pprof工具。</p><p><a href="https://mp.weixin.qq.com/s/xYvMI0JieO6RxHIdWf1ujQ" target="_blank" rel="noopener noreferrer">《一篇实用的关于云上K8s应用分账实践》</a>。本文讲述云上Kubernetes（K8s）应用的成本分摊实践，涵盖了成本分摊的核心概念及阿里云ACK FinOps套件的应用。文中首先以前期预算为集群规划的依据，并讨论了随着业务发展对成本分摊精准度的提升需求。介绍了如何根据Pod的核/时成本，通过ACK集群、计算节点、命名空间和应用Pod这四个维度进行费用分摊。文章还分析了单资源和混合资源分摊模型，并讨论了如何设置Request和Limit来优化资源利用。对于多云和混合云场景，分享了如何通过ACK One实现统一管理和成本分析。针对复杂业务场景，讲述了自定义定价模版的使用方式，允许通过配置实现成本定制需求。对于追求细节管理和精细化运营的团队，这篇文章提供了宝贵的指导。</p><p><a href="https://mp.weixin.qq.com/s/6xx3-qow8A5Hdp_72jswow" target="_blank" rel="noopener noreferrer">《如何使用 K8s 两大利器"审计"和"事件"帮你摆脱运维困境》</a>。这篇文章主要讲述了如何使用 Kubernetes（K8s）的"审计"和"事件"功能来帮助进行日常集群运维工作。文章首先指出了运维工作中可能出现的一些问题，例如应用被删除、Apiserver负载突变、集群节点出现问题、节点自动扩容等。随后，文章进一步解释了 Kubernetes的审计和事件是如何运作的，强调了善用这两种工具可以提高集群的可观察性，为运维工作带来极大的便利。总的来说，这篇文章为运维人员提供了一种解决方案，通过使用 Kubernetes的审计和事件，可以更好地管理和监测集群的状态。</p><p><a href="https://mp.weixin.qq.com/s/lxEAFe2Ewmc8YvTqn8UcLQ" target="_blank" rel="noopener noreferrer">【Go 工具】竞态条件检测神器 Race Detector</a></p><p><a href="https://mp.weixin.qq.com/s/Y67J4_D1yyMa-eb7XmgTcA" target="_blank" rel="noopener noreferrer">使用Redis入门Golang</a></p><p><a href="https://mp.weixin.qq.com/s/qDFM-nVo-jeh9VdcBfMreA" target="_blank" rel="noopener noreferrer">一道面试题: Top K 问题</a></p><p><a href="https://mp.weixin.qq.com/s/sTd3SVh0swGTnaGugsw1SA" target="_blank" rel="noopener noreferrer">《理解 Docker 容器中 UID 和 GID 的工作原理》</a>。这篇文章详细解析了 Docker 容器中 UID 和 GID 的工作原理。首先，作者概述了用户名、组名、用户ID（UID）和组ID（GID）在容器内运行的进程与主机系统之间的映射对于构建安全系统的重要性。随后，文章分析了uid/gid在Linux系统的安全性，强调了单一内核概念以及uid/gid的分配方式。接着，作者运用实例解释了Docker运行的过程以及如何通过Dockerfile定义和启动不同用户。最后，文章讲述了如何掌控和控制容器的访问权限。在阐述以上内容的同时，文章也提供了一些实际示例来说明这些观点。</p><p><a href="https://mp.weixin.qq.com/s/yUuo1IjeXY78_5u4QpkuTA" target="_blank" rel="noopener noreferrer">《如何基于Docker镜像逆向生成Dockerfile》</a>。这篇文章介绍了如何将Docker镜像逆向生成Dockerfile。文章主要讲述了利用开源工具Dedockify的操作方法与工作原理。该工具通过Python脚本，利用存储在每个镜像层旁边的元数据，逐步遍历层级树，收集与每个层相关联的命令，重建镜像构建过程中执行的命令序列，从而得到近似的Dockerfile。不过，因为无法访问执行原始docker build命令时存在的构建上下文，如果使用了COPY或ADD指令，生成的输出可能不完全匹配原始的Dockerfile。</p><p><a href="https://mp.weixin.qq.com/s/KkRWQyljuo86-XbBxEnGPA" target="_blank" rel="noopener noreferrer">《通过多阶段构建减小Golang镜像的大小》</a>。本篇文章主要介绍了如何通过多阶段构建减小Golang镜像的大小。首先，作者提出了一个通用的Dockerfile，并指出其生成的镜像大小超过300MB，主要因为包含了所有的Golang工具。然后，作者提出了多阶段构建的方法，它能从不同的基础镜像构建，有选择地将文件从一个阶段传递到下一个阶段，从而减小镜像大小。在本例中，通过二级构建，镜像大小已降至11.7MB。最后，还探讨了使用名为scratch的空白镜像进一步减小镜像大小的可能性，使得镜像最后降至6.34MB，但作者强调这需要慎重考虑，因为最后生成的镜像将完全没有任何工具。</p><p><a href="https://mp.weixin.qq.com/s/dckA1ezcABndN5WSg1BOBA" target="_blank" rel="noopener noreferrer">《k8s 到底是什么，架构是怎么样的》</a>。这篇文章主要讲述了 Kubernetes（K8s）的基本概念、架构和工作原理。Kubernetes，因单词过长，我们通常简化为k8s。k8s 是一种容器的协调工具，位于应用服务和服务器之间，能以策略的方式协调和管理多个应用服务。通过一个 yaml 文件的配置，可以定义应用的部署顺序等信息，自动部署应用到各个服务器上，还能让它们崩溃后自动重启，可以自动扩容和缩容。Kubernetes 的服务器分为两部分：控制平面和工作节点，前者负责控制和管理各个节点，后者则负责实际运行各个应用服务。k8s 的命令行工具为 kubectl，用于执行各类操作命令。</p><p><a href="https://mp.weixin.qq.com/s/vjmntyGwzURz_elg27vpXg" target="_blank" rel="noopener noreferrer">《Go 泛型有没有可能在后期改为 <code>&lt;&gt;</code> 尖括号》</a>。这篇文章主要讨论了Go语言在处理泛型时，为何并没有采用类似Java和C++的 <code>&lt;&gt;</code> 尖括号表示法，而是选择了中括号 <code>[]</code>. 首先，使用尖括号可能导致语义混淆，如 <code>a, b := w &lt; x, y &gt; (z)</code> 此句，如果使用尖括号，程序可能在编译阶段无法确定该行表达式的具体含义。其次，使用圆括号也会导致同样的问题，比如 <code>func F(T any)(v T)(r1, r2 T)</code>, 无法快速准确判断出参数和返回值部分。此外，Go官方也不希望使用非ASCII的字符。作者还提到社区中对Go的处理方式存在一些争议，部分社区成员认为如果使得编译器解释尖括号不再困难，就可以采用这种符号。然而，总的来说，基于已有的实践和规范，Go语言在未来可能也不会改变其泛型的表示方式。</p><p><a href="https://mp.weixin.qq.com/s/arI9sip-5JH9YSu45XJ83w" target="_blank" rel="noopener noreferrer">《Rust中channel的使用》</a>。这篇文章主要介绍了Rust编程语言中Channel的用法。其中，Channel是Rust中用于在不同线程间传递信息的通信机制，实现了线程间的消息传递。每个Channel由发送端和接收端两部分组成，其设计理念是“通过通信来共享内存，而非通过共享内存来通信”，以此避免了数据竞争和共享内存的复杂性。该文章进一步详细介绍了如何在Rust中创建和使用Channel，并给出了相关代码示例。最后，文章阐述了多种Channel模型，包括Rust标准库中所使用的MPSC（多生产者，单消费者）模型。</p><p><a href="https://juejin.cn/post/7272006755266002959" target="_blank" rel="noopener noreferrer">K8s部署方式大全：从基础到进阶，一文带你掌握所有技巧</a></p><p><a href="https://juejin.cn/post/7301584578342289423" target="_blank" rel="noopener noreferrer">k8s从入门到精通 -- 更适合中国宝宝体质</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/NABg5tGizHsmdXgUO6NeVw" target="_blank" rel="noopener noreferrer">《万字+33张图探秘OpenFeign核心架构原理》</a>。本篇文章深入探讨了SpringCloud核心组件OpenFeign的核心架构原理。文章分为四个部分，首先解释原始Feign的使用和基于SpringCloud的进化过历程；然后详细讲解了Feign底层工作原理，依赖于JDK动态代理和核心组件如Contract、Encoder、Decoder等；接下来分析了SpringCloud是如何整合Feign的，并且讨论了OpenFeign的多种配置方式及其优先级；最后，文章通过丰富的图示和代码示例，使读者可以更好地理解并运用这一工具。这篇文章对于理解和运用OpenFeign非常有帮助，无论是对于初学者还是有经验的开发者。</p><p><a href="https://mp.weixin.qq.com/s/1Qe29y3nrbi39Kpaspme7Q" target="_blank" rel="noopener noreferrer">《三万字长文：如何去排查JVM内存问题》</a>。这篇文章是一份详尽的指导，讲述了如何排查JVM内存问题。文中首先定位了技术问题的范围，确定适用于JDK8至JDK11。接着，作者提出了系统化的排查原则，并提供了一步步的诊断流程，从基本信息收集、判断内存增长原因，到具体分析内存问题的可能来源。文章详细介绍了如何利用不同的命令和工具（如jmap、jstat、Arthas等）进行详细的分析，并根据内存使用情况，向读者展示了如何确定是堆内存问题还是堆外内存问题。总之，文章为那些需要深入理解和处理JVM内存问题的开发者和运维人员提供了宝贵的知识和技巧。</p><p><a href="https://mp.weixin.qq.com/s/WLPo8s_M3AzxwB3o3ehY3w" target="_blank" rel="noopener noreferrer">《如何避免MYSQL主从延迟带来的读写问题》</a>。这篇文章讨论了如何处理在MySQL主从部署架构中普遍存在的主从同步延迟问题，以保持读写操作的一致性。文章首先介绍了主从延迟产生的场景及其对读写分离原则的影响。然后，详细解释了主从复制的原理，并提出了两种避免主从数据不一致的技术方案：一是使用select master_pos_wait函数来等待从库同步至特定的binlog位置点；二是在开启GTID模式的情况下，通过select wait_for_executed_gtid_set函数检查GTID集合是否已同步。这两种方法均旨在确保从库数据的准确性，从而整体上减轻主库的压力。总体上，文章为MySQL数据库管理员提供了缓解主从延迟导致的读写问题的具体实施方案。</p><p><a href="https://mp.weixin.qq.com/s/dt_14etV_2ynAmyMa_uyug" target="_blank" rel="noopener noreferrer">《这些年背过的面试题——ES篇》</a>。这篇文章是一篇针对Elasticsearch(ES)的面试指南，它涵盖ES基础知识点和面试过程中常见问题。内容包括ES的功能特性介绍（如分布式架构、全文搜索、数据分析等）、主要的使用场景描述、与其他搜索引擎的对比（Lucene和Solr）、以及ES的基本概念解释。文章还详细探讨了ES的高级特性，如映射、DSL查询、聚合分析和智能搜索建议器。此外，作者还分享了关于数据索引优化的实战技巧和策略，提供了写优化、读优化和索引重建的方案，这些方案对ES数据存储和查询的性能有显著影响，最后还对Deep Paging性能问题提供了解决方法。对正在准备面试或者希望巩固ES知识的读者而言，这篇文章是一个宝贵的资源。</p><p><a href="https://mp.weixin.qq.com/s/gAJFm3q5510PfRBe4F11PQ" target="_blank" rel="noopener noreferrer">《什么是MySQL锁？有哪些锁类型》</a>。这篇文章详细地介绍了MySQL中的锁定机制及其类型。起初概述了锁的作用，即协调多进程或线程对资源的并发访问，在数据库环境下，锁对于保持事务的正确性与一致性至关重要。作者明确区分了MySQL中锁的级别，从全局锁、表锁（读锁、写锁）到元数据锁、意向锁，直到行锁的多种形式（记录锁、间隙锁和临键锁）。文中还探讨了AUTO-INC锁的作用和相关优化，举例说明了其在INSERT操作中的应用。此外，文章也涉及了如何根据不同的情况优化锁的使用以及如何避免由锁产生的性能瓶颈。这篇文章为理解MySQL的各种锁类型和锁机制提供了宝贵的信息，特别对于数据库管理员和那些需要管理并发数据访问问题的开发人员来说，具有很高的实用价值。</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/m-Ae6dbFuW22u2xSDWcciw" target="_blank" rel="noopener noreferrer">Vue 团队正式开源 Rolldown：基于 Rust 的超快 JavaScrip 打包工具！</a></p><p><a href="https://mp.weixin.qq.com/s/MVR5rV2LkH8_GHCtP6SHug" target="_blank" rel="noopener noreferrer">打造舒适的vscode开发环境</a></p><p><a href="https://mp.weixin.qq.com/s/pY4-RqqamTmPXnRPfw0hRA" target="_blank" rel="noopener noreferrer">相比于 Node.js，Deno 和 Bun 到底能带来什么</a></p><p><a href="https://mp.weixin.qq.com/s/yBTK4Rds28aJ88mVgkoYJA" target="_blank" rel="noopener noreferrer">MDH Weekly 122 - 《招人》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3月3日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月3日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/3月3日内容汇总"/>
        <updated>2024-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-abab847b03119684181cda4a9b7bdb44.png" width="1080" height="308" class="img_astN"></p><p>封面图：用 switch-case 来解决 Go 错误处理的难题</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/II_6lb9KjKOmz-DIgnaz7g" target="_blank" rel="noopener noreferrer">LangChain 实战：Agent思维</a></p><p><a href="https://mp.weixin.qq.com/s/tl32MrTPMi0i7BN53ELb2w" target="_blank" rel="noopener noreferrer">详解大模型RLHF过程（配代码解读）</a></p><p><a href="https://mp.weixin.qq.com/s/J8yEbS-XTJY0aFyJAl1ypA" target="_blank" rel="noopener noreferrer">PromptFlow高质量AI应用 - 基于LLM的文档QA机器人</a></p><p><a href="https://mp.weixin.qq.com/s/gPVwXysJsV2S2FgP3c6Qpw" target="_blank" rel="noopener noreferrer">图解大模型计算加速系列：Flash Attention V1，从硬件到计算逻辑</a></p><p><a href="https://mp.weixin.qq.com/s/yfou0pEkbbUZxe2NS1jnag" target="_blank" rel="noopener noreferrer">使用搭载骁龙 8 Gen 3 的安卓手机运行 AI 大模型</a></p><p><a href="https://mp.weixin.qq.com/s/ws3U1NBouPivqatUb_ldQA" target="_blank" rel="noopener noreferrer">生成式 AI 的发展方向，是 Chat 还是 Agent</a></p><p><a href="https://mp.weixin.qq.com/s/U1IqQElxkfHfQoxygMnSOg" target="_blank" rel="noopener noreferrer">聊聊大模型Agent技术，及和具身智能又有什么异同</a></p><p><a href="https://mp.weixin.qq.com/s/eWlms4IxTd4wzka4V7Gu6w" target="_blank" rel="noopener noreferrer">复旦NLP团队发布80页大模型Agent综述，一文纵览AI智能体的现状与未来</a></p><p><a href="https://mp.weixin.qq.com/s/cZB90npCcz88IJ6W00LnMA" target="_blank" rel="noopener noreferrer">知识问答系统的优化实践：LLM与RAG的结合艺术</a></p><p><a href="https://mp.weixin.qq.com/s/xxFcMRMl--HPcGAkAYaW7w" target="_blank" rel="noopener noreferrer">一文解构大模型RAG问答关键环节及与LLM微调对比总结</a></p><p><a href="https://mp.weixin.qq.com/s/K0yFNjpcBk5OL-1DRHSeGA" target="_blank" rel="noopener noreferrer">Mistral AI发布Mistral Large模型</a></p><p><a href="https://mp.weixin.qq.com/s/rvIJLIEvvzQ5n8v7ZF6pWw" target="_blank" rel="noopener noreferrer">Mistral AI新模型对标GPT-4，不开源且与微软合作，网友：忘了初心</a></p><p><a href="https://mp.weixin.qq.com/s/gTFVNbWRsxONnoE_fq2S3A" target="_blank" rel="noopener noreferrer">大模型微调新范式：当LoRA遇见MoE</a></p><p><a href="https://mp.weixin.qq.com/s/P5XktjiRgY2Q6V1pLyqYAw" target="_blank" rel="noopener noreferrer">Mistral Large，Le Chat来了！Mistral AI连放两个大招！</a></p><p><a href="https://mp.weixin.qq.com/s/1zc4klUCCsgeFDaA5K2Rgg" target="_blank" rel="noopener noreferrer">探索2024年1月的AI研究前沿：模型合并、专家混合与小型LLM的崛起</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/PCFDz_fVsk_6M144VpBAww" target="_blank" rel="noopener noreferrer">Cargo的自定义命令扩展功能</a></p><p><a href="https://mp.weixin.qq.com/s/CXnLIoYhI1k3SNP3IWz8dQ" target="_blank" rel="noopener noreferrer">听GPT 讲Rust源代码--compiler(2)</a></p><p><a href="https://mp.weixin.qq.com/s/vg8MfMBEs8I-FQl3Nuay6Q" target="_blank" rel="noopener noreferrer">元老与新秀：Go sort.Search()和sort.Find()</a></p><p><a href="https://mp.weixin.qq.com/s/oM8JS_eMQjeU2tJzfO7f5w" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(6)-Connector</a></p><p><a href="https://mp.weixin.qq.com/s/1DuY0WXZ_GsG87Ahuk_9rw" target="_blank" rel="noopener noreferrer">跳槽必看のMySQL索引：B+树原理揭秘与索引优缺点分析</a></p><p><a href="https://mp.weixin.qq.com/s/QfE-dnHlIv49ae205RrJ_Q" target="_blank" rel="noopener noreferrer">听GPT 讲Rust源代码--compiler(1)</a></p><p><a href="https://mp.weixin.qq.com/s/xVBT-E3IiYsiOtHF2V22Xw" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(5)</a></p><p><a href="https://mp.weixin.qq.com/s/MkWxrN_kQFNn9rMeJXs3PA" target="_blank" rel="noopener noreferrer">用 switch-case 来解决 Go 错误处理的难题</a></p><p><a href="https://mp.weixin.qq.com/s/7C7Jxe7XEN-vQKiY2MJMtw" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(4)</a></p><p><a href="https://mp.weixin.qq.com/s/SHLh2ofDUteQCafXZo8mmw" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(3)</a></p><p><a href="https://mp.weixin.qq.com/s/WoUYmpvYH6ixYSDwFga59g" target="_blank" rel="noopener noreferrer">图文讲透Golang标准库 net/http实现原理 -- 客户端</a></p><p><a href="https://mp.weixin.qq.com/s/TqAQ9kP4HlFN9UdLq0tavQ" target="_blank" rel="noopener noreferrer">使用docker init编写Dockerfile和docker-compose配置</a></p><p><a href="https://mp.weixin.qq.com/s/tqAcoskLYd2UV6B_6AeIjw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#完结撒花</a></p><p><a href="https://mp.weixin.qq.com/s/9Pg8blMjqECaCY_W9MbYHg" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(2)</a></p><p><a href="https://mp.weixin.qq.com/s/4ufuA3n9aaFcQ9zDItUHaQ" target="_blank" rel="noopener noreferrer">golang 高性能无 GC 的缓存库 bigcache 是怎么实现的</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/5BwWCekb_wIu6LrCdmoGCQ" target="_blank" rel="noopener noreferrer">从0到1构建一个稳定、高性能Redis集群</a></p><p><a href="https://mp.weixin.qq.com/s/KetCuZNb9jR0HSY7Jqh0NA" target="_blank" rel="noopener noreferrer">这些年背过的面试题——SpringCloud篇</a></p><p><a href="https://mp.weixin.qq.com/s/hCZanLARApXcW2_6r3g-5A" target="_blank" rel="noopener noreferrer">如何设计订单超时自动取消</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/H9_kt3L6l6fj0aBP9UonhA" target="_blank" rel="noopener noreferrer">2024 AI &amp; 前端：回首展望，光芒未至，破晓之前！</a></p><p><a href="https://mp.weixin.qq.com/s/kZOpaaIfogWzeB7KwdTkRw" target="_blank" rel="noopener noreferrer">看完zustand源码后，我的TypeScript水平突飞猛进</a></p><p><a href="https://mp.weixin.qq.com/s/Q1vvgM_A7QEtO-0a3GLUsw" target="_blank" rel="noopener noreferrer">ElTable 二次封装：我用 Vue3.3 新特性完美解决了列插槽数据无类型提示问题！！！</a></p><p><a href="https://mp.weixin.qq.com/s/WgtUG0vp3fk0_388svrGXg" target="_blank" rel="noopener noreferrer">ECharts 迎来重大更新，运行时包体积可减少 98%！</a></p><p><a href="https://mp.weixin.qq.com/s/1XmH55nqs7wavsWJNT-tSw" target="_blank" rel="noopener noreferrer">FFmpeg前端视频合成实践</a></p><p><a href="https://mp.weixin.qq.com/s/8D6yD3A5-KPod85zsxRPZQ" target="_blank" rel="noopener noreferrer">2024 使用 TS 搭建 Node.js 服务器 - 快速教程</a></p><p><a href="https://mp.weixin.qq.com/s/udt61U0aaoFJqnzFKhGTjw" target="_blank" rel="noopener noreferrer">前端食堂技术周刊第 113 期：Node 年终总结、Node 新吉祥物、Qwik 2.0、React Labs 工作进展</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2月25日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月25日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月25日内容汇总"/>
        <updated>2024-02-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🌟 AI 相关]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://arxiv.org/pdf/2402.13446" target="_blank" rel="noopener noreferrer">Large Language Models for Data Annotation: A Survey</a></p><p><a href="https://arxiv.org/pdf/2402.13547.pdf" target="_blank" rel="noopener noreferrer">ACTIVERAG: Revealing the Treasures of Knowledge via Active Learning</a></p><p><a href="https://arxiv.org/pdf/2209.02646.pdf%EF%BC%8Chttps://github.com/chq1155/A-Survey-on-Generative-Diffusion-Model?tab=readme-ov-file" target="_blank" rel="noopener noreferrer">关于Generative-Diffusion-Model的全面综述，可以作为了解sora的基础知识</a></p><p><a href="https://mp.weixin.qq.com/s/f2A6r5dVSBwDO_h27dlj6A" target="_blank" rel="noopener noreferrer">云音乐 CMS 平台 AIGC 实践与新特性实现总结</a></p><p><a href="https://mp.weixin.qq.com/s/Oc1f3thZYIONsF4OWWEcSw" target="_blank" rel="noopener noreferrer">云音乐D2C设计稿转代码建设实践</a></p><p><a href="https://mp.weixin.qq.com/s/2O5z9rAvLxU3ZsU7k4xdhA" target="_blank" rel="noopener noreferrer">云音乐 AI Agent 探索实践</a></p><p><a href="https://mp.weixin.qq.com/s/jaIiVI636uJBOOKsXuHCpw" target="_blank" rel="noopener noreferrer">云音乐低代码 + ChatGPT 实践方案与思考</a></p><p><a href="https://www.bilibili.com/video/BV1vJ4m1s7Zn" target="_blank" rel="noopener noreferrer">🦜🕸️ LangGraph：Plan-Execute Agents 实战</a></p><p><a href="https://mp.weixin.qq.com/s/G1DYQiAjUL9zphJ8ajrrtg" target="_blank" rel="noopener noreferrer">Pinecone总结一：大模型角度</a></p><p><a href="https://mp.weixin.qq.com/s/N6RI456ouuczWjyqXOSPNQ" target="_blank" rel="noopener noreferrer">使用 Hugging Face 微调 Gemma 模型</a></p><p><a href="https://mp.weixin.qq.com/s/fsvgtS3stS1cfrIT78XBCA" target="_blank" rel="noopener noreferrer">开源大语言模型作为 LangChain 智能体</a></p><p><a href="https://mp.weixin.qq.com/s/tJj0ZCX8fRS2Xcr0v85C8g" target="_blank" rel="noopener noreferrer">200万上下文窗口创飞Gemini 1.5！微软来砸谷歌场子了（doge）</a></p><p><a href="https://mp.weixin.qq.com/s/idr60a1a66gdGFSZrOnC0w" target="_blank" rel="noopener noreferrer">如何利用大模型进行数据标注与知识蒸馏：兼看ActiveRAG上下文去噪的大模型RAG问答范式</a></p><p><a href="https://mp.weixin.qq.com/s/NNkVs_TnaStvjWdmfrM88Q" target="_blank" rel="noopener noreferrer">树形结构与RAG的完美结合：T-RAG方法在组织内部信息查询中的突破</a></p><p><a href="https://mp.weixin.qq.com/s/MsaCUnTsJYxJFgnNGT6DTA" target="_blank" rel="noopener noreferrer">领先99%小白的Sora关键信息！</a></p><p><a href="https://mp.weixin.qq.com/s/Js9YAibVSeVwfy4-xESDRg" target="_blank" rel="noopener noreferrer">AI, Machine Learning和 Deep Learning有什么差异</a></p><p><a href="https://mp.weixin.qq.com/s/qImKOQXLoZqLTW-SVISKHA" target="_blank" rel="noopener noreferrer">模型融合、混合专家、更小的LLM，几篇论文看懂2024年LLM发展方向</a></p><p><a href="https://mp.weixin.qq.com/s/_iCYfqmXA3enKn3Hm-DwSA" target="_blank" rel="noopener noreferrer">开源大模型王座易主！谷歌Gemma杀入场，笔记本可跑，可商用</a></p><p><a href="https://mp.weixin.qq.com/s/H2ie4vuhLqr4UKtgvZZtEQ" target="_blank" rel="noopener noreferrer">关于Google开源Gemma的一些想法</a></p><p><a href="https://mp.weixin.qq.com/s/0xzCAqiXOsscBItpN9R0lA" target="_blank" rel="noopener noreferrer">LangChain原理学习笔记</a></p><p><a href="https://mp.weixin.qq.com/s/gHyMnVxh-QVe58TvZMvl8Q" target="_blank" rel="noopener noreferrer">工具增强型大模型：引领智能新时代</a></p><p><a href="https://mp.weixin.qq.com/s/YAGfwy5fUHbTW5f3bUSYVg" target="_blank" rel="noopener noreferrer">AI 实战：手把手教你使用「扣子/coze」来搭建个人blog知识库</a></p><p><a href="https://mp.weixin.qq.com/s/W9iVW7niyi_HvEWxOcnwuA" target="_blank" rel="noopener noreferrer">大模型推理优化实践：KV cache复用与投机采样</a></p><p><a href="https://mp.weixin.qq.com/s/06w7_lb8Hc4Ee2GG9I4wLg" target="_blank" rel="noopener noreferrer">NLP研究在大模型时代的创新飞跃</a></p><p><a href="https://mp.weixin.qq.com/s/delaJc2KDxLWfUUtGo-V-A" target="_blank" rel="noopener noreferrer">下一代RAG范式：RAG-Fusion</a></p><p><a href="https://mp.weixin.qq.com/s/5K6yNj23NmNLcAQofHcT4Q" target="_blank" rel="noopener noreferrer">图解大模型计算加速系列：Flash Attention V2，从原理到并行计算</a></p><p><a href="https://mp.weixin.qq.com/s/yr_VAbEIresEH352Iyehjg" target="_blank" rel="noopener noreferrer">如何在小公司做大模型</a></p><p><a href="https://mp.weixin.qq.com/s/j52XdHyD5w_Ug-hpWlPIgQ" target="_blank" rel="noopener noreferrer">机器学习简介: 寻找函数的艺术</a></p><p><a href="https://mp.weixin.qq.com/s/3reFjJNHuL8J24EyLmsSPA" target="_blank" rel="noopener noreferrer">OpenAl 视频生成模型 —— Sora技术报告解读</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/oL_G8H_ROSF3TjtzBOGCow" target="_blank" rel="noopener noreferrer">etcd存储引擎之主干框架</a></p><p><a href="https://mp.weixin.qq.com/s/5PovYOUzHFcCU2JjDLEnnA" target="_blank" rel="noopener noreferrer">Rust 高性能编程指南</a></p><p><a href="https://mp.weixin.qq.com/s/n0v8Xtz1q9XRvZuI4tPoXg" target="_blank" rel="noopener noreferrer">Go map 加有序排序的一些挣扎</a></p><p><a href="https://mp.weixin.qq.com/s/uYmSCyTZtbSpiIL6Qet5_A" target="_blank" rel="noopener noreferrer">云音乐 GitOps 最佳实践</a></p><p><a href="https://mp.weixin.qq.com/s/UNr11UvRX9kzKefKttX4wg" target="_blank" rel="noopener noreferrer">KisFlow-基于Golang的流式计算框架实战(1)</a></p><p><a href="https://mp.weixin.qq.com/s/-oQITzwDo51TkUyzUs0BQQ" target="_blank" rel="noopener noreferrer">相同型号物理机，容器性能不如虚拟机</a></p><p><a href="https://mp.weixin.qq.com/s/-zgXvXuUlqywbEPUygmv7w" target="_blank" rel="noopener noreferrer">听GPT 讲Rust源代码--library/portable-simd</a></p><p><a href="https://mp.weixin.qq.com/s/r-HbSxbvrpIltUdCXCEzSw" target="_blank" rel="noopener noreferrer">Go deadcode：查找没意义的死代码，对于维护项目挺有用！</a></p><p><a href="https://mp.weixin.qq.com/s/Be6VYGlSa-AXcDkuhCQ1HA" target="_blank" rel="noopener noreferrer">通俗易懂剖析Go Channel：理解并发通信的核心机制</a></p><p><a href="https://mp.weixin.qq.com/s/-C-wIjkKM7N1M7fcCd7HSQ" target="_blank" rel="noopener noreferrer">竟然是"你"偷走了那0.001的服务可用性</a></p><p><a href="https://mp.weixin.qq.com/s/BqNLR9rsWSPtTJpzOX1uOw" target="_blank" rel="noopener noreferrer">精心设计的 DNS Failover 策略在 Go 中竟然带来了反效果，发生了什么</a></p><p><a href="https://mp.weixin.qq.com/s/Sx2Bo_KUVh2w6twwb_XBVA" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#100 Not understanding the impacts of running Go</a></p><p><a href="https://mp.weixin.qq.com/s/2AWWhbkEhwTJcgCjL-9pcQ" target="_blank" rel="noopener noreferrer">《从慢速到SIMD》聊Go 边界检查消除</a></p><p><a href="https://mp.weixin.qq.com/s/fmlzQfwmIwMgP38op0Ebmg" target="_blank" rel="noopener noreferrer">Go项目中的Labels</a></p><p><a href="https://mp.weixin.qq.com/s/dnF3bxT0H_OfAsml9m976w" target="_blank" rel="noopener noreferrer">Go 更强的代码洁癖，可以把 gofmt 给换了！</a></p><p><a href="https://mp.weixin.qq.com/s/b1cLEth3cgQsTmMCgw9Bog" target="_blank" rel="noopener noreferrer">Go 终于把这个傻缺特性去掉了，多少陈年老BUG都是因为它！</a></p><p><a href="https://mp.weixin.qq.com/s/10cPBDKOuSuyW1XTUxuqiw" target="_blank" rel="noopener noreferrer">Go 1.22 slices 库的更新：高效拼接、零化处理和越界插入优化</a></p><p><a href="https://mp.weixin.qq.com/s/KUiTxRBQcywcyHsHmOFvEQ" target="_blank" rel="noopener noreferrer">Go 1.22中值得关注的几个变化</a></p><p><a href="https://mp.weixin.qq.com/s/Gp4yLILc2rWQonn2Bg-FTg" target="_blank" rel="noopener noreferrer">Go中最常用的数据校验库</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/8DT0tNYbuPjXkKwMMUABYg" target="_blank" rel="noopener noreferrer">美团面试：说说OOM三大场景和解决方案？ （绝对史上最全）</a></p><p><a href="https://mp.weixin.qq.com/s/5RehBI0KwDFzkY5ssuivEQ" target="_blank" rel="noopener noreferrer">(九)深入并发编程之并发容器：阻塞队列、写时复制容器、锁分段容器原理详谈</a></p><p><a href="https://mp.weixin.qq.com/s/BJ9ju3Ov6ZwgpbjoM2SDqA" target="_blank" rel="noopener noreferrer">(八)深入并发之Runnable、Callable、FutureTask及CompletableFuture原理分析</a></p><p><a href="https://mp.weixin.qq.com/s/n4OGEkfJ_ql-gifHVaN7ZA" target="_blank" rel="noopener noreferrer">四十五图，一万五千字！一文让你走出迷雾玩转Maven！</a></p><p><a href="https://mp.weixin.qq.com/s/iKz_iABnlibNb1fRM3RXmA" target="_blank" rel="noopener noreferrer">踩了一堆坑，终于把微服务系统全面升级 JDK17 和 SpringBoot3 了</a></p><p><a href="https://mp.weixin.qq.com/s/VGgT1faRKGnUuQ-HHQ3Q5g" target="_blank" rel="noopener noreferrer">奇思妙想的SQL｜兼顾性能的数据倾斜处理新姿势</a></p><p><a href="https://mp.weixin.qq.com/s/3xi9uu5OXVRS0dX1PxW9UA" target="_blank" rel="noopener noreferrer">如何成为一线 Leader</a></p><p><a href="https://mp.weixin.qq.com/s/f3yorGDYOFVeLydwkAPvFw" target="_blank" rel="noopener noreferrer">ForkJoinPool：大任务拆分，让并行嗨起来！</a></p><p><a href="https://mp.weixin.qq.com/s/h6Bhgcu7QqV0nMUvOUThsg" target="_blank" rel="noopener noreferrer">写了这么多年DateUtils，殊不知你还有这么多弯弯绕！</a></p><p><a href="https://mp.weixin.qq.com/s/8UNtMIllJ03ULZwE9WtVdg" target="_blank" rel="noopener noreferrer">这些年背过的面试题——Kafka篇</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/UXZa0lJfQznseNfRnld1_g" target="_blank" rel="noopener noreferrer">🤯 <!-- -->[<!-- -->性能优化<!-- -->]<!-- --> 浏览器跨域带来的一些性能问题</a></p><p><a href="https://mp.weixin.qq.com/s/uIupFpxXkbrKiEkCl_1ZYg" target="_blank" rel="noopener noreferrer">🧐 <!-- -->[<!-- -->跨端开发<!-- -->]<!-- --> 如何定位 Hybrid Web 页面中 Native 注入的 JS 代码</a></p><p><a href="https://sorrycc.com/book-a-philosophy-of-software-design" target="_blank" rel="noopener noreferrer">413 - 《读书笔记：A Philosophy of Software Design》</a></p><p><a href="https://www.totaltypescript.com/forwardref-with-generic-components" target="_blank" rel="noopener noreferrer">如何在泛型组件中使用 forwardRef</a></p><p><a href="https://sorrycc.com/hot-module-replacement-is-easy" target="_blank" rel="noopener noreferrer">译：Hot Module Replacement 原理</a></p><p><a href="https://mp.weixin.qq.com/s/ga5-g5sOTccc7z1ZCQ29jg" target="_blank" rel="noopener noreferrer">MDH Weekly 121 - 《开工大吉》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2月18日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月18日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月18日内容汇总"/>
        <updated>2024-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-d2a0b993dc7670c91648bb3cd9ddb230.png" width="1080" height="538" class="img_astN"></p><p>封面图：牛逼了！2月编程语言榜单：Go首次进入前十</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://towardsdatascience.com/how-to-cut-rag-costs-by-80-using-prompt-compression-877a07c6bedb" target="_blank" rel="noopener noreferrer">How to Cut RAG Costs by 80% Using Prompt Compression</a></p><p><a href="https://arxiv.org/abs/2401.08406" target="_blank" rel="noopener noreferrer">RAG vs Fine-tuning: Pipelines, Tradeoffs, and a Case Study on Agriculture</a></p><p><a href="https://towardsdatascience.com/rag-vs-finetuning-which-is-the-best-tool-to-boost-your-llm-application-94654b1eaba7" target="_blank" rel="noopener noreferrer">RAG vs Finetuning — Which Is the Best Tool to Boost Your LLM Application</a></p><p><a href="https://mp.weixin.qq.com/s/Nyu46KN0Hj2-r93vXVcbiQ" target="_blank" rel="noopener noreferrer">大语言模型之LlaMA系列- LlaMA 2及LLaMA2_chat(上)</a></p><p><a href="https://mp.weixin.qq.com/s/G8nKz4H3QSKBibSMYAzRvA" target="_blank" rel="noopener noreferrer">RAG还是微调？微软出了一份特定领域大模型应用建设流程指南</a></p><p><a href="https://mp.weixin.qq.com/s/FKC7Y-05L9VfukI-3EMvZw" target="_blank" rel="noopener noreferrer">谷歌全新大模型突然发布！100万token完爆GPT-4，仅靠提示词就能学会新语言</a></p><p><a href="https://mp.weixin.qq.com/s/iIIM3N1-1cE2SxBRdZ-ILg" target="_blank" rel="noopener noreferrer">扩展说明: 指令微调 Llama 2</a></p><p><a href="https://mp.weixin.qq.com/s/6q2LmwoFG2LcN0iHoZjjqw" target="_blank" rel="noopener noreferrer">社区供稿 | 图解大模型推理优化之 KV Cache</a></p><p><a href="https://mp.weixin.qq.com/s/va1Ua3koedNWKkln4v6Vvg" target="_blank" rel="noopener noreferrer">大模型性能优化之Prompt工程全面梳理：从zero shot到chain of thought再到花式XOT</a></p><p><a href="https://mp.weixin.qq.com/s/bJRFayNByx4D3ujGcEb47A" target="_blank" rel="noopener noreferrer">大模型RAG问答行业最佳案例及微调、推理双阶段实现模式：基于模块化(Modular)RAG自定义RAG Flow</a></p><p><a href="https://mp.weixin.qq.com/s/j07PkTCoxBzAhkyON1puPg" target="_blank" rel="noopener noreferrer">值得一看的大模型RAG问答总括性梳理：模块化(Modular)RAG范式的定义、构成及机遇</a></p><p><a href="https://www.bilibili.com/video/BV1tN4y1m78N" target="_blank" rel="noopener noreferrer">【有腔调的RAG】01 半结构化数据上的RAG</a></p><p><a href="https://www.bilibili.com/video/BV16w411J7sW" target="_blank" rel="noopener noreferrer">省钱！微软开源框架LLMLingua + LlamaIndex实现提示词压缩</a></p><p><a href="https://www.bilibili.com/video/BV1GK4y1q718" target="_blank" rel="noopener noreferrer">Ollama Python开发包实例 | 基于本地部署开源大模型的Streamlit聊天应用</a></p><p><a href="https://www.bilibili.com/video/BV1yH4y117oV" target="_blank" rel="noopener noreferrer">【隐私优先】Llama 2 + GPT4All + Chroma实现100%本地化RAG</a></p><p><a href="https://mp.weixin.qq.com/s/XZDG8ZaB4QqD5cgIDJT6vQ" target="_blank" rel="noopener noreferrer">大模型时代还不理解自注意力？这篇文章教你从头写代码实现</a></p><p><a href="https://mp.weixin.qq.com/s/4ZnL0_uMLBgbVCNVjPWGKg" target="_blank" rel="noopener noreferrer">陈丹琦团队新作：数据量砍95%，大模型性能更强了！Less is More</a></p><p><a href="https://juejin.cn/post/7298997940019314742" target="_blank" rel="noopener noreferrer">【AI 初体验】 llama2与LangChain 的 SQLDatabaseChain</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://juejin.cn/post/7306806944047415332" target="_blank" rel="noopener noreferrer">从物理机到K8S：应用系统部署方式的演进及其影响</a></p><p><a href="https://mp.weixin.qq.com/s/ujs3PT_g7yFHVW-klzTJNQ" target="_blank" rel="noopener noreferrer">Leetcode 算法题解精选</a></p><p><a href="https://mp.weixin.qq.com/s/HaVmckBGakEwu-EJ5JkONg" target="_blank" rel="noopener noreferrer">牛逼了！2月编程语言榜单：Go首次进入前十</a></p><p><a href="https://mp.weixin.qq.com/s/fQensm55bnzPKagMEVs8Ag" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#99 Not understanding how the GC works</a></p><p><a href="https://mp.weixin.qq.com/s/GwOvZYfT6Y7euZuum9868Q" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#98 Not using Go diagnostics tooling</a></p><p><a href="https://juejin.cn/post/7317462907302461475" target="_blank" rel="noopener noreferrer">一文搞懂Go GC演进史，讲的太细致了！</a></p><p><a href="https://juejin.cn/post/7307244392564408358" target="_blank" rel="noopener noreferrer">Rust 中的并发模型和所有权系统</a></p><p><a href="https://juejin.cn/post/7270326047342182419" target="_blank" rel="noopener noreferrer">Kitex：微服务架构下的高性能优化实践</a></p><p><a href="https://juejin.cn/post/7245919919223636023" target="_blank" rel="noopener noreferrer">探究 Go 的高级特性之 【处理1分钟百万请求】</a></p><p><a href="https://juejin.cn/post/7247428110165016613" target="_blank" rel="noopener noreferrer">探究 Go 的高级特性之 【领域驱动设计中篇】</a></p><p><a href="https://juejin.cn/post/7333027152139567113" target="_blank" rel="noopener noreferrer">用 Go 语言实现刘谦 2024 春晚魔术，还原尼格买提汗流浃背的尴尬瞬间!</a></p><p><a href="https://juejin.cn/post/7323087699479724042" target="_blank" rel="noopener noreferrer">还不敢写多线程程序？看看Go如何让并发控制简单有趣</a></p><p><a href="https://juejin.cn/post/7325733245166026793" target="_blank" rel="noopener noreferrer">从 fatal 错误到 sync.Map：Go中 Map 的并发策略</a></p><p><a href="https://juejin.cn/post/7330052230472663055" target="_blank" rel="noopener noreferrer">16. Go调度器系列解读（三）：GMP 模型调度时机</a></p><p><a href="https://juejin.cn/post/7327138554756857908" target="_blank" rel="noopener noreferrer">15. Go调度器系列解读（二）：Go 程序启动都干了些什么</a></p><p><a href="https://juejin.cn/post/7324931501926875170" target="_blank" rel="noopener noreferrer">14. Go调度器系列解读（一）：什么是 GMP</a></p><p><a href="https://juejin.cn/post/7319484272531701812" target="_blank" rel="noopener noreferrer">13. 入门 go 语言汇编，看懂 GMP 源码</a></p><p><a href="https://juejin.cn/post/7298645450554605568" target="_blank" rel="noopener noreferrer">8. 看 Go 源码，你需要了解 unsafe.Pointer</a></p><p><a href="https://juejin.cn/post/7293820517375164416" target="_blank" rel="noopener noreferrer">5. golang map 源码的逐句解读</a></p><p><a href="https://juejin.cn/post/7319418651069743167" target="_blank" rel="noopener noreferrer">一文搞懂Kubernetes 部署策略</a></p><p><a href="https://juejin.cn/post/7303075105390477323" target="_blank" rel="noopener noreferrer">滚动更新和回滚部署在 Kubernetes 中的工作原理</a></p><p><a href="https://juejin.cn/post/7291853227245764658" target="_blank" rel="noopener noreferrer">Go 项目标准布局？Go 官方出指南了</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/j_cslpQDjVIUm1CGjk9CQQ" target="_blank" rel="noopener noreferrer">阿里终面：Netty 如何做到单机百万并发</a></p><p><a href="https://mp.weixin.qq.com/s/9jKS_vW7lN3f-RwEDS7avw" target="_blank" rel="noopener noreferrer">8种专坑同事 SQL写法，性能降低100倍，不来看看</a></p><p><a href="https://mp.weixin.qq.com/s/GGvBCVWSLce7Gs0Z0B8Jvg" target="_blank" rel="noopener noreferrer">亿级推送，得物是怎么架构的</a></p><p><a href="https://mp.weixin.qq.com/s/cvuz0619FadtkzmjD47llg" target="_blank" rel="noopener noreferrer">详解Redis三大集群模式，轻松实现高可用！</a></p><p><a href="https://mp.weixin.qq.com/s/AMkub_c3bTk8O0NzsdW35Q" target="_blank" rel="noopener noreferrer">阿里Java面试官：CopyOnWriteArrayList底层是怎么保证线程安全的</a></p><p><a href="https://mp.weixin.qq.com/s/PlizO3EnFRmqn4Cl6nqiGA" target="_blank" rel="noopener noreferrer">还搞不懂ConcurrentHashMap底层源码，看这篇就够了</a></p><p><a href="https://mp.weixin.qq.com/s/gb9nqVfqrClZ5o4-B4Eadg" target="_blank" rel="noopener noreferrer">只需七步，教你轻松解决Redis热点Key问题</a></p><p><a href="https://mp.weixin.qq.com/s/FPYE1B839_8Yk1-YSiW-1Q" target="_blank" rel="noopener noreferrer">一文详解Redis中BigKey、HotKey的发现与处理</a></p><p><a href="https://mp.weixin.qq.com/s/dpXMqMSq_ZrXOeEInxlC_Q" target="_blank" rel="noopener noreferrer">Java 十亿行数据计算，最快6秒出结果，你能吗</a></p><p><a href="https://juejin.cn/post/7249380394457694263" target="_blank" rel="noopener noreferrer">从Kafka中学习高性能系统如何设计 | 京东云技术团队</a></p><p><a href="https://juejin.cn/post/7256104538230571067" target="_blank" rel="noopener noreferrer">由浅入深的介绍扣减业务中的一些高并发构建方案（上）</a></p><p><a href="https://juejin.cn/post/7226525442176778277" target="_blank" rel="noopener noreferrer">如何在微服务下保证事务的一致性 | 京东云技术团队</a></p><p><a href="https://juejin.cn/post/7309373606272761895" target="_blank" rel="noopener noreferrer">【Redis高可用系列】主从复制原理和复制方式分析</a></p><p><a href="https://juejin.cn/post/7300809038246608948" target="_blank" rel="noopener noreferrer">Redis删除数据后，为什么内存占用率还是很高</a></p><p><a href="https://juejin.cn/post/7290725204266287158" target="_blank" rel="noopener noreferrer">感觉Redis变慢了，这些可能的原因你查了没 (上)</a></p><p><a href="https://juejin.cn/post/7292975471448113192" target="_blank" rel="noopener noreferrer">感觉Redis变慢了，这些可能的原因你查了没 (下)</a></p><p><a href="https://juejin.cn/post/7280435879541637176" target="_blank" rel="noopener noreferrer">位图(bitmap)原理以及实现</a></p><p><a href="https://juejin.cn/post/7329694104118362139" target="_blank" rel="noopener noreferrer">亿万用户在线，一张bitmap统计全解密</a></p><p><a href="https://juejin.cn/post/7282666872218107915" target="_blank" rel="noopener noreferrer">如何使用Redis数据类型进行亿级别统计数据</a></p><p><a href="https://juejin.cn/post/7319273137765449763" target="_blank" rel="noopener noreferrer">MySQL事务未提交redolog能持久化到磁盘吗</a></p><p><a href="https://juejin.cn/post/7269296778226597927" target="_blank" rel="noopener noreferrer">结合MySQL更新流程看 undolog、redolog、binlog</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://juejin.cn/post/7275978708644511802" target="_blank" rel="noopener noreferrer">致所有渴望学习Rust的人的信</a></p><p><a href="https://juejin.cn/post/7327867132037611539" target="_blank" rel="noopener noreferrer">前端项目里都有啥</a></p><p><a href="https://juejin.cn/post/7302310196310294580" target="_blank" rel="noopener noreferrer">白嫖ChatGPT4.0 (第二弹)</a></p><p><a href="https://mp.weixin.qq.com/s/XuigLACJa95rJ9iJQhIDDg" target="_blank" rel="noopener noreferrer">字节跳动最热门的 15 个前端开源项目</a></p><p><a href="https://mp.weixin.qq.com/s/PUywO7JtYuO9H0fnLGsz-w" target="_blank" rel="noopener noreferrer">刘谦春晚魔术揭秘：约瑟夫环的数学魅力，JS实现下！</a></p><p><a href="https://mp.weixin.qq.com/s/tk_E1NP6ra0yxuSVumH6UA" target="_blank" rel="noopener noreferrer">我写了一个根据项目自动切换node版本的插件，再也不用手动使用命令切换了</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2月11日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月11日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月11日内容汇总"/>
        <updated>2024-02-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-4ddfe3a33bcfd972300e1fa8e273d003.png" width="900" height="520" class="img_astN"></p><p>封面图：Go1.22 正式发布！包含语言变化、性能提高、标准库变动等重要特性</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://arxiv.org/pdf/2401.15391.pdf" target="_blank" rel="noopener noreferrer">MultiHop-RAG: Benchmarking Retrieval-Augmented Generation for Multi-Hop Queries</a></p><p><a href="https://mp.weixin.qq.com/s/fV-dnbT5g8j_B3RXgRsuZQ" target="_blank" rel="noopener noreferrer">手把手教你，从零开始实现一个稀疏混合专家架构语言模型（MoE）</a></p><p><a href="https://mp.weixin.qq.com/s/jtpXKlABXwzlN8QjzT-sPA" target="_blank" rel="noopener noreferrer">苹果为自家芯片打造开源框架MLX，实现Llama 7B并在M2 Ultra上运行</a></p><p><a href="https://mp.weixin.qq.com/s/dSleYYKtE41RQ9AUf5ruMw" target="_blank" rel="noopener noreferrer">如何用LLM和自有知识库搭建智能Agent</a></p><p><a href="https://mp.weixin.qq.com/s/MY7sWGct2IxvDYvthY6A0g" target="_blank" rel="noopener noreferrer">万字详解专家混合：MoE模型</a></p><p><a href="https://mp.weixin.qq.com/s/JloI284hBrKyV0d2s7V3ug" target="_blank" rel="noopener noreferrer">Prompt Engineering：大模型 PUA 指南！</a></p><p><a href="https://mp.weixin.qq.com/s/IxQy6UMXaFn2odVFLhEXHw" target="_blank" rel="noopener noreferrer">Mixtral-8x7B 模型挖坑</a></p><p><a href="https://mp.weixin.qq.com/s/BITRn0NkpaVP0niiqevUaQ" target="_blank" rel="noopener noreferrer">精彩手绘全解：RAG技术，从入门到精通</a></p><p><a href="https://mp.weixin.qq.com/s/qeWEEmWlomjtFP5wQxUAcg" target="_blank" rel="noopener noreferrer">单卡3小时训练专属大模型Agent-基于LLaMA Factory实战</a></p><p><a href="https://mp.weixin.qq.com/s/DGeey6v3ntGhIorOd_eB3w" target="_blank" rel="noopener noreferrer">白话Embedding：普通人都能懂的科普文</a></p><p><a href="https://mp.weixin.qq.com/s/GGY-hvcNphj4fvPxJPLLrQ" target="_blank" rel="noopener noreferrer">Mixtral 8x7B: 超越GPT-3.5与Llama 2 70B的稀疏混合专家架构新篇章</a></p><p><a href="https://mp.weixin.qq.com/s/NSfAdIBXNzG9WNrz9jP1eA" target="_blank" rel="noopener noreferrer">3B模型不输7B LLaVA！北大多模态MoE模型登GitHub热榜</a></p><p><a href="https://mp.weixin.qq.com/s/HUW8MX2GhsdE3qFBvb1-Hg" target="_blank" rel="noopener noreferrer">GPT-4推理能力暴涨32%，谷歌新型思维链效果超CoT，计算成本可降至1/40</a></p><p><a href="https://mp.weixin.qq.com/s/Ddn-8zI7SF5VfoQPcoYuPg" target="_blank" rel="noopener noreferrer">阿里大模型春节礼包来了：代码可执行率超GPT-4，1.5版本全系列开源</a></p><p><a href="https://mp.weixin.qq.com/s/V3abZ1R-NYG7nMRngheYbA" target="_blank" rel="noopener noreferrer">刚刚，谷歌弃Bard发布超大杯Gemini，全面对标GPT-4，前2个月免费！</a></p><p><a href="https://mp.weixin.qq.com/s/O9PP4Oc_Ee3R_HxKyd31Qg" target="_blank" rel="noopener noreferrer">无需RLHF显著提升GPT-4/Llama2性能，北大团队提出Aligner对齐新范式</a></p><p><a href="https://mp.weixin.qq.com/s/mPO13cCbTgIkWZBfKSjFvA" target="_blank" rel="noopener noreferrer">手撕LangChain代码，新手请进</a></p><p><a href="https://mp.weixin.qq.com/s/Ks6X9RSCuNnTU2ZlQiGpqA" target="_blank" rel="noopener noreferrer">MoE 卷起来啦！又一微调版 Mixtral-8x7B 发布，试试效果怎么样</a></p><p><a href="https://mp.weixin.qq.com/s/lGcatebmosW9BerZyVRlBQ" target="_blank" rel="noopener noreferrer">不是 GPT4 用不起，而是本地运行 Mixtral-8x7B 更有性价比</a></p><p><a href="https://mp.weixin.qq.com/s/mmG8NQbG6fnmc4lHL1zHWQ" target="_blank" rel="noopener noreferrer">在 Mac 运行 OpenChat 3.5 大模型，AI推理APP仅2MB 完全可移植</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/4bd77FfQubPqdhcNJPFrsQ" target="_blank" rel="noopener noreferrer">代码验证斯特林公式的准确性</a></p><p><a href="https://mp.weixin.qq.com/s/-8IcAjN6T6LeE29p0nkqcQ" target="_blank" rel="noopener noreferrer">一些笔记工具工具以及memos介绍</a></p><p><a href="https://mp.weixin.qq.com/s/vr_-5HD0hFZYHmnnisByiA" target="_blank" rel="noopener noreferrer">Go 1.22.0 可称之为一次史诗级更新</a></p><p><a href="https://mp.weixin.qq.com/s/SFMKam051BIZI4gwz8nrKg" target="_blank" rel="noopener noreferrer">Go1.22 正式发布！包含语言变化、性能提高、标准库变动等重要特性</a></p><p><a href="https://mp.weixin.qq.com/s/8JAQxUQSfIggAIArokeL9g" target="_blank" rel="noopener noreferrer">实现基于 Grafana Loki 的日志报警</a></p><p><a href="https://mp.weixin.qq.com/s/P8E52qK6qeigwTMPWECBsw" target="_blank" rel="noopener noreferrer">齐活了，Grafana 发布大规模持续性能分析开源数据库 - Phlare</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/IsEDEu33HqHffFdv-A7WBw" target="_blank" rel="noopener noreferrer">DDD落地：从携程订单系统重构，看DDD的巨大价值</a></p><p><a href="https://mp.weixin.qq.com/s/QGmOz8jUjNo-3xKqVcWGmg" target="_blank" rel="noopener noreferrer">一次由于八股文引起的内存泄漏</a></p><p><a href="https://mp.weixin.qq.com/s/tNOhR16aC-cr5EqKiwbAOQ" target="_blank" rel="noopener noreferrer">网易面试：请设计一个高可用性的软件架构，说明设计思路</a></p><p><a href="https://mp.weixin.qq.com/s/L26rI11OV8hrfJVy5Yu78g" target="_blank" rel="noopener noreferrer">这些年背过的面试题——MySQL篇</a></p><p><a href="https://mp.weixin.qq.com/s/2I3gFQZY03OKhdJa1AVhmw" target="_blank" rel="noopener noreferrer">天天写业务代码，如何破局业务开发的本质</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/z5zzBWel6DooAS0bzY702g" target="_blank" rel="noopener noreferrer">瀑布流优化：我把小红书的瀑布流虚拟列表撕出来了</a></p><p><a href="https://mp.weixin.qq.com/s/GYtd3k0JXns1GZQyZzvHaQ" target="_blank" rel="noopener noreferrer">心遇APP站内玩法H5体验优化实践</a></p><p><a href="https://sorrycc.com/ssr-local-dates-without-fouc" target="_blank" rel="noopener noreferrer">译：如何避免 SSR 渲染本地日期时的 FOUC 问题</a></p><p><a href="https://sorrycc.com/danger-rehydration" target="_blank" rel="noopener noreferrer">译：危险的注水</a></p><p><a href="https://sorrycc.com/react-19-new-hooks" target="_blank" rel="noopener noreferrer">译：React 19 计划推出的新 Hook</a></p><p><a href="https://sorrycc.com/promise-with-resolvers" target="_blank" rel="noopener noreferrer">译：使用 Promise.withResolvers 延迟 Promise</a></p><p><a href="https://web.dev/articles/5-css-snippets-every-front-end-developer-should-know-in-2024" target="_blank" rel="noopener noreferrer">2024 年你需要知道的 5 个 CSS 代码片段</a></p><p><a href="https://www.youtube.com/watch?v=MTcPrTIBkpA" target="_blank" rel="noopener noreferrer">Partial Prerendering 的 What、Why 和 How</a></p><p><a href="https://www.robinwieruch.de/react-starter/" target="_blank" rel="noopener noreferrer">2024 年如何启动 React 项目</a></p><p><a href="https://mp.weixin.qq.com/s/fY-wz2LzkiZrvpblpSWlVw" target="_blank" rel="noopener noreferrer">MDH Weekly 120 - 《小册》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2月4日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月4日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/2月4日内容汇总"/>
        <updated>2024-02-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[alt text]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-a5ba8682f95c9c3d63a2f2a7a0fb4e99.png" width="1279" height="592" class="img_astN"></p><p>封面图：图文吃透Golang net/http 标准库--服务端</p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://arxiv.org/abs/2402.00157" target="_blank" rel="noopener noreferrer">Large Language Models for Mathematical Reasoning: Progresses and Challenges</a></p><p><a href="https://arxiv.org/abs/2401.15347" target="_blank" rel="noopener noreferrer">A Comprehensive Survey of Compression Algorithms for Language Models</a></p><p><a href="https://arxiv.org/abs/2401.14887" target="_blank" rel="noopener noreferrer">The Power of Noise: Redefining Retrieval for RAG Systems</a></p><p><a href="https://arxiv.org/abs/2401.15884" target="_blank" rel="noopener noreferrer">Corrective Retrieval Augmented Generation</a></p><p><a href="https://mp.weixin.qq.com/s/tFl0RQd3ex98_SAOIIfM_Q" target="_blank" rel="noopener noreferrer">从零构建现代深度学习框架(TinyDL-0.01)</a></p><p><a href="https://mp.weixin.qq.com/s/Z0iZR6iGSBe298eK1Er1Ow" target="_blank" rel="noopener noreferrer">本地运行面壁智能的“贺岁模型”：MiniCPM 2B</a></p><p><a href="https://mp.weixin.qq.com/s/Ni_vVDlxBaoUcgoVORw31A" target="_blank" rel="noopener noreferrer">「我在淘天做技术」2024年看AIGC是如何让1688主图焕发新春的</a></p><p><a href="https://mp.weixin.qq.com/s/em-mnps_Oqe1PLLpJ9hB-A" target="_blank" rel="noopener noreferrer">大模型推理框架RTP-LLM对LoRA的支持</a></p><p><a href="https://mp.weixin.qq.com/s/chxksL3zqbwyqHev1x43kw" target="_blank" rel="noopener noreferrer">LLM之LangChain（五）| 使用LangChain Agent分析非结构化数据</a></p><p><a href="https://mp.weixin.qq.com/s/a5uKQAxwfsREnXd0XPhu1A" target="_blank" rel="noopener noreferrer">LLM之RAG理论（六）| 高级RAG指南和技巧</a></p><p><a href="https://mp.weixin.qq.com/s/gDtzzSRunUrKjoIUGSHCvA" target="_blank" rel="noopener noreferrer">从零手搓MoE大模型，大神级教程来了</a></p><p><a href="https://juejin.cn/post/7325993514702258230" target="_blank" rel="noopener noreferrer">RAG进阶 多用户多文档</a></p><p><a href="https://juejin.cn/post/7325831147563958308" target="_blank" rel="noopener noreferrer">RAG 进阶 LlamaIndex多文档</a></p><p><a href="https://juejin.cn/post/7325724706139996201" target="_blank" rel="noopener noreferrer">RAG 进阶 多模态图片检索</a></p><p><a href="https://juejin.cn/post/7325800661232140327" target="_blank" rel="noopener noreferrer">RAG 进阶 半结构化数据</a></p><p><a href="https://juejin.cn/post/7310347016982069288" target="_blank" rel="noopener noreferrer">LlamIndex二 RAG应用开发</a></p><p><a href="https://juejin.cn/post/7310786591940165641" target="_blank" rel="noopener noreferrer">LlamaIndex 一 简单文档查询</a></p><p><a href="https://mp.weixin.qq.com/s/9cTNa_oya2Zj9YdDYodCvw" target="_blank" rel="noopener noreferrer">使用 Docker 快速上手中文版 LLaMA2 开源大模型</a></p><p><a href="https://mp.weixin.qq.com/s/_WStiyaAk7G-w2j6SVe4CA" target="_blank" rel="noopener noreferrer">部署必备—triton-inference-server的backend（一）——关于推理框架的一些讨论</a></p><p><a href="https://mp.weixin.qq.com/s/J1EdNtAx3B0yeQ7zeSDLQg" target="_blank" rel="noopener noreferrer">TensorRT-LLM初探（一）运行llama，以及triton tensorrt llm backend服务化</a></p><p><a href="https://mp.weixin.qq.com/s/xcNQBG69XkS6mOstzqROAw" target="_blank" rel="noopener noreferrer">H100推理飙升8倍！英伟达官宣开源TensorRT-LLM，支持10+模型</a></p><p><a href="https://mp.weixin.qq.com/s/jnQs5XhWeAqoitahmDhziQ" target="_blank" rel="noopener noreferrer">大语言模型推理提速：TensorRT-LLM 高性能推理实践</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/_RHDJ1VGfqolE_Uzorosbw" target="_blank" rel="noopener noreferrer">Go1.22 新特性：性能提高、Trace 大修、工作区支持 vendor 等</a></p><p><a href="https://mp.weixin.qq.com/s/h8SNvIVN1bFy8gBUB63_NA" target="_blank" rel="noopener noreferrer">json.Marshal为什么会对[]byte类型进行base64编码处理</a></p><p><a href="https://mp.weixin.qq.com/s/PvdZ_Ay9xgrY_SrDt-Sddw" target="_blank" rel="noopener noreferrer">Go调度器系列解读（二）：Go 程序启动都干了些什么</a></p><p><a href="https://mp.weixin.qq.com/s/MNuk0poC3s2tTx_DjyJAQA" target="_blank" rel="noopener noreferrer">Go语言中的Pinner.Pin</a></p><p><a href="https://mp.weixin.qq.com/s/wQqMu41e8pnLpnAZo0GLow" target="_blank" rel="noopener noreferrer">Kubernetes 调度器队列 - 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/CNTlXMWSmQ4dNbbCQpbjYg" target="_blank" rel="noopener noreferrer">Go语言通知协程退出(取消)的几种方式</a></p><p><a href="https://mp.weixin.qq.com/s/SC1tg6XxDi_y1bjj6lkw6w" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#97 Not relying on inlining</a></p><p><a href="https://mp.weixin.qq.com/s/_z801oBwANP27C-BXbHNZA" target="_blank" rel="noopener noreferrer">程序员才懂的乐趣：10亿行的挑战</a></p><p><a href="https://mp.weixin.qq.com/s/vHr56wXPVAl-b4tbnvhS5w" target="_blank" rel="noopener noreferrer">Kubernetes 调度器 - 核心流程 (下篇)</a></p><p><a href="https://mp.weixin.qq.com/s/g4NdoFWrcGmSMeQt8q1XtA" target="_blank" rel="noopener noreferrer">Go调度器系列解读（一）：什么是 GMP</a></p><p><a href="https://mp.weixin.qq.com/s/4hZ6laeQc5P2o2n1yKD_8w" target="_blank" rel="noopener noreferrer">Kubernetes 调度器 - 核心流程 (上篇)</a></p><p><a href="https://mp.weixin.qq.com/s/e7Z_kZrayTFx7y0hlzoTdg" target="_blank" rel="noopener noreferrer">图文讲透Golang标准库 net/http实现原理 -- 服务端</a></p><p><a href="https://mp.weixin.qq.com/s/b7dHVIVYsL-19gyzUujktA" target="_blank" rel="noopener noreferrer">利用 ChatGPT 高效搜索Go问题：举一反三的思考方式，高效查找解决方案</a></p><p><a href="https://mp.weixin.qq.com/s/d5nczMvDpELt8R5ZB08Yow" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#96 Not knowing how to reduce allocations</a></p><p><a href="https://mp.weixin.qq.com/s/l6Tq_bVDmMpwZg_rPfi1DQ" target="_blank" rel="noopener noreferrer">从慢速到SIMG: 一个Go优化的故事</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/jwAawzeKq_vTTYw58rvgVA" target="_blank" rel="noopener noreferrer">8种专坑同事的 SQL 写法，性能降低100倍，不来看看</a></p><p><a href="https://mp.weixin.qq.com/s/YF5D3RRvmVXNJ_Njsa1Txw" target="_blank" rel="noopener noreferrer">批量执行Redis命令的四种方式！</a></p><p><a href="https://mp.weixin.qq.com/s/hmO2BKuMMU8ZPxW0lj9ZHw" target="_blank" rel="noopener noreferrer">阿里面试：设计一个大并发、大数据的系统架构，说说设计思路</a></p><p><a href="https://mp.weixin.qq.com/s/mspeViqHosmh4kUI8S8ajA" target="_blank" rel="noopener noreferrer">码哥字节 124 篇优秀文章精选</a></p><p><a href="https://mp.weixin.qq.com/s/vzbLWE4JteqjkOFJwcgRhg" target="_blank" rel="noopener noreferrer">Kafka性能篇：为何Kafka这么"快"</a></p><p><a href="https://mp.weixin.qq.com/s/z4VjDaDDbspFz1rIBwazIA" target="_blank" rel="noopener noreferrer">Redis 核心篇：唯快不破的秘密</a></p><p><a href="https://mp.weixin.qq.com/s/NU-W6rpwH-6_RQnSgbfZqQ" target="_blank" rel="noopener noreferrer">链路追踪落地过程中的挑战与解决方案</a></p><p><a href="https://mp.weixin.qq.com/s/TbxisH1zzE58u7YoRi04yA" target="_blank" rel="noopener noreferrer">美团面试：Sentinel底层滑动时间窗限流算法怎么实现的</a></p><p><a href="https://mp.weixin.qq.com/s/sMeLfLachYpUq261usr4tQ" target="_blank" rel="noopener noreferrer">字节二面：Spring Boot Redis 可重入分布式锁实现原理</a></p><p><a href="https://mp.weixin.qq.com/s/nJeRvz7jb4i2eXzc4vpdvw" target="_blank" rel="noopener noreferrer">纠正误区：这才是 SpringBoot Redis 分布式锁的正确实现方式</a></p><p><a href="https://mp.weixin.qq.com/s/W5vbjWMG86zEca3CPvAadg" target="_blank" rel="noopener noreferrer">分库分表的 21 条法则，hold 住！</a></p><p><a href="https://mp.weixin.qq.com/s/DLmXspbokYhQ-j5tLnUMgw" target="_blank" rel="noopener noreferrer">腾讯二面：epoll性能那么高，为什么</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/ZkMc3-T0swxjJ4yujp1R1w" target="_blank" rel="noopener noreferrer">扩展你的前端知识库，毫无废话！</a></p><p><a href="https://mp.weixin.qq.com/s/lRzS_ZoJhzHmuOx0HCDTnw" target="_blank" rel="noopener noreferrer">TypeScript 5.4 beta: NoInfer 类型、闭包类型分析优化、条件类型判断优化等</a></p><p><a href="https://mp.weixin.qq.com/s/48cn-JU3uCZkpsi30cloiQ" target="_blank" rel="noopener noreferrer">升级到 React 18 的经验和教训</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1月28日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月28日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月28日内容汇总"/>
        <updated>2024-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🌟 AI 相关]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/DPTDaPkYdhY4KjR3hahKNA" target="_blank" rel="noopener noreferrer">单卡3小时训练专属大模型Agent-基于LLaMA Factory实战</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://www.bilibili.com/video/BV1Fw41177tk" target="_blank" rel="noopener noreferrer">#150 Go 并发模式介绍和创新创造【Go 夜读】</a></p><p><a href="https://mp.weixin.qq.com/s/68Pj0mEJF2Ks9X2pVFk87g" target="_blank" rel="noopener noreferrer">为什么 Golang Fasthttp 选择使用 slice 而非 map 存储请求数据</a></p><p><a href="https://mp.weixin.qq.com/s/e03KFBKXUXwzvw3dVPOH-Q" target="_blank" rel="noopener noreferrer">从 Context 看 Go 设计模式：接口、封装和并发控制</a></p><p><a href="https://mp.weixin.qq.com/s/s63mY3j4oBwpQmB4r4SeWw" target="_blank" rel="noopener noreferrer">50 条争论的文章发生了啥：Go 标准库 encoding/json 真的慢吗</a></p><p><a href="https://mp.weixin.qq.com/s/uyN2iHJPEjaYlQYpxTJ6bA" target="_blank" rel="noopener noreferrer">Kubernetes 控制器管理总结</a></p><p><a href="https://mp.weixin.qq.com/s/_BQjJT8zqvWrXXdO_YR8lA" target="_blank" rel="noopener noreferrer">使用cmux实现网络端口复用</a></p><p><a href="https://mp.weixin.qq.com/s/LIdlk0p32iW2KDjGHGflMQ" target="_blank" rel="noopener noreferrer">毫巅之微---不同写法的性能差异 番外篇</a></p><p><a href="https://mp.weixin.qq.com/s/EWq7-LYcq586U0PXaJeQHw" target="_blank" rel="noopener noreferrer">2024年的Rust与Go</a></p><p><a href="https://mp.weixin.qq.com/s/-mLxdZ5LXYoFKH_RinNqqw" target="_blank" rel="noopener noreferrer">Go 1.22 rc2 刚刚发布，多个新特性等着大家 forloop,math/rand/v2,增强 http routing</a></p><p><a href="https://mp.weixin.qq.com/s/8_pJiuOzoQt6xyoLUX0CIw" target="_blank" rel="noopener noreferrer">Go 服务网络不通？net/http自带的这个工具帮你快速定位</a></p><p><a href="https://mp.weixin.qq.com/s/2BY_93w8iAJOGpsCdgbGtA" target="_blank" rel="noopener noreferrer">golang pprof 监控系列(1) —— go trace 统计原理与使用</a></p><p><a href="https://mp.weixin.qq.com/s/IgXFofLEwhYYYUtIZ4_rTA" target="_blank" rel="noopener noreferrer">Go 定时器：Timer 和 Ticker</a></p><p><a href="https://mp.weixin.qq.com/s/gGr1aM1ijBmaejfwW2qqeA" target="_blank" rel="noopener noreferrer">Go1.22 新特性：增强 http.ServerMux 路由能力，将有更强的表现力！</a></p><p><a href="https://mp.weixin.qq.com/s/8ZSuq-vYbB62B1TRFF-MGA" target="_blank" rel="noopener noreferrer">细节对线，让你写出更安全的 Dockerfile</a></p><p><a href="https://mp.weixin.qq.com/s/A99rzi-SZ6QvAv8Sia5nGg" target="_blank" rel="noopener noreferrer">Go 语言中高效切片拼接和 GO 1.22 提供的新方法</a></p><p><a href="https://mp.weixin.qq.com/s/xwNZsIp3qMK532R9CVI31A" target="_blank" rel="noopener noreferrer">GO 中高效 int 转换 string 的方法与源码剖析</a></p><p><a href="https://mp.weixin.qq.com/s/gFR9WCMeZG9KxUBq11EGXw" target="_blank" rel="noopener noreferrer">Go合集 | 上新 腾讯Go安全指南</a></p><p><a href="https://mp.weixin.qq.com/s/CARzBDS3PSeH-EVrADvozA" target="_blank" rel="noopener noreferrer">《Go题库·16》读写锁底层是怎么实现的</a></p><p><a href="https://mp.weixin.qq.com/s/wzqKqHhWhJKA0T6V-6SAig" target="_blank" rel="noopener noreferrer">《Go题库·15》go struct 能不能比较</a></p><p><a href="https://mp.weixin.qq.com/s/wlS5IYD11HJnS-NqD-BvWA" target="_blank" rel="noopener noreferrer">Kubernetes GC 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/Ks1BDSw3mSxcxLp3VHObaw" target="_blank" rel="noopener noreferrer">Go 夜读第 150 期 Go 并发模式介绍和创新创造</a></p><p><a href="https://mp.weixin.qq.com/s/KB8BM9jNI5AS6QCG_6fHYw" target="_blank" rel="noopener noreferrer">跟着老猫来搞GO-内建容器Map</a></p><p><a href="https://mp.weixin.qq.com/s/bBefDLI2psURnUm3LhiAkA" target="_blank" rel="noopener noreferrer">这是我见过最酷的服务端日志收集方案！</a></p><p><a href="https://mp.weixin.qq.com/s/KqjvbhO4zN5oB-lmq0cNkg" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#95 Not understanding stack vs. heap</a></p><p><a href="https://mp.weixin.qq.com/s/OkBqiMEnha3SyCxBA0MkRQ" target="_blank" rel="noopener noreferrer">Go 语言实战：构建强大的延迟任务队列</a></p><p><a href="https://mp.weixin.qq.com/s/cw7p2EuUTIj1TAcfCdfbew" target="_blank" rel="noopener noreferrer">为什么 Go1.22 for 循环要支持整数范围</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/WaD8Go8twTF3CyoZm1ZICQ" target="_blank" rel="noopener noreferrer">万字详解微服务世纪难题：如何平滑拆分单体</a></p><p><a href="https://mp.weixin.qq.com/s/R-w5_FCVBmesVpLNFxWNhw" target="_blank" rel="noopener noreferrer">没用过微服务？别慌，丐版架构图，让你轻松拿捏面试官</a></p><p><a href="https://mp.weixin.qq.com/s/DK3YM3umDfuEIvX77DHdHA" target="_blank" rel="noopener noreferrer">从4万行代码降到1.8万，腾讯视频竟然用DDD做架构重构</a></p><p><a href="https://mp.weixin.qq.com/s/GVZWeBay7xKniiCHjc0yeg" target="_blank" rel="noopener noreferrer">转转支付通道监控系统的搭建</a></p><p><a href="https://mp.weixin.qq.com/s/27sPoF_p2cjgg_5Kq2hYCA" target="_blank" rel="noopener noreferrer">微服务架构下网关的技术选型</a></p><p><a href="https://zhuanlan.zhihu.com/p/147305277" target="_blank" rel="noopener noreferrer">Linux进程管理工具 Supervisor详解</a></p><p><a href="https://mp.weixin.qq.com/s/DA3HoEvCTXPDKvM5EvbXrg" target="_blank" rel="noopener noreferrer">SpringBoot + SpEL，轻松搞定复杂权限控制，非常优雅！</a></p><p><a href="https://mp.weixin.qq.com/s/IPUAlBmGgsQTGqodLGECLg" target="_blank" rel="noopener noreferrer">后端程序员必备：书写高质量SQL的30条建议</a></p><p><a href="https://mp.weixin.qq.com/s/8blLwTDT5lGqD2BYqaNlmg" target="_blank" rel="noopener noreferrer">云音乐RPC稳定性建设与实践</a></p><p><a href="https://mp.weixin.qq.com/s/l0FJsocKibWWxxW4Uk_mxQ" target="_blank" rel="noopener noreferrer">临时抱佛脚必看｜一个月速通高级系统架构设计师！</a></p><p><a href="https://mp.weixin.qq.com/s/azDbatL-bYqoNo08kQbVpQ" target="_blank" rel="noopener noreferrer">第一性原理：养猪还是读大学</a></p><p><a href="https://mp.weixin.qq.com/s/8vVU-UjbA5BFJJRBOSHgeQ" target="_blank" rel="noopener noreferrer">第二遍读俞军的神作《产品方法论》，真香！</a></p><p><a href="https://mp.weixin.qq.com/s/DWwkAax0tPj2mqikffJDfg" target="_blank" rel="noopener noreferrer">阿里面试：Sentinel熔断降级，是如何实现的</a></p><p><a href="https://mp.weixin.qq.com/s/s8xjm1ZCKIoTGT3DCVA4aw" target="_blank" rel="noopener noreferrer">深度剖析：Redis分布式锁到底安全吗？看完这篇文章彻底懂了！</a></p><p><a href="https://mp.weixin.qq.com/s/T6mMDdtTfBuIiEowCpqu6Q" target="_blank" rel="noopener noreferrer">搞懂异地多活，看这篇就够了</a></p><p><a href="https://mp.weixin.qq.com/s/HXj5YvANMIpceaspBWjmgg" target="_blank" rel="noopener noreferrer">一键部署 SpringCloud 微服务，yyds！</a></p><p><a href="https://mp.weixin.qq.com/s/yZC6VJGxt1ANZkn0SljZBg" target="_blank" rel="noopener noreferrer">Redis、ZooKeeper、Etcd，谁有最好用的分布式锁</a></p><p><a href="https://juejin.cn/post/7317926149119721507" target="_blank" rel="noopener noreferrer">提炼设计框架，一文搞懂Redis/MySQL/Kafka为什么这样设计</a></p><p><a href="https://mp.weixin.qq.com/s/IfLCzKsqTx_xUQkC4DB9KA" target="_blank" rel="noopener noreferrer">腾讯一面：32 位 4GB 系统，访问 2GB 数据，虚拟内存会发生什么</a></p><p><a href="https://mp.weixin.qq.com/s/FHt1IehO-XrpojJKsY7tkQ" target="_blank" rel="noopener noreferrer">1.5万字+30张图盘点索引常见的11个知识点</a></p><p><a href="https://mp.weixin.qq.com/s/JSnmeL68oOwCZzuLxZrb5Q" target="_blank" rel="noopener noreferrer">腾讯三面：一台服务器，最大支持的TCP连接数是多少</a></p><p><a href="https://mp.weixin.qq.com/s/IVgGXQKU1QiT1ToN2wXHJg" target="_blank" rel="noopener noreferrer">这些年背过的面试题——多线程篇</a></p><p><a href="https://mp.weixin.qq.com/s/g-vG2d9QaYn_-f3gCa1Jqg" target="_blank" rel="noopener noreferrer">阿里二面：要保证消息不丢失，又不重复，消息队列怎么选型</a></p><p><a href="https://mp.weixin.qq.com/s/2-V0Yf7sHxneKp0PJbYxBg" target="_blank" rel="noopener noreferrer">使用双异步后，如何保证数据一致性</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p>虚实之间有一期播客讲「拼多多出海的 - TEMU 增长背后黄铮的创业哲学和中企出海之路」听下来讲得很有逻辑，聊到了全托管模式如何简化，拼多多的传统技能低价，以及如何实现的低价，包括中国企业出海的几个阶段，很通俗易懂，值得学习。</p><p><a href="https://www.xiaoyuzhoufm.com/episode/657fc03f991e2ee608f54f98" target="_blank" rel="noopener noreferrer">https://www.xiaoyuzhoufm.com/episode/657fc03f991e2ee608f54f98</a></p><p>当你想将 feature 分支上的多个 commit 合并到 release 分支，并且希望在 release 分支上只看到一个合并提交时，可以使用 <code>git merge --squash</code> 命令：</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 确保你在 release 分支上</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> checkout release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 进行 squash 合并</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> merge feature --squash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 在解决完所有冲突后，需要将已解决的文件添加到暂存区</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 提交合并结果为一个新的单个 commit（注意：这里没有自动提交，需要手动提交）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> commit -m </span><span class="token string" style="color:#e3116c">"Squashed commit from feature-branch: Implemented XYZ feature"</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>注意，在 GitLab 提 Merge Request，可以在 Merge Request 页面中勾选 squash commit 选项</p></blockquote><p>合并代码遇到冲突，想回退到合并前的状态：</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> merge --abort</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>一个小技巧，<code>which</code> 命令可以用来查找可执行文件的路径：</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">which</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/Users/bytedance/.nvm/versions/node/v18.16.0/bin/npm</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://juejin.cn/post/7328564786596544523" target="_blank" rel="noopener noreferrer">框架中的类型编程： Hono 中的模板字符串类型编程</a></p><p><a href="https://juejin.cn/post/7328564786596528139" target="_blank" rel="noopener noreferrer">框架中的类型编程：tRPC &amp; Prisma 中的泛型应用</a></p><p><a href="https://mp.weixin.qq.com/s/KFUikcgNvNw15wqM2wPHJw" target="_blank" rel="noopener noreferrer">React 19 即将推出的 4 个全新 Hooks，很实用！</a></p><p><a href="https://mp.weixin.qq.com/s/1L75-L5eFFjuc4w0qBkXoQ" target="_blank" rel="noopener noreferrer">我用埋点让老板安静 （埋点篇）</a></p><p><a href="https://juejin.cn/post/7325993514701635638" target="_blank" rel="noopener noreferrer">Rust性能很高？不，它完全顶不住我的代码</a></p><p><a href="https://juejin.cn/post/7313423853223985167" target="_blank" rel="noopener noreferrer">[<!-- -->译<!-- -->]<!-- -->深度解析Webpack打包过程（2万字预警）</a></p><p><a href="https://mp.weixin.qq.com/s/3azGXsDFYoqaf0cWYlzDSw" target="_blank" rel="noopener noreferrer">MDH Weekly 119 – 《周刊重启和博客》</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1月21日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月21日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月21日内容汇总"/>
        <updated>2024-01-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🌟 AI 相关]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/yZo-HcGuWFQE8B63hZkqVQ" target="_blank" rel="noopener noreferrer">专补大模型短板的RAG有哪些新进展？这篇综述讲明白了</a></p><p><a href="https://mp.weixin.qq.com/s/RUdZjQMSlVOfHfhErSNXnA" target="_blank" rel="noopener noreferrer">用检索增强生成让大模型更强大，这里有个手把手的Python实现</a></p><p><a href="https://ar5iv.labs.arxiv.org/html/2005.11401" target="_blank" rel="noopener noreferrer">Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/fZpPkG-C0wZ5Z45H2aUxAA" target="_blank" rel="noopener noreferrer">慢聊Golang协程池Ants实现原理</a></p><p><a href="https://mp.weixin.qq.com/s/zCJIZ8lkOmFCe_we2W7fow" target="_blank" rel="noopener noreferrer">Kubernetes Networking Model &amp; CNI</a></p><p><a href="https://mp.weixin.qq.com/s/NCoM7M1xSx_9gjhfPJhlYw" target="_blank" rel="noopener noreferrer">for-range一个函数，还可以这么用</a></p><p><a href="https://mp.weixin.qq.com/s/u4nPO0oohpNlhxDLY92Qiw" target="_blank" rel="noopener noreferrer">跟我一起编写 Buildpacks：Go 版本篇</a></p><p><a href="https://mp.weixin.qq.com/s/4E1tD-Gzsi196Q8ZxrioJA" target="_blank" rel="noopener noreferrer">探索Cloud Native Buildpacks的奇妙世界</a></p><p><a href="https://mp.weixin.qq.com/s/UnpVbcGFiVv3xM7K8wQUxA" target="_blank" rel="noopener noreferrer">哈啰云原生弹性伸缩控制器实现细节</a></p><p><a href="https://mp.weixin.qq.com/s/YiCBaFZB5PlPvg8Z9E-tVg" target="_blank" rel="noopener noreferrer">使用 Rust 后，我写 Go 的方法都变了！</a></p><p><a href="https://mp.weixin.qq.com/s/z886NFcGeKkNm97YhBhc7w" target="_blank" rel="noopener noreferrer">Go1.22 新特性：Slices 变更 Concat、Delete、Insert 等函数，对开发挺有帮助！</a></p><p><a href="https://mp.weixin.qq.com/s/XApYnOB2H1OhojLbWk_YAA" target="_blank" rel="noopener noreferrer">Go 简单设计和实现可扩展、高性能的泛型本地缓存</a></p><p><a href="https://mp.weixin.qq.com/s/vx8i-fPI8g1fT7GGSK41oQ" target="_blank" rel="noopener noreferrer">Kubernetes HPA 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/OROQH9DzwFLnfWKmKmrxsA" target="_blank" rel="noopener noreferrer">从零开始：使用Prometheus与Grafana搭建监控系统</a></p><p><a href="https://mp.weixin.qq.com/s/0JHQE0Ivm1qTopSkwsFs7g" target="_blank" rel="noopener noreferrer">十分钟教你在 k8s 中部署一个前后端应用</a></p><p><a href="https://mp.weixin.qq.com/s/gUh6u8wSYcWPgvyquoqyaA" target="_blank" rel="noopener noreferrer">Go 夜读第 149 期：如何设计现代云原生网关： Easegress</a></p><p><a href="https://mp.weixin.qq.com/s/2PLBKpPuRa5zMY7bJLJXqg" target="_blank" rel="noopener noreferrer">Go Context 到底放第一个参数传，还是放结构体里</a></p><p><a href="https://mp.weixin.qq.com/s/g04NwXJrxNfHrHJTPKBrXw" target="_blank" rel="noopener noreferrer">优雅判断 interface 是否为 nil</a></p><p><a href="https://mp.weixin.qq.com/s/OrFw2yJuN-Syngpi6rLMzg" target="_blank" rel="noopener noreferrer">高效I/O并发处理：双缓冲和Exchanger</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://juejin.cn/post/7293122294788243467" target="_blank" rel="noopener noreferrer">CPU中的高科技：流水线、超标量、SIMD</a></p><p><a href="https://juejin.cn/post/7307146455537238043" target="_blank" rel="noopener noreferrer">让你的代码运行更快：掌握零拷贝技术</a></p><p><a href="https://juejin.cn/post/7263124928663683132" target="_blank" rel="noopener noreferrer">电商库存系统的防超卖和高并发扣减方案 | 京东云技术团队</a></p><p><a href="https://mp.weixin.qq.com/s/FZ3oN-SARKV-BiCcuu4SLw" target="_blank" rel="noopener noreferrer">向上管理：让你主动汇报就这么难</a></p><p><a href="https://mp.weixin.qq.com/s/H4Lf3ldi6ES5013WDjWtRg" target="_blank" rel="noopener noreferrer">RocketMQ 事务消息初体验</a></p><p><a href="https://mp.weixin.qq.com/s/5vBKKCf_ZHPuHpWtC5Twjw" target="_blank" rel="noopener noreferrer">云音乐服务端可视化编排平台 TangoFlow 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/iZLKntKlG9847fglMt2A7w" target="_blank" rel="noopener noreferrer">八分钟了解一致性算法 -- Raft算法</a></p><p><a href="https://mp.weixin.qq.com/s/FHCq-4yJOm8bT7yTiIkrow" target="_blank" rel="noopener noreferrer">代码之外：工程师的成长进阶秘籍</a></p><p><a href="https://mp.weixin.qq.com/s/YU8PVqfoe-1-upazosJFhw" target="_blank" rel="noopener noreferrer">复盘总结，不要错失最大财富</a></p><p><a href="https://mp.weixin.qq.com/s/LqVlSVR6lG6-jGRdEvYixw" target="_blank" rel="noopener noreferrer">为了让小白也能看懂这个死锁case，我请来了小黑</a></p><p><a href="https://mp.weixin.qq.com/s/fvBfKDtZLxNdMWWSLJm_bQ" target="_blank" rel="noopener noreferrer">阿里二面：要保证消息不丢失，又不重复，消息队列怎么选型</a></p><p><a href="https://mp.weixin.qq.com/s/Yhn04560RVhYTPKEFDAbIw" target="_blank" rel="noopener noreferrer">SpringCloud 远程调用为啥要采用HTTP，而不是RPC</a></p><p><a href="https://mp.weixin.qq.com/s/tMW3bneEd90ZcoP9VX0VBg" target="_blank" rel="noopener noreferrer">业务型团队开发生存指南</a></p><p><a href="https://mp.weixin.qq.com/s/g6Zn9oFclF-3Py_VI9AUgQ" target="_blank" rel="noopener noreferrer">DDD领域驱动工程落地实战</a></p><p><a href="https://mp.weixin.qq.com/s/gSxZtSCdSYTHYQwOO9EaKQ" target="_blank" rel="noopener noreferrer">支付宝：多线程事务怎么回滚？说用 @Transactional 可以回去等通知了！</a></p><p><a href="https://mp.weixin.qq.com/s/GZRFyAy43AmMJlZiFXH48w" target="_blank" rel="noopener noreferrer">DDD 四层微服务架构，开箱即用！</a></p><p><a href="https://mp.weixin.qq.com/s/r9_0xpRsp2ubgyvpiyMfuw" target="_blank" rel="noopener noreferrer">2 万字 + 20张图｜ 细说 Redis 九种数据类型和应用场景</a></p><p><a href="https://mp.weixin.qq.com/s/HaGsi29Qxflw0OAOi2dE7g" target="_blank" rel="noopener noreferrer">Redis 除了缓存，还支持哪些场景</a></p><p><a href="https://mp.weixin.qq.com/s/r_YJpPvjoz1xBeQQdiVEZw" target="_blank" rel="noopener noreferrer">Spring Boot + 规则引擎 URule，太强了！</a></p><p><a href="https://mp.weixin.qq.com/s/jKv9l_ro6rWei4QnXck-zw" target="_blank" rel="noopener noreferrer">单租户时代：SaaS范式转移</a></p><p><a href="https://mp.weixin.qq.com/s/ocxZ1BDiLpR5CT_JKABFNA" target="_blank" rel="noopener noreferrer">系统的可观察性是指什么</a></p><p><a href="https://mp.weixin.qq.com/s/yy31QEaDNkhXcC4T9blxJA" target="_blank" rel="noopener noreferrer">你管这破玩意儿叫高可用</a></p><p><a href="https://mp.weixin.qq.com/s/aFI60g2nMn_u9kTZk6hjAA" target="_blank" rel="noopener noreferrer">如何判断业务做不做，什么是UE模型</a></p><p><a href="https://mp.weixin.qq.com/s/crWQn2bT3AqtfmnK9PUKMQ" target="_blank" rel="noopener noreferrer">并发编程的12条规范</a></p><p><a href="https://mp.weixin.qq.com/s/u_B0AjIi4y73_Yv-m6bNWA" target="_blank" rel="noopener noreferrer">性能优化2.0，新增缓存后，程序的秒开率不升反降</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/sLT9Kot_LN4LQFV3STixAw" target="_blank" rel="noopener noreferrer">前端性能优化手册 - RoadMap</a></p><p><a href="https://mp.weixin.qq.com/s/134VAXPJczElvdYzNFcHhA" target="_blank" rel="noopener noreferrer">React 代码如何跑在小程序上</a></p><p><a href="https://mp.weixin.qq.com/s/dqhKJQ_bMVfSj6RN0wOtCQ" target="_blank" rel="noopener noreferrer">Taro编译mini-runner包的作用</a></p><p><a href="https://mp.weixin.qq.com/s/LiygBJqMN8U_vSpAjxMibQ" target="_blank" rel="noopener noreferrer">穿越时空：2023年前端技术盘点与2024年技术展望</a></p><p><a href="https://mp.weixin.qq.com/s/ChAhLD9pHfaGo2JIDfczqA" target="_blank" rel="noopener noreferrer">Monorepo 项目实现共享 Tailwind 配置</a></p><p><a href="https://mp.weixin.qq.com/s/-AP9CJe8BRqHKfKUFR5QuA" target="_blank" rel="noopener noreferrer">前端食堂技术周刊第 111 期：JS Rising Stars、2024 年如何写 CSS、两个 React、npm 年度回顾</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1月14日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月14日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月14日内容汇总"/>
        <updated>2024-01-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🌟 AI 相关]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/KpRT1MCq7ewJw_Heb5-ZrA" target="_blank" rel="noopener noreferrer">中信建投 | AI前沿系列（一）：混合专家模型技术（MoE）</a></p><p><a href="https://mp.weixin.qq.com/s/78mSLefUmZOagwZ5dMUyTg" target="_blank" rel="noopener noreferrer">《开源大模型食用指南》发布，7个小时，一杯奶茶速通大模型！</a></p><p><a href="https://mp.weixin.qq.com/s/0rS1qX37M-4FQT-d2DIsPw" target="_blank" rel="noopener noreferrer">Stable Diffusion XL Turbo 文生图和图生图实践</a></p><p><a href="https://mp.weixin.qq.com/s/3TgTDsUHCs8tcNLcabqukg" target="_blank" rel="noopener noreferrer">在 Nvidia Docker 容器编译构建显存优化加速组件 xFormers</a></p><p><a href="https://mp.weixin.qq.com/s/Tw8Yr_illbY6MQO4sAMO7g" target="_blank" rel="noopener noreferrer">Amazing OpenAI API：把非 OpenAI 模型都按 OpenAI API 调用</a></p><p><a href="https://mp.weixin.qq.com/s/5wiz-IaGhGFlbHmRdf1TUA" target="_blank" rel="noopener noreferrer">节省时间：AI 模型靠谱下载方案汇总</a></p><p><a href="https://mp.weixin.qq.com/s/PEHW4XJv0D2IN0W92CAi3A" target="_blank" rel="noopener noreferrer">修复 OpenCV 依赖错误的小工具：OpenCV Fixer</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/Idp0blvp5WvKRkTw2nD1Xg" target="_blank" rel="noopener noreferrer">Linux 6.8 网络优化, 大量并发连接的TCP性能提高40%左右</a></p><p><a href="https://juejin.cn/post/7314144983018782761" target="_blank" rel="noopener noreferrer">深入探索 Rust 中的 Panic 机制</a></p><p><a href="https://mp.weixin.qq.com/s/362o7pgILLEWL5NYVwz9Hw" target="_blank" rel="noopener noreferrer">探究 Go 源码中 panic &amp; recover 有哪些坑</a></p><p><a href="https://mp.weixin.qq.com/s/wXq3Sy1L_ElfTmhLYJiiQw" target="_blank" rel="noopener noreferrer">从《100 Go Mistakes》我总结了什么</a></p><p><a href="https://mp.weixin.qq.com/s/IRk2lA9aGAa0KAdBY4oXjA" target="_blank" rel="noopener noreferrer">3.深入TiDB：执行优化讲解</a></p><p><a href="https://mp.weixin.qq.com/s/C1YptWtsDw6YGepRpxFAQg" target="_blank" rel="noopener noreferrer">亲测体验Go语言模糊测试</a></p><p><a href="https://mp.weixin.qq.com/s/qeEO2zK7mz9JUYocHetBHA" target="_blank" rel="noopener noreferrer">Go 发布了一个非安全补丁的 Go 1.21.6</a></p><p><a href="https://mp.weixin.qq.com/s/BsZeSDxHwwSzjLjfjUIgIA" target="_blank" rel="noopener noreferrer">Go1.22 新特性：新的 math/rand/v2 库，更快更标准！</a></p><p><a href="https://mp.weixin.qq.com/s/ezG3VQLgE2e0AWSxsoBHRg" target="_blank" rel="noopener noreferrer">每秒百万数据点 Go 应用监控系统演进</a></p><p><a href="https://mp.weixin.qq.com/s/Ed39t5I0k0ynfPch-ex7Ag" target="_blank" rel="noopener noreferrer">别再用GDB了，一文掌握Go最好用的调试器Delve</a></p><p><a href="https://mp.weixin.qq.com/s/ZNojELz-zTGybcpGgCtfng" target="_blank" rel="noopener noreferrer">Kubernetes CronJob 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/-JBLJhU47kocCKXvBe-4uA" target="_blank" rel="noopener noreferrer">[<!-- -->go 面试<!-- -->]<!-- --> 实现服务高可用的策略和实践</a></p><p><a href="https://mp.weixin.qq.com/s/HZCqoRgBcT3ZNAlnlChS-Q" target="_blank" rel="noopener noreferrer">我是如何实现Go性能5倍提升的</a></p><p><a href="https://mp.weixin.qq.com/s/TU9FL2SVe5TW7Uq5I0o_Sg" target="_blank" rel="noopener noreferrer">深入理解Go标准库-ServeMux的使用与模式匹配</a></p><p><a href="https://mp.weixin.qq.com/s/s3BWg6iiCcDZRFh7oZJj5Q" target="_blank" rel="noopener noreferrer">深入理解Go标准库-http server的启动</a></p><p><a href="https://mp.weixin.qq.com/s/fKFSOA0ZoFLN4dedlRp-HA" target="_blank" rel="noopener noreferrer">使用 Grafana 和 Loki 监控传说中的武当纵云梯</a></p><p><a href="https://mp.weixin.qq.com/s/ivK0UmZjvtrJ_WyonwxN2w" target="_blank" rel="noopener noreferrer">Grafana 教程 - 构建你的第一个仪表盘</a></p><p><a href="https://mp.weixin.qq.com/s/AbggxNJXCMSAfmuIQ59E8A" target="_blank" rel="noopener noreferrer">成本更低、更可控，云原生可观测新计费模式正式上线</a></p><p><a href="https://mp.weixin.qq.com/s/FTf4VK1CV-hgf_LgB0T8fA" target="_blank" rel="noopener noreferrer">Kubernetes Job 设计与实现</a></p><p><a href="https://mp.weixin.qq.com/s/M_lV7FaIMxZGd6pZ9dDaAw" target="_blank" rel="noopener noreferrer">依赖Kafka的Go单元测试例解</a></p><p><a href="https://mp.weixin.qq.com/s/OnvniPEvDz6k5LLKGH1MFA" target="_blank" rel="noopener noreferrer">Go1.22 新特性：for 循环不再共享循环变量，且支持整数范围</a></p><p><a href="https://mp.weixin.qq.com/s/Lhw_VFL8UHD9edfbKt_QjQ" target="_blank" rel="noopener noreferrer">Go运行时的并发原语</a></p><p><a href="https://mp.weixin.qq.com/s/yHWzh89g6Naz0xRmo5FdGw" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#94 Not being aware of data alignment</a></p><p><a href="https://mp.weixin.qq.com/s/g6ohhBBQd0u4PzD1KhnKCA" target="_blank" rel="noopener noreferrer">Go 语言中 defer 使用时有哪些陷阱</a></p><p><a href="https://mp.weixin.qq.com/s/1BTdUMMPIMDobh1ZJ_gXAQ" target="_blank" rel="noopener noreferrer">Go语言之父的反思：我们做对了什么，做错了什么</a></p><p><a href="https://mp.weixin.qq.com/s/Nbc_V5v5QruZsd1PVsDQnA" target="_blank" rel="noopener noreferrer">学习C++20, 为Go的atomic类型插上一双翅膀</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/eDEjSdf93HE35ndVPpH13A" target="_blank" rel="noopener noreferrer">一张图总结架构设计的40个黄金法则</a></p><p><a href="https://mp.weixin.qq.com/s/Qwj4S4r9Mayy5_HG3ubw7w" target="_blank" rel="noopener noreferrer">这些年背过的面试题 — 架构设计篇</a></p><p><a href="https://mp.weixin.qq.com/s/faEtlyaNHW9AWE6LMTs4Ng" target="_blank" rel="noopener noreferrer">这些年背过的面试题——Spring篇</a></p><p>mysql 的 binlog、redolog、undolog 是啥：</p><ul><li>Binlog（二进制日志）：<ul><li>用于复制：在主从复制中，从数据库会重放主数据库中存储的 binlog，以实现主从同步。</li><li>数据库恢复：binlog 可以用于数据库的按时间点还原。</li></ul></li><li>Redo log（重做日志）：<ul><li>确保事务的持久性：在事务提交前，redo log 会将事务的修改操作记录下来，以确保在系统崩溃或重启时，可以重新执行这些操作。</li><li>防止脏页写入：在系统崩溃时，redo log 可以防止脏页（未提交的数据页）被写入磁盘。</li></ul></li><li>Undo log（撤销日志）：<ul><li>用于事务的回滚：在事务执行过程中，undo log 记录了事务修改前的数据版本，以便在事务回滚时恢复数据。</li><li>多版本并发控制（MVCC）：undo log 支持数据库的多版本并发控制机制，允许事务在不加锁的情况下读取一致的数据。</li></ul></li></ul><p>这些日志文件在 MySQL 中扮演着不同的角色，确保了数据库的一致性、持久性和并发控制。</p><p><a href="https://mp.weixin.qq.com/s/kaogMK5qz5vkfs9-BYu0Mg" target="_blank" rel="noopener noreferrer">使用懒加载 + 零拷贝后，程序的秒开率提升至99.99%</a></p><p><a href="https://mp.weixin.qq.com/s/NYH6jgDOp1MwnAUyUHM5yg" target="_blank" rel="noopener noreferrer">万字+20张图探秘Nacos注册中心核心实现原理</a></p><p><a href="https://mp.weixin.qq.com/s/8CYXOML5LvRlFRpNFOQCjw" target="_blank" rel="noopener noreferrer">7000字+30张图看懂分布式追踪系统原理</a></p><p><a href="https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg" target="_blank" rel="noopener noreferrer">拒绝用复杂度自慰：下云高可用的秘诀</a></p><p><a href="https://mp.weixin.qq.com/s/L-pb5GgWSVJsJa_nnWMVQQ" target="_blank" rel="noopener noreferrer">公司为什么要使用OKR，目的是什么</a></p><p><a href="https://mp.weixin.qq.com/s/gnRiDUhAvTgjXaQiROB66A" target="_blank" rel="noopener noreferrer">阿里面试：说说Rocketmq推模式、拉模式</a></p><p><a href="https://mp.weixin.qq.com/s/0Io-X0S9AY-s0HeRb_jbag" target="_blank" rel="noopener noreferrer">分布式事务概述与项目实战</a></p><p><a href="https://mp.weixin.qq.com/s/lbSJAv8zJ7NG4G3beNExUA" target="_blank" rel="noopener noreferrer">分布式锁最终解决方案是RedLock吗？为什么</a></p><p><a href="https://mp.weixin.qq.com/s/Xna4EDDPvg3vmMUgmsNewQ" target="_blank" rel="noopener noreferrer">刷了四百道算法题，我在项目里用过几道呢</a></p><p><a href="https://mp.weixin.qq.com/s/MsU0eNt4k7WqpBOQ8CAotA" target="_blank" rel="noopener noreferrer">烂大街的缓存穿透、缓存击穿和缓存雪崩，你真的懂了</a></p><p><a href="https://mp.weixin.qq.com/s/4Q7FzxgkqYCb5fGOARhvDg" target="_blank" rel="noopener noreferrer">抖音提前批二面：为啥不推荐使用外键</a></p><p><a href="https://mp.weixin.qq.com/s/V2p_p-KoDowlZxLN2by2Sg" target="_blank" rel="noopener noreferrer">增加索引 + 异步 + 不落地后，从 12h 优化到 15 min</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/0Tr3tNwl2wwZ3mVqB97mQg" target="_blank" rel="noopener noreferrer">有了它 Antd 样式覆盖不要太爽</a></p><p><a href="https://mp.weixin.qq.com/s/SZ-PHb5Mi3KnaEo3yNjR7g" target="_blank" rel="noopener noreferrer">一文带你从0到1做性能优化——国际化业务中台性能优化实践（上）</a></p><p>Bun 如何设置 npm registry，有时会用到 bunx 命令，会自动下载 npm 包，因此需要配置 npm registry：</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 在根目录建一个 `.bunfig.toml` 配置文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">vi</span><span class="token plain"> </span><span class="token environment constant" style="color:#36acaa">$HOME</span><span class="token plain">/.bunfig.toml</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>写入如下内容：</p><div class="language-toml codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-toml codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token plain">[install]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># set default registry as a string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">registry = "https://registry.npmjs.org"</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>参考：<a href="https://bun.sh/docs/install/registries" target="_blank" rel="noopener noreferrer">https://bun.sh/docs/install/registries</a></p></blockquote><p><a href="https://mp.weixin.qq.com/s/AKdqtR6DWxB-c4CCmz594g" target="_blank" rel="noopener noreferrer">两个 React</a></p><p><a href="https://mp.weixin.qq.com/s/BO29XPm7c9VKcQT_v9lOGw" target="_blank" rel="noopener noreferrer">2024 年前端预测</a></p><p><a href="https://mp.weixin.qq.com/s/vXQR_eTKAYI3_ylXxQJTLA" target="_blank" rel="noopener noreferrer">业务中后台用户体验优化方法论总结（体验篇）</a></p><p><a href="https://mp.weixin.qq.com/s/0bzsHVqxoyl9uth3iymp0A" target="_blank" rel="noopener noreferrer">分享4 个你可能感兴趣的 TikTok 前端面试题</a></p><p><a href="https://mp.weixin.qq.com/s/9O7D5mugTmnUuMinQmaEOw" target="_blank" rel="noopener noreferrer">Chrome 三方 Cookie 禁用已正式开始！</a></p><p><a href="https://mp.weixin.qq.com/s/FcQocQdxeaQijAA6oUjAZg" target="_blank" rel="noopener noreferrer">使用 Taro 开发鸿蒙原生应用 —— 快速上手，鸿蒙应用开发指南</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1月7日内容汇总]]></title>
        <id>https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月7日内容汇总</id>
        <link href="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/frontend-weekly/2024/1月7日内容汇总"/>
        <updated>2024-01-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[🌟 AI 相关]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_B0by" id="-ai-相关">🌟 AI 相关<a href="#-ai-相关" class="hash-link" aria-label="Direct link to 🌟 AI 相关" title="Direct link to 🌟 AI 相关">​</a></h2><p><a href="https://ar5iv.labs.arxiv.org/html/2303.08774" target="_blank" rel="noopener noreferrer">GPT-4 Technical Report</a></p><p><a href="https://trendingpapers.com/papers?o=pagerank_growth&amp;pd=Since%20beginning&amp;cc=Cited%20and%20uncited%20papers&amp;c=All%20categories" target="_blank" rel="noopener noreferrer">Today's top trending papers in Computer Science</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="️-go--云原生--rust-相关">⭐️ Go &amp; 云原生 &amp; Rust 相关<a href="#️-go--云原生--rust-相关" class="hash-link" aria-label="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关" title="Direct link to ⭐️ Go &amp; 云原生 &amp; Rust 相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/uJ1t0B8WBBryzvbLWDfl5A" target="_blank" rel="noopener noreferrer">小红书可观测 Metrics 架构演进，如何实现数十倍性能提升</a></p><p><a href="https://mp.weixin.qq.com/s/JkpzM06IWNb11wUaJWJn8Q" target="_blank" rel="noopener noreferrer">Java与Go到底差别在哪，谁要被时代抛弃</a></p><p>既然问题是 GC 占用的 CPU 过高，首先我们分析一下 CPU 热点，进一步确认一下问题。</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token plain">$ go tool pprof -seconds </span><span class="token number" style="color:#36acaa">30</span><span class="token plain"> https://</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">测试域名</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">/debug/pprof/profile</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个命令用于进行 30s 的 CPU 性能分析，在完成之后会进入 profile 的交互工具：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-6f548f77fa0e95aa9a9d6ab95f9d80c3.png" width="1080" height="579" class="img_astN"></p><p>这里直接输入 top 10 可以输出 flat 占比最高的 10 个函数，可以看到 runtime.mallocgc 的 cum 占比已经达到了 15%，占用了快到 3s CPU 时间。</p><p>Flat vs Cum：</p><ul><li>Flat 占比是指这个函数自身的代码使用了多少 CPU，不计算子函数的耗时。</li><li>而 Cum 则代表这个函数实际执行消耗了多少 CPU，也就是包括了所有的子函数（和子函数的子函数...）的耗时。</li></ul><p>交互工具这里输入 web 就会自动生成调用图（callgraph）并在浏览器里打开 ，限于文档空间这里只展示重要的部分 ：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-1-683aa46cda88e2e4851cafb7b0bd69ad.png" width="1080" height="593" class="img_astN"></p><p>先分析一下主流程，这里业务逻辑一共占用了 54% 左右的 CPU（最上面的 endpoint.handler 方法），再往下看，其中 33% 是 RPC 调用（左下角的 client.Invoke），12% 是结果输出（右边的 endpoint.httpOutput，包括写出 HTTP Response，日志上报，监控）。剩下 9% 左右就是实际的各种业务逻辑了，因为非常分散且没有集中的点，所以图上没有显示出来。</p><p>纵观这个图可以看出，除了 HTTP/RPC 网络调用占用了大部分 CPU 外，并没有其他很明显的 CPU 热点，这就让最后一个热点凸显了出来：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-2-5c611667acbef53bd5e869d2b1fd66fe.png" width="627" height="323" class="img_astN"></p><p>GC 占用的 CPU 在这次 Profiling 过程中占了 15%，比业务逻辑还高！到这里基本确认，GC 一定存在某些问题。</p><p>我们可以用另一个 pprof 工具 allocs 来确认猜测是否成立，这个工具会记录堆上的对象创建和内存分配，只需要把上面的 HTTP Path 最后的 profile 换成 allocs 即可：</p><div class="language-bash codeBlockContainer_Dtwu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_sgmo"><pre tabindex="0" class="prism-code language-bash codeBlock_zjcW thin-scrollbar"><code class="codeBlockLines_u4eB"><span class="token-line" style="color:#393A34"><span class="token plain">$ go tool pprof -seconds </span><span class="token number" style="color:#36acaa">30</span><span class="token plain"> https://</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">测试域名</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">/debug/pprof/allocs</span><br></span></code></pre><div class="buttonGroup_uzaf"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_MWsZ" aria-hidden="true"><svg class="copyButtonIcon_utg0" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_YlgY" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>和 CPU Profile 不一样，Allocs 的 Profile 会记录四个不同的信息，可以输入 o 查看 sample_index 的可选值：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-3-bbafc8990c4a974d946ea38f7de5fd28.png" width="1080" height="615" class="img_astN"></p><ul><li>alloc_object：新建对象数量记录；</li><li>alloc_space：分配空间大小记录；</li><li>inuse_object：常驻内存对象数量记录；</li><li>inuse_space：常驻内存空间大小记录。</li></ul><p>一般来说，inuse 相关的记录可以用于排查内存泄漏，OOM 等问题。这里我们是 GC 的问题，主要和内存申请和释放有关，所以先看下 alloc_space：</p><p>输入命令，sample_index=alloc_space，然后再 top 10 看下：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-4-a9208f57f0af1704b7cb06c16f03504d.png" width="1080" height="310" class="img_astN"></p><p>可以发现，这 30s 一共申请了 1300M 的内存，其中绝大多数都是框架和框架组件，比如 RPC 的网络读取（consumeBytes, ReadFrame），pb 的解析和序列化（marshal），名字服务的选址（Select），日志输出（log），监控上报（ReportAttr）。也没有明显的可疑对象。</p><p>我们进行一些简单计算：进行 profiling 的线上节点是 2C2G 配置，看监控单节点大约是 800 QPS 的流量，所以 30s 就是 2w4 的请求，申请了 1300M 的空间，平均一个请求就是大约 50KB 左右。</p><p>这个量也比较合理，毕竟一次请求我们需要储存 HTTP 包内容，解析成结构体，还需要调用两次 RPC 接口，最后做日志写出和监控上报，最后再给出返回值，50KB 的资源使用并不算大。而且绝大多数都是框架使用，即使用对象池把业务上的一些小对象复用，对这个内存申请也影响不大。</p><p>虽然这个步骤没有排查到想查的问题，但是却发现了一些其他的代码中的小问题，这里也顺便记录下。</p><p>首先，上面的 top 10 看不出任何问题，但是为了保险起见，看了一下 top 20：</p><p><img loading="lazy" alt="Alt text" src="https://frontend-weekly.oss-cn-hangzhou.aliyuncs.com/assets/images/image-5-a5064807d4f51b9f09c862b6bbc54678.png" width="1080" height="327" class="img_astN"></p><p>这里有三个我们业务代码里的函数，flat 都很少，占比加起来也不到 4.5%，不过既然发现了他们 ，就深入看一下函数里各行的分配情况，看看有没有什么问题。</p><p><a href="https://mp.weixin.qq.com/s/EEDNuhEr0G4SbTzDhVBjbg" target="_blank" rel="noopener noreferrer">只改一个参数让Golang GC耗时暴降到1/30！</a></p><p><a href="https://mp.weixin.qq.com/s/GFYudlHBuIr_bDe6IX4mlw" target="_blank" rel="noopener noreferrer">字节跳动云原生成本治理落地实践</a></p><p><a href="https://juejin.cn/post/7298160530292703244" target="_blank" rel="noopener noreferrer">Go 的 DDD 工程化项目实践</a></p><p><a href="https://juejin.cn/post/7279313746450235403" target="_blank" rel="noopener noreferrer">Rust 的所有权、借用和生命周期</a></p><p><a href="https://mp.weixin.qq.com/s/c4LWdwACitC2gH2tDu3E8g" target="_blank" rel="noopener noreferrer">Kubernetes Deployment 滚动更新实现原理</a></p><p><a href="https://mp.weixin.qq.com/s/vQz2-KhRenuimU7jvHtkkQ" target="_blank" rel="noopener noreferrer">[<!-- -->go 面试<!-- -->]<!-- --> 分布式事务框架选择与实践</a></p><p><a href="https://mp.weixin.qq.com/s/SlPdSoMs1po1l19uaNMrIQ" target="_blank" rel="noopener noreferrer">我是如何实现Go性能5倍提升的</a></p><p><a href="https://mp.weixin.qq.com/s/4ZT1Pu_lR56LmIQjFmy9Kg" target="_blank" rel="noopener noreferrer">完善 Golang Gin 框架的静态中间件：Gin-Static</a></p><p><a href="https://mp.weixin.qq.com/s/uuB97dnIHe0hxsoBrk6THg" target="_blank" rel="noopener noreferrer">Kubernetes 为什么需要 Ingress</a></p><p><a href="https://mp.weixin.qq.com/s/vDmSnZZXg1EnyeFMuj6orw" target="_blank" rel="noopener noreferrer">Uber Go 出了个静态分析工具 NilAway，还挺实用！</a></p><p><a href="https://mp.weixin.qq.com/s/oVSJz7MIUR7HNhU-hKnCJg" target="_blank" rel="noopener noreferrer">Go语言中常见100问题-#93 Not taking into account instruction-level</a></p><p><a href="https://mp.weixin.qq.com/s/a_v6_F6nqGlDcBUKyEQF2w" target="_blank" rel="noopener noreferrer">Rust使用gRPC</a></p><p><a href="https://mp.weixin.qq.com/s/6bgFUadhbCqDAwNgGsXgGg" target="_blank" rel="noopener noreferrer">这些流行的K8S工具，你都用上了吗</a></p><p><a href="https://mp.weixin.qq.com/s/yJqwcYqYmV1wWuo147fX4Q" target="_blank" rel="noopener noreferrer">Go测试的20个实用建议</a></p><p><a href="https://mp.weixin.qq.com/s/d7FdGBc0S0V3S4aRL4EByA" target="_blank" rel="noopener noreferrer">『每周译Go』Go 的抢占式调度（文末有彩蛋）</a></p><p><a href="https://mp.weixin.qq.com/s/YXxFVBrwlwf3YpIUhXFmTQ" target="_blank" rel="noopener noreferrer">了解go在协程调度上的改进</a></p><p><a href="https://mp.weixin.qq.com/s/n6K6tbDRdS5c0hMtmHxdFg" target="_blank" rel="noopener noreferrer">Go 语言为什么不支持并发读写 map</a></p><p><a href="https://mp.weixin.qq.com/s/dePs661VzQf_yi2aHsydIA" target="_blank" rel="noopener noreferrer">第一篇 旧话重提：获取和利用 goroutine id, machine id 和 process id</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-后端相关">📒 后端相关<a href="#-后端相关" class="hash-link" aria-label="Direct link to 📒 后端相关" title="Direct link to 📒 后端相关">​</a></h2><p><a href="https://juejin.cn/post/7315959676886450211" target="_blank" rel="noopener noreferrer">HBase深度历险 | 京东物流技术团队</a></p><p>项目中遇到一个问题，需要记住弹窗频控，一般来说跟着设备走，也就是在前端缓存。如果需要以用户维度，需要怎么设计，可以用 Redis Bitmap 实现。</p><p><a href="https://juejin.cn/post/7273025562155466764" target="_blank" rel="noopener noreferrer">Redis Bitmap：实现千万级用户签到的秘密武器</a></p><p><a href="https://mp.weixin.qq.com/s/yPRPakU1UM5iVY-1bwiHJQ" target="_blank" rel="noopener noreferrer">这些年在阿里学到的方法论</a></p><p><a href="https://mp.weixin.qq.com/s/MyK6QrNt3xtms_IBAb6sSQ" target="_blank" rel="noopener noreferrer">架构面试：全链路压测，你是怎么设计的</a></p><p><a href="https://mp.weixin.qq.com/s/ofaQwaOobZ_5xqcor6ObhA" target="_blank" rel="noopener noreferrer">阿里面试：如何保证RocketMQ消息有序？如何解决RocketMQ消息积压</a></p><p><a href="https://mp.weixin.qq.com/s/3w5Ld8zgc8DeTmoo7T31qw" target="_blank" rel="noopener noreferrer">网易面试：亿级用户，如何做微服务底层架构</a></p><p><a href="https://mp.weixin.qq.com/s/PRouD97LKd726m_aW5DWFw" target="_blank" rel="noopener noreferrer">美团面试：亿级数据 在线统计，如何实现</a></p><p><a href="https://mp.weixin.qq.com/s/SXsQ3T5SFK0SKg054m-7Mg" target="_blank" rel="noopener noreferrer">美团面试：ES+Redis+MySQL高可用，如何试实现</a></p><p><a href="https://mp.weixin.qq.com/s/_NAHYDIvmT7EbffXkIpqYw" target="_blank" rel="noopener noreferrer">字节面试：DDD架构，如何落地</a></p><p><a href="https://mp.weixin.qq.com/s/c9sioXo95QQmZ7AyQxFBtw" target="_blank" rel="noopener noreferrer">微服务下必须了解的4种部署策略！</a></p><p><a href="https://mp.weixin.qq.com/s/QzG3MupskxyV8eaGt2YOXw" target="_blank" rel="noopener noreferrer">自从用了这款链路追踪系统，睡觉真香！！</a></p><p><a href="https://mp.weixin.qq.com/s/EtPcGw3dYsKbd411FbZ0bA" target="_blank" rel="noopener noreferrer">逆风时刻，管理动作或成噪音</a></p><p><a href="https://mp.weixin.qq.com/s/w7xUHPCZZuCX_Is1eT5uZQ" target="_blank" rel="noopener noreferrer">这些年背过的面试题——架构设计篇</a></p><p><a href="https://mp.weixin.qq.com/s/Qwc0xsrOVD4ZTHohAb01yw" target="_blank" rel="noopener noreferrer">还得是腾讯，捞了我一把！</a></p><p><a href="https://mp.weixin.qq.com/s/zgymXmxo5kiKPG7QRs6Uiw" target="_blank" rel="noopener noreferrer">文末福利丨2023哔哩哔哩技术精选技术干货</a></p><p><a href="https://mp.weixin.qq.com/s/gLrRgfwmzMvk9T6MIY4cWg" target="_blank" rel="noopener noreferrer">能ping通，TCP就一定能连通吗</a></p><p><a href="https://mp.weixin.qq.com/s/rezUShZLEK_3f3Cfl2b_fw" target="_blank" rel="noopener noreferrer">微服务全做错了！谷歌提出新方法，成本直接降9倍！</a></p><p><a href="https://mp.weixin.qq.com/s/Ijh0taMzh7MUnuysjCB4gQ" target="_blank" rel="noopener noreferrer">备考两年，关于软考的经验都在这了</a></p><p><a href="https://mp.weixin.qq.com/s/EwdKRsu_U39bTJf4hbjIeA" target="_blank" rel="noopener noreferrer">我在阿里做开发的高效打工技巧总结</a></p><p><a href="https://juejin.cn/post/7313242116771627034" target="_blank" rel="noopener noreferrer">一文讲透消息队列RocketMQ实现消费幂等</a></p><p><a href="https://juejin.cn/post/7307467803975843891" target="_blank" rel="noopener noreferrer">订单场景-基于Redisson实现订单号生成</a></p><h2 class="anchor anchorWithStickyNavbar_B0by" id="-前端相关">📒 前端相关<a href="#-前端相关" class="hash-link" aria-label="Direct link to 📒 前端相关" title="Direct link to 📒 前端相关">​</a></h2><p><a href="https://mp.weixin.qq.com/s/u78Dr9DfLyCMAH8aTil5Lg" target="_blank" rel="noopener noreferrer">【第3162期】前端APM指标采集大冒险</a></p><p><a href="https://mp.weixin.qq.com/s/ENkssTfPQmS5_PjdIcXpBA" target="_blank" rel="noopener noreferrer">2023年最火的前端项目出炉，竟然是它</a></p><p><a href="https://mp.weixin.qq.com/s/2Cm7iBMTZk-YqX7G0WfwRQ" target="_blank" rel="noopener noreferrer">你的网站或许不需要前端构建（二）</a></p><p><a href="https://mp.weixin.qq.com/s/hEYGSa__fKr67nVjR1DFWA" target="_blank" rel="noopener noreferrer">2023 年 Node.js 性能状态</a></p><p><a href="https://mp.weixin.qq.com/s/Zlc-G6oD63mpSUVBiOs6FA" target="_blank" rel="noopener noreferrer">【第3157期】解锁前端新潜能：如何使用 Rust 锈化前端工具链</a></p><p><a href="https://mp.weixin.qq.com/s/yre8fxml3Sgykr4iG8_BSw" target="_blank" rel="noopener noreferrer">前端食堂技术周刊第 110 期：Vue3.4、新版 Vue DevTools 开源、AI 2023 年度总结合集</a></p>]]></content>
        <author>
            <name>加菲猫</name>
            <uri>https://github.com/Jiacheng787</uri>
        </author>
    </entry>
</feed>